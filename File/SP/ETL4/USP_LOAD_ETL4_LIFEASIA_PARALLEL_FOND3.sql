CREATE PROC [FOND_ID].[USP_LOAD_ETL4_LIFEASIA_PARALLEL_FOND3] @P_PRD_ID [INTEGER],@BATCH_NO [INT],@JOBNAMESTR [NVARCHAR](2000) AS

  
BEGIN TRY
	DECLARE 
			@V_START			datetime,
			@V_END				datetime,
			@V_DURATION			datetime,
			@V_FUNCTION_NAME	varchar(100),
			@V_DESCRIPTION		varchar(500),
			@V_PARAM			nvarchar(4000),
			@V_SEQNO			integer,
			@V_CREATED_DATE		DATETIME,
	        @V_START_DATE		DATE,
	        @V_END_DATE			DATE,
			@V_CMD				NVARCHAR(max),
			@V_CMD_1			VARCHAR(max),
			@V_CMD_2			NVARCHAR(max),
			@V_CMD_3			VARCHAR(max),
			@V_CMD_4			VARCHAR(max),
			@V_CMD_5			VARCHAR(max),
			@V_CMD_6			VARCHAR(max),
			@V_CMD_7			VARCHAR(max),
			@TABLE_IN			varchar(100),
			@TABLE_OUT			varchar(100),
			@TABLE_NAME			varchar(100),
			@IFRS17_YEAR		INTEGER = CAST(SUBSTRING (CAST (@P_PRD_ID AS VARCHAR) ,1,4) AS INT),
			@IFRS17_MONTH		INTEGER = CAST(SUBSTRING (CAST (@P_PRD_ID AS VARCHAR) ,5,2) AS INT),
			@BATCH_NUMBER		VARCHAR(5),
			@PRD_ID 			VARCHAR(8),
			@VOUCHERLIST_TABLE	varchar(100),
			@TABLE_INVALID		varchar(100),
			@TARGET_TABLE_NAME AS VARCHAR(100),
	
	--TEMPORARILY SET MANUAL 
	--SET @IFRS17_YEAR=2019;
	--SET @IFRS17_MONTH=11;
	--SET @IFRS17_YEAR		= cast(SUBSTRING (cast (@p_prd_id as varchar) ,1,4) as int);
	--SET @IFRS17_MONTH		= cast(SUBSTRING (cast (@p_prd_id as varchar) ,5,2) as int);
		
	------START GET RUN ID DETAIL FROM ABC------
     @BATCH_MASTER_ID    VARCHAR(20) = 0,
     @BATCH_RUN_ID       VARCHAR(20) = 0,
     @JOB_MASTER_ID      VARCHAR(20) = 0,
	 @JOB_RUN_ID         VARCHAR(20) = 0,
     @GMT_START_DTTM     VARCHAR(20) = CONVERT(DATETIME2, GETDATE()),
	 @BATCHDATE			 VARCHAR(20) = LEFT(@P_PRD_ID,6);
	 
	EXEC STAG_ID.USP_GetRunIdReturn
      @JobName        = @JOBNAMESTR,
      @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
      @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
      @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
      @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
      @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;

------END GET RUN ID DETAIL FROM ABC--------- 
	
------set variable----------------
	SET @BATCH_NUMBER		= CAST(@BATCH_NO AS VARCHAR);
	SET @V_FUNCTION_NAME	= 'FOND_ID.USP_LOAD_ETL4_LIFEASIA_PARALLEL_FOND3';
	SET @V_SEQNO			= 1;
	SET @V_START_DATE		= CONVERT(DATE, CONVERT(CHAR(10), @P_PRD_ID));
	SET @V_START			= CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION		= CONCAT('Start Initiation - Creating #FOND LIFEASIA NONRELATED TABLE ', @V_FUNCTION_NAME, ' : ', @V_START_DATE);
	SET @PRD_ID				= CONVERT(CHAR(8),@P_PRD_ID);	

--------------------------
	-- Error Log STEP 5-3 START 
	--------------------------
	SET @V_START = current_timestamp;
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_DESCRIPTION = 'Creating NONRELATED TABLE '+ @V_FUNCTION_NAME + ' - STEP 5-3 at ' + convert(varchar(20),current_timestamp) + ' with Error Message VALID TABLE (ifany): ' + ERROR_MESSAGE();

    INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
    VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	--------------------------
	-- Error Log STEP 5-3 END
	--------------------------
	
	SET @TABLE_OUT = (SELECT 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_'+CAST(@IFRS17_YEAR AS VARCHAR)+STAG_ID.LPAD(CAST(@IFRS17_MONTH  AS VARCHAR),2,'00')+'_'+@BATCH_NUMBER
						);
	IF OBJECT_ID(@TABLE_OUT,'U') IS NOT NULL 
	BEGIN
		EXEC ('DROP TABLE '+@TABLE_OUT);
	END
	
	--PRINT @TABLE_OUT;

	SET @V_CMD= (  
	'CREATE TABLE '+ @TABLE_OUT +' WITH ( DISTRIBUTION = HASH(ROWNO), HEAP )
	 AS
	 SELECT ACF.*,
	 CASE WHEN 
		(CASE WHEN FCT1.NEW_COA IS NOT NULL THEN FCT1.NEW_COA
			WHEN FCT2.NEW_COA IS NOT NULL THEN FCT2.NEW_COA
			WHEN FCT3.NEW_COA IS NOT NULL THEN FCT3.NEW_COA
			WHEN FCT4.NEW_COA IS NOT NULL THEN FCT4.NEW_COA
			WHEN FCT5.NEW_COA IS NOT NULL THEN FCT5.NEW_COA
			WHEN FCT6.NEW_COA IS NOT NULL THEN FCT6.NEW_COA
			WHEN FCT7.NEW_COA IS NOT NULL THEN FCT7.NEW_COA
			WHEN FCT8.NEW_COA IS NOT NULL THEN FCT8.NEW_COA
			WHEN FCT9.NEW_COA IS NOT NULL THEN FCT9.NEW_COA
			WHEN FCT10.NEW_COA IS NOT NULL THEN FCT10.NEW_COA
			WHEN FCT11.NEW_COA IS NOT NULL THEN FCT11.NEW_COA
			WHEN FCT12.NEW_COA IS NOT NULL THEN FCT12.NEW_COA
			WHEN FCT13.NEW_COA IS NOT NULL THEN FCT13.NEW_COA
			WHEN FCT14.NEW_COA IS NOT NULL THEN FCT14.NEW_COA
			WHEN FCT15.NEW_COA IS NOT NULL THEN FCT15.NEW_COA
			WHEN FCT16.NEW_COA IS NOT NULL THEN FCT16.NEW_COA
			ELSE NULL
			END) <> ''9999999999999'' 
		THEN NULL ELSE ''9999999999999'' END AS NEW_COA,
	'''+@BATCH_MASTER_ID+''' [BATCH_MASTER_ID],
	'''+@BATCH_RUN_ID+''' [BATCH_RUN_ID],
	'''+@JOB_MASTER_ID+''' [JOB_MASTER_ID],
	'''+@JOB_RUN_ID+''' [JOB_RUN_ID],
	'''+@BATCHDATE+''' [BATCHDATE],
	'''+@GMT_START_DTTM+''' [ETL_PROCESS_DATE_TIME]
	 FROM (
		SELECT 
		CAST(ROW_NUMBER()OVER(ORDER BY (SELECT NULL)) AS INTEGER) ROWNO,
		CAST(''IAI'' AS VARCHAR) ENTITY_ID,
		CAST(NULL AS VARCHAR) POLICY_NO,
		CAST(CASE WHEN (A.POLICY_FLAG IS NULL OR A.POLICY_FLAG = '''') THEN ''-'' ELSE A.POLICY_FLAG END AS VARCHAR) POLICY_IDENTIFIER,
		CAST(A.PRODUCT AS VARCHAR) PRODUCT_CD,
		CAST(A.PRODUCT AS VARCHAR) BENEFIT_CD,
		CAST(CASE WHEN (A.COHORT IS NULL OR A.COHORT = '''') THEN ''-'' ELSE STAG_ID.LPAD(SUBSTRING(A.COHORT,1,4),4,''0000'')+''-''+STAG_ID.LPAD(SUBSTRING(A.COHORT,5,2),2,''00'')+''-''+STAG_ID.LPAD(SUBSTRING(A.COHORT,7,2),2,''00'') END AS VARCHAR) COHORT_DT,
		CAST(
			CASE WHEN (SUBSTRING(A.SUN_GLCODE,1,10) IS NULL OR SUBSTRING(A.SUN_GLCODE,1,10) = '''') THEN ''-'' ELSE SUBSTRING(A.SUN_GLCODE,1,10) END AS VARCHAR) SUN_CD,
		CASE
		--BIN enhancement
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) IN (''1311219010'',''1311219020'',''4181010000'',''4182010000'') AND A.PRODUCT LIKE ''U%'' THEN A.BENEFIT_CODE
		--Renewal Suspense
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3394102000'' AND A.PSTATCODE = ''PS'' THEN ''PS''
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3394102000'' AND A.PROPOSAL_FLG = ''PS'' THEN ''PS''
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3394102000'' AND A.ORI_TRCDE = ''T642'' THEN ''T642''			
		')
	SET @V_CMD_1= (' 
		--Revenue Enhancement
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''4771050000'' THEN ''NONPS-O''
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3141401000'' THEN ''NONPS-O''	
		--WOP
			 WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_WV WHERE WV_FLG=1) THEN CONCAT(A.ORI_TRCDE,''-LE-WP'')
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''5119030000'' AND A.ORI_TRCDE IN (''T515'',''T516'',''T518'') AND A.SACSCODE+A.SACSTYP=''LEWV'' THEN CONCAT(A.ORI_TRCDE,''-LE-WV'')
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3141990000'' AND A.ORI_TRCDE IN (''B516'') AND A.SACSCODE+A.SACSTYP=''LEWP'' THEN CONCAT(A.ORI_TRCDE,''-LE-WP'')
			 WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_PEP WHERE PEP_FLG=1) THEN CONCAT(A.ORI_TRCDE,''-LE-EP'')
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) IN (''5119999000'') AND A.ORI_TRCDE IN (''T515'',''T516'',''T518'') AND A.SACSCODE+A.SACSTYP=''LERB'' THEN CONCAT(A.ORI_TRCDE,''-LE-RB'')
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3141990000'' AND A.ORI_TRCDE IN (''B516'') AND A.SACSCODE+A.SACSTYP=''LEEP'' THEN CONCAT(A.ORI_TRCDE,''-LE-EP'')
			 WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_CI WHERE CI_FLG=1) THEN CONCAT(A.ORI_TRCDE,''-I1DR-I1ER'')
			 WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_CI_LEG2 WHERE CI_FLG=1) THEN ''B516-I1DR-I1ER''
			 WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_CI_LEG3 WHERE CI_FLG=1) THEN CONCAT(A.ORI_TRCDE,''-I1DR-I1ER'')
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) IN (''5119030000'') AND A.ORI_TRCDE IN (''T515'',''T516'',''T518'') AND A.SACSCODE+A.SACSTYP=''LERB'' THEN CONCAT(A.ORI_TRCDE,''-LE-RB'')
			 --TPD	 
			 --WHEN (CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_WOP_TPD WHERE TPD_FLG=1) THEN NULL
			 --WHEN SUBSTRING(A.SUN_GLCODE,1,10) = ''3141990000'' AND A.ORI_TRCDE = ''B516'' AND A.SACSCODE+A.SACSTYP=''LEWP'' AND A.PSTATCODE = ''TP'' THEN ''B516-LE-WP-TP'' 
		--Basic
			 WHEN C.SOURCE_PARM_1 = ''case1'' THEN A.SACSCODE+''-''+A.SACSTYP+''-''+A.TRANS_CODE
			 WHEN C.SOURCE_PARM_1 = ''case2'' THEN A.SACSTYP
			 WHEN C.SOURCE_PARM_1 = ''case3'' THEN A.BENEFIT_CODE
			 WHEN C.SOURCE_PARM_1 = ''case5'' THEN A.PAIRING_ACCOUNT
			ELSE NULL END SOURCE_PARM_1,
		--Loyalty Bonus
		CASE WHEN A.PTDATE_DIFF > 60 AND A.PRODUCT IN (''U1U'',''U2W'',''U2V'',''U2T'',''U24'',''U26'',''U20'') AND 
			SUBSTRING(A.SUN_GLCODE,1,10) = ''4112310030'' AND A.TRANS_CODE = ''B633'' AND A.ORI_TRCDE = ''T989'' THEN ''T989'' 
		--Extra Allocation
			WHEN A.PTDATE_DIFF > 24 AND A.PTDATE_DIFF <= 60 AND A.PRODUCT IN (''U2V'') AND 
			(CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END) IN (SELECT RRN FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_EA_FLAG WHERE EA_FLG=1)
			AND	SUBSTRING(A.SUN_GLCODE,1,10) = ''4112310030'' AND A.ORI_TRCDE = ''B522'' AND A.SACSCODE+A.SACSTYP = ''LENI'' THEN ''T999''
		--BIN enhancement
			 WHEN SUBSTRING(A.SUN_GLCODE,1,10) IN (''1311219010'',''1311219020'') AND A.PRODUCT LIKE ''U%'' AND A.ORI_TRCDE = ''B633'' THEN ''B633''
		ELSE NULL END SOURCE_PARM_2,
		CAST(NULL AS VARCHAR) SOURCE_PARM_3,
		CAST(CASE WHEN (CAST(A.TRANS_DATE AS VARCHAR) IS NULL) THEN ''-'' ELSE SUBSTRING(CAST(A.TRANS_DATE AS VARCHAR),1,4)+''-''+SUBSTRING(CAST(A.TRANS_DATE AS VARCHAR),5,2)+''-''+SUBSTRING(CAST(A.TRANS_DATE AS VARCHAR),7,2) END AS VARCHAR) TXN_DT,
	')
	SET @V_CMD_2= (
		'CAST(CASE WHEN (A.ORIGCURR IS NULL OR A.ORIGCURR = '''') THEN ''-'' ELSE A.ORIGCURR END AS VARCHAR) ORG_CCY_CD,
		CAST(''IDR'' AS VARCHAR) RPT_CCY_CD,
		A.ORIG_AMT AMT_ORG_CCY,
		A.ACCT_AMT AMT_RPT_CCY,
		CAST(''LAS'' AS VARCHAR) PAS_NAME,
		CAST(CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'') AS BIGINT) ACCT_PERIOD,	
		CAST(A.VOUCHER_NO AS VARCHAR) VOUCHER_NO,
		CAST(CASE WHEN A.ACCT_AMT > 0 THEN ''DR'' ELSE ''CR'' END AS VARCHAR) AS CR_DR_FLG,
		CAST(CASE WHEN (A.T0 IS NULL OR A.T0 = '''') THEN ''-'' 
			WHEN (A.T0 = ''ITLP000'' AND A.T7 = ''P01'') THEN ''ITLS000''
			ELSE A.T0 END  AS VARCHAR) AS T0,
		CAST(NULL AS VARCHAR) T1,
		CAST(NULL AS VARCHAR) T2,
		CAST(NULL AS VARCHAR) T3,
		CAST(NULL AS VARCHAR) T4,
		CAST(NULL AS VARCHAR) T5,
		CAST(NULL AS VARCHAR) T6,
		CASE WHEN A.T0 = ''ITYT000'' THEN CAST(''TBR'' AS VARCHAR) ELSE CAST(A.T7 AS VARCHAR) END T7,
		CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END AS T8,
		CAST(CASE WHEN (A.GLCODE IS NULL OR A.GLCODE = '''') THEN ''-'' ELSE A.GLCODE END AS VARCHAR) JRNAL_CD,
		CASE WHEN (A.RDOCNUM IS NULL OR A.RDOCNUM = '''') THEN ''-'' ELSE A.RDOCNUM END RDOCNUM,
		CASE WHEN (A.RLDGACCT IS NULL OR A.RLDGACCT = '''') THEN ''-'' ELSE A.RLDGACCT END RLDGACCT,
		A.TRANNO TRANNO,
		CASE WHEN (A.TRANDESC IS NULL OR A.TRANDESC = '''') THEN ''-'' ELSE A.TRANDESC END AS TRANDESC,
		CASE WHEN (CAST(A.LIFECOVERAGERIDER AS VARCHAR) IS NULL OR CAST(A.LIFECOVERAGERIDER AS VARCHAR) = '''') THEN ''-'' ELSE A.LIFECOVERAGERIDER END AS LIFECOVERAGERIDER,
		A.EFFDATE,
		CAST(CASE 
																 
			WHEN (A.TRANREF IS NULL OR A.TRANREF = '''')
				THEN ''NON POLICY RELATED''
			ELSE ''POLICY RELATED'' END AS VARCHAR) POLICYRELATED_FLAG,
		A.TRANREF,
		CAST(A.SACSCODE AS VARCHAR(5)) SACSCODE,
		CAST(A.SACSTYP AS VARCHAR(5)) SACSTYP,
		A.TRANS_CODE,
		CAST(CASE WHEN (A.GLCODE_ORI IS NULL OR TRIM(A.GLCODE_ORI) = '''') THEN ''-'' ELSE TRIM(A.GLCODE_ORI) END AS VARCHAR) LFAGLCODE, 
		--CAST(A.CLAIM_NO AS VARCHAR) CLAIM_NO,
		CASE WHEN 
			CAST(
				CASE WHEN (SUBSTRING(A.SUN_GLCODE,1,10) IS NULL OR SUBSTRING(A.SUN_GLCODE,1,10) = '''') THEN ''-'' 
				ELSE SUBSTRING(A.SUN_GLCODE,1,10) 
		END AS VARCHAR) = ''5114900000'' THEN CAST(CONCAT(A.CLAIM_NO,''-SR'') AS VARCHAR) ELSE CAST(A.CLAIM_NO AS VARCHAR) END CLAIM_NO,
		CAST(NULL AS VARCHAR) TREATY_IDENTIFIER,
		CASE WHEN MOVEMENT=''ACMV PL'' THEN 
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''27''+STAG_ID.LPAD(ROW_NUMBER() OVER(ORDER BY (SELECT NULL)),18,''0'')) AS VARCHAR(32)),1,8) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''27''+STAG_ID.LPAD(ROW_NUMBER() OVER(ORDER BY (SELECT NULL)),18,''0'')) AS VARCHAR(32)),9,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''27''+STAG_ID.LPAD(ROW_NUMBER() OVER(ORDER BY (SELECT NULL)),18,''0'')) AS VARCHAR(32)),13,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''27''+STAG_ID.LPAD(ROW_NUMBER() OVER(ORDER BY (SELECT NULL)),18,''0'')) AS VARCHAR(32)),17,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''27''+STAG_ID.LPAD(ROW_NUMBER() OVER(ORDER BY (SELECT NULL)),18,''0'')) AS VARCHAR(32)),21,12)+''1''+STAG_ID.LPAD('''+@BATCH_NUMBER+''',2,''0'')+RIGHT('''+@JOB_MASTER_ID+''',2)
		ELSE
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''01''+STAG_ID.LPAD(CAST(A.ROWID AS VARCHAR),18,''0'')) AS VARCHAR(32)),1,8) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''01''+STAG_ID.LPAD(CAST(A.ROWID AS VARCHAR),18,''0'')) AS VARCHAR(32)),9,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''01''+STAG_ID.LPAD(CAST(A.ROWID AS VARCHAR),18,''0'')) AS VARCHAR(32)),13,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''01''+STAG_ID.LPAD(CAST(A.ROWID AS VARCHAR),18,''0'')) AS VARCHAR(32)),17,4) +''-''+
		SUBSTRING(CAST((CAST(A.BATCACTYR AS VARCHAR)+STAG_ID.LPAD(CAST(A.BATCACTMN AS VARCHAR),3,''0'')+''01''+STAG_ID.LPAD(CAST(A.ROWID AS VARCHAR),18,''0'')) AS VARCHAR(32)),21,12)+''1''+STAG_ID.LPAD('''+@BATCH_NUMBER+''',2,''0'')+RIGHT('''+@JOB_MASTER_ID+''',2)
		END
			TXN_SK,
		A.APRVDATE,
		A.BENEFIT_CODE CRTABLE,
		A.TAXCODE,
		A.MOVEMENT,
		A.OMNI_PRODUCT_CD,
		A.ALTREF,
		A.T0_4_REPLACE, 
		A.TG002_ABBB,
		A.TG002_OMNI_1_ABBB,
		A.TG002_OMNI_ABBB,
		A.T0_2A1_REPLACE,
		A.T0_2B1_REPLACE,
		A.T0_2B2_REPLACE,
		A.ITEMITEM,
		A.SL_PREFIX,
		A.T0_0_REPLACE,
		A.TG009_FLAG,
		A.BILLFREQ,
		A.CRRCD_DEFAULT,
		A.PTDATE,
		A.PAIRING_ACCOUNT,
		A.ORI_TRCDE,
		CASE WHEN NEW_RRN  = ''9999999999'' THEN CAST(NULL AS INT) ELSE A.NEW_RRN END RRN
		FROM (SELECT CAST(TB1.RRN AS VARCHAR) NEW_RRN, TB1.* FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_DATA11 TB1 WHERE RRN NOT IN (SELECT DISTINCT RRN FROM FOND_ID.FOND_LIFEASIA_ETL4_TEMP_DATA11_TABARU_BATCH'+@BATCH_NUMBER+')
			  UNION ALL SELECT CAST(TB2.RRN AS VARCHAR) NEW_RRN, TB2.* FROM FOND_ID.FOND_LIFEASIA_ETL4_TEMP_DATA11_TABARU_BATCH'+@BATCH_NUMBER+' TB2
			  UNION ALL SELECT NULL AS NEW_RRN, TB3.* FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_PL TB3) A 
		LEFT JOIN (SELECT SASCODE,SASTYPE,TCODE, MAX(TRANREF) TRANREF FROM STAG_ID.STAG_CONFIG_IFRS17_PARAM_TABLE_MAPPING_NONRELATED GROUP BY SASCODE,SASTYPE,TCODE) B ON B.SASCODE = A.SACSCODE AND B.SASTYPE = A.SACSTYP AND B.TCODE = A.TRANS_CODE
		LEFT JOIN STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE C ON SUBSTRING(A.SUN_GLCODE,1,10) = C.IFRS_SUN_CD 
		WHERE A.POLICY_FLAG = ''O'' AND ISDATE(CAST(CASE WHEN (A.COHORT IS NULL OR A.COHORT = '''') THEN ''-'' ELSE STAG_ID.LPAD(SUBSTRING(A.COHORT,1,4),4,''0000'')+''-''+STAG_ID.LPAD(SUBSTRING(A.COHORT,5,2),2,''00'')+''-''+STAG_ID.LPAD(SUBSTRING(A.COHORT,7,2),2,''00'') END AS VARCHAR)) = 1
		) ACF
	')
	SET @V_CMD_3 = ( 
	'LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT1
	  ON ACF.ENTITY_ID = FCT1.ENTITY_ID      --PRIORITY 1
	  AND ACF.SUN_CD = FCT1.SUN_CD
	  AND ACF.PAS_NAME = FCT1.PAS_NAME
	  AND ACF.T0 LIKE REPLACE(FCT1.FUND_CD,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT1.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT1.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_3 LIKE REPLACE(FCT1.SOURCE_PARM_ID_3,''*'','''')+''%''
	  AND FCT1.FUND_CD <> ''*''
	  AND FCT1.PAS_NAME <> ''*''
	  AND FCT1.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT1.SOURCE_PARM_ID_2 <> ''*''
	  AND FCT1.SOURCE_PARM_ID_3 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT2
	  ON ACF.ENTITY_ID = FCT2.ENTITY_ID      --PRIORITY 2
	  AND ACF.SUN_CD = FCT2.SUN_CD
	  AND ACF.PAS_NAME = FCT2.PAS_NAME
	  AND FCT2.FUND_CD = ''*''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT2.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT2.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_3 LIKE REPLACE(FCT2.SOURCE_PARM_ID_3,''*'','''')+''%''
	  AND FCT2.PAS_NAME <> ''*''
	  AND FCT2.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT2.SOURCE_PARM_ID_2 <> ''*''
	  AND FCT2.SOURCE_PARM_ID_3 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT3
	  ON ACF.ENTITY_ID = FCT3.ENTITY_ID      --PRIORITY 3
	  AND ACF.SUN_CD = FCT3.SUN_CD
	  AND FCT3.PAS_NAME = ''*''
	  AND ACF.T0 LIKE REPLACE(FCT3.FUND_CD,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT3.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT3.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_3 LIKE REPLACE(FCT3.SOURCE_PARM_ID_3,''*'','''')+''%''
	  AND FCT3.FUND_CD <> ''*''
	  AND FCT3.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT3.SOURCE_PARM_ID_2 <> ''*''
	  AND FCT3.SOURCE_PARM_ID_3 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT4
	  ON ACF.ENTITY_ID = FCT4.ENTITY_ID      --PRIORITY 4
	  AND ACF.SUN_CD = FCT4.SUN_CD
	  AND FCT4.FUND_CD = ''*''
	  AND FCT4.PAS_NAME = ''*''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT4.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT4.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_3 LIKE REPLACE(FCT4.SOURCE_PARM_ID_3,''*'','''')+''%''
	  AND FCT4.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT4.SOURCE_PARM_ID_2 <> ''*''
	  AND FCT4.SOURCE_PARM_ID_3 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT5
	  ON ACF.ENTITY_ID = FCT5.ENTITY_ID      --PRIORITY 5
	  AND ACF.SUN_CD = FCT5.SUN_CD
	  AND ACF.PAS_NAME = FCT5.PAS_NAME
	  AND ACF.T0 LIKE REPLACE(FCT5.FUND_CD,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT5.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT5.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND FCT5.SOURCE_PARM_ID_3 = ''*''
	  AND FCT5.FUND_CD <> ''*''
	  AND FCT5.PAS_NAME <> ''*''
	  AND FCT5.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT5.SOURCE_PARM_ID_2 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT6
	  ON ACF.ENTITY_ID = FCT6.ENTITY_ID      --PRIORITY 6
	  AND ACF.SUN_CD = FCT6.SUN_CD
	  AND ACF.PAS_NAME = FCT6.PAS_NAME
	  AND FCT6.FUND_CD = ''*''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT6.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT6.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND FCT6.SOURCE_PARM_ID_3 = ''*''
	  AND FCT6.PAS_NAME <> ''*''
	  AND FCT6.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT6.SOURCE_PARM_ID_2 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT7        
	  ON ACF.ENTITY_ID = FCT7.ENTITY_ID      --PRIORITY 7
	  AND ACF.SUN_CD = FCT7.SUN_CD
	  AND FCT7.PAS_NAME = ''*''
	  AND ACF.T0 LIKE REPLACE(FCT7.FUND_CD,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT7.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT7.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND FCT7.SOURCE_PARM_ID_3 = ''*''
	  AND FCT7.FUND_CD <> ''*''
	  AND FCT7.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT7.SOURCE_PARM_ID_2 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT8
	  ON ACF.ENTITY_ID = FCT8.ENTITY_ID      --PRIORITY 8
	  AND ACF.SUN_CD = FCT8.SUN_CD
	  AND FCT8.FUND_CD = ''*''
	  AND FCT8.PAS_NAME = ''*''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT8.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_2 LIKE REPLACE(FCT8.SOURCE_PARM_ID_2,''*'','''')+''%''
	  AND FCT8.SOURCE_PARM_ID_3 = ''*''
	  AND FCT8.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT8.SOURCE_PARM_ID_2 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT9
	  ON ACF.ENTITY_ID = FCT9.ENTITY_ID      --PRIORITY 9
	  AND ACF.SUN_CD = FCT9.SUN_CD
	  AND ACF.PAS_NAME = FCT9.PAS_NAME
	  AND ACF.T0 LIKE REPLACE(FCT9.FUND_CD,''*'','''')+''%''            
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT9.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND FCT9.SOURCE_PARM_ID_3 = ''*''
	  AND FCT9.SOURCE_PARM_ID_2 = ''*''
	  AND FCT9.FUND_CD <> ''*''
	  AND FCT9.SOURCE_PARM_ID_1 <> ''*''
	  AND FCT9.PAS_NAME <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT10
	  ON ACF.ENTITY_ID = FCT10.ENTITY_ID     --PRIORITY 10
	  AND ACF.SUN_CD = FCT10.SUN_CD
	  AND FCT10.FUND_CD= ''*''
	  AND ACF.PAS_NAME = FCT10.PAS_NAME
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT10.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND FCT10.SOURCE_PARM_ID_3 = ''*''
	  AND FCT10.SOURCE_PARM_ID_2 = ''*''
	  AND FCT10.PAS_NAME <> ''*''
	  AND FCT10.SOURCE_PARM_ID_1 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT11
	  ON ACF.ENTITY_ID = FCT11.ENTITY_ID     --PRIORITY 11
	  AND ACF.SUN_CD = FCT11.SUN_CD
	  AND FCT11.PAS_NAME = ''*''
	  AND ACF.T0 LIKE REPLACE(FCT11.FUND_CD,''*'','''')+''%''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT11.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND FCT11.SOURCE_PARM_ID_3 = ''*''
	  AND FCT11.SOURCE_PARM_ID_2 = ''*''
	  AND FCT11.FUND_CD <> ''*''
	  AND FCT11.SOURCE_PARM_ID_1 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT12
	  ON ACF.ENTITY_ID = FCT12.ENTITY_ID     --PRIORITY 12
	  AND ACF.SUN_CD = FCT12.SUN_CD
	  AND FCT12.FUND_CD = ''*''
	  AND FCT12.PAS_NAME = ''*''
	  AND ACF.SOURCE_PARM_1 LIKE REPLACE(FCT12.SOURCE_PARM_ID_1,''*'','''')+''%''
	  AND FCT12.SOURCE_PARM_ID_3 = ''*''
	  AND FCT12.SOURCE_PARM_ID_2 = ''*''
	  AND FCT12.SOURCE_PARM_ID_1 <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT13
	  ON ACF.ENTITY_ID = FCT13.ENTITY_ID     --PRIORITY 13
	  AND ACF.SUN_CD = FCT13.SUN_CD
	  AND ACF.PAS_NAME = FCT13.PAS_NAME
	  AND ACF.T0 LIKE REPLACE(FCT13.FUND_CD,''*'','''')+''%''
	  AND FCT13.SOURCE_PARM_ID_1 = ''*''
	  AND FCT13.SOURCE_PARM_ID_3 = ''*''
	  AND FCT13.SOURCE_PARM_ID_2 = ''*''
	  AND FCT13.PAS_NAME <> ''*''
	  AND FCT13.FUND_CD <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT14
	  ON ACF.ENTITY_ID = FCT14.ENTITY_ID     --PRIORITY 14
	  AND ACF.SUN_CD = FCT14.SUN_CD
	  AND FCT14.FUND_CD = ''*''
	  AND ACF.PAS_NAME = FCT14.PAS_NAME
	  AND FCT14.SOURCE_PARM_ID_3 = ''*''
	  AND FCT14.SOURCE_PARM_ID_2 = ''*''
	  AND FCT14.SOURCE_PARM_ID_1 = ''*''
	  AND FCT14.PAS_NAME <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT15
	  ON ACF.ENTITY_ID = FCT15.ENTITY_ID     --PRIORITY 15
	  AND ACF.SUN_CD = FCT15.SUN_CD
	  AND ACF.T0 LIKE REPLACE(FCT15.FUND_CD,''*'','''')+''%''
	  AND FCT15.PAS_NAME = ''*''
	  AND FCT15.SOURCE_PARM_ID_3 = ''*''
	  AND FCT15.SOURCE_PARM_ID_2 = ''*''
	  AND FCT15.SOURCE_PARM_ID_1 = ''*''
	  AND FCT15.FUND_CD <> ''*''
	LEFT JOIN (SELECT * FROM STAG_ID.TMP_'+@BATCH_NUMBER+'_FCT) FCT16
	  ON ACF.ENTITY_ID = FCT16.ENTITY_ID     --PRIORITY 16
	  AND ACF.SUN_CD = FCT16.SUN_CD
	  AND FCT16.FUND_CD = ''*''
	  AND FCT16.PAS_NAME = ''*''
	  AND FCT16.SOURCE_PARM_ID_3 = ''*''
	  AND FCT16.SOURCE_PARM_ID_2 = ''*''
	  AND FCT16.SOURCE_PARM_ID_1 = ''*''
	')
	EXEC (@V_CMD+@V_CMD_1+@V_CMD_2+@V_CMD_3);

	SET @V_CMD='UPDATE ' + @TABLE_OUT +' SET TAXCODE = SUBSTRING(LFAGLCODE,11,4), T7 = ''PSY''
	WHERE SUN_CD = ''6363010000'' AND SUBSTRING(LFAGLCODE,11,4) IN 
	(SELECT DISTINCT FUND_CD_LAS FROM STAG_ID.STAG_CONFIG_ETL2_IFIE_FUND_CD_MAPPING WHERE SHA_FLG = ''IAS'' AND FUND_CD_LAS IS NOT NULL)';
	EXEC (@V_CMD);
		
		SET @V_START = CURRENT_TIMESTAMP;
		SET @V_DESCRIPTION = CONCAT('Finish Insert Into ',@TABLE_OUT ,' on	: ', @V_START)
		RAISERROR (@V_DESCRIPTION, 0, 1) WITH NOWAIT

		--DECLARE @TARGET_TABLE_NAME AS VARCHAR(100);
		SET @TARGET_TABLE_NAME = ('FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + CAST(@IFRS17_YEAR AS VARCHAR) + STAG_ID.LPAD(CAST(@IFRS17_MONTH AS VARCHAR),2,'00'))
		--IF OBJECT_ID(@TARGET_TABLE_NAME,'U') IS NULL 
		--BEGIN
		--	EXEC ('CREATE TABLE '+@TARGET_TABLE_NAME + ' WITH(DISTRIBUTION = HASH(ROWNO), HEAP) AS ' + ' SELECT * FROM ' + @TABLE_OUT  );
		--END
		--ELSE
		--BEGIN
		SET @V_CMD = 'INSERT INTO ' 
					+ @TARGET_TABLE_NAME
					+ ' SELECT * FROM ' + @TABLE_OUT 
		EXEC (@V_CMD);
		--END

		SET @V_START = CURRENT_TIMESTAMP;
		SET @V_DESCRIPTION = CONCAT('Finish Insert Into ',('FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + CAST(@IFRS17_YEAR AS VARCHAR) + STAG_ID.LPAD(CAST(@IFRS17_MONTH AS VARCHAR),2,'00')),' on		: ', @V_START)
		RAISERROR (@V_DESCRIPTION, 0, 1) WITH NOWAIT
		
	------------------------------------------------------------
	-- SUB-STEP 5-3 - Load to target table - END
	------------------------------------------------------------
	
	--Delete Temp Tables
	SET @TABLE_OUT = (SELECT 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_'+CAST(@IFRS17_YEAR AS VARCHAR)+STAG_ID.LPAD(CAST(@IFRS17_MONTH  AS VARCHAR),2,'00')+'_'+@BATCH_NUMBER
						);
	IF OBJECT_ID(@TABLE_OUT,'U') IS NOT NULL 
	BEGIN
		EXEC ('DROP TABLE '+@TABLE_OUT);
	END

	SET @TABLE_OUT = (SELECT 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_'+CAST(@IFRS17_YEAR AS VARCHAR)+STAG_ID.LPAD(CAST(@IFRS17_MONTH  AS VARCHAR),2,'00')+'_'+@BATCH_NUMBER
						);
	IF OBJECT_ID(@TABLE_OUT,'U') IS NOT NULL 
	BEGIN
		EXEC ('DROP TABLE '+@TABLE_OUT);
	END

	SET @TABLE_OUT = (SELECT 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_'+CAST(@IFRS17_YEAR AS VARCHAR)+STAG_ID.LPAD(CAST(@IFRS17_MONTH  AS VARCHAR),2,'00')+'_'+@BATCH_NUMBER
						);
	IF OBJECT_ID(@TABLE_OUT,'U') IS NOT NULL 
	BEGIN
		EXEC ('DROP TABLE '+@TABLE_OUT);
	END

END TRY

BEGIN CATCH 
 
		DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE() 

		SET @V_START = current_timestamp;
		SET @V_SEQNO = @V_SEQNO + 1;
		SET @V_DESCRIPTION = @ErrorMessage

		INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,[DESCRIPTION])
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)

END CATCH

