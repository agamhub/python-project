/****** Object:  StoredProcedure [FOND_ID].[USP_LOAD_ETL4_LAS_COMMISSION_PAYABLE_WHT]    Script Date: 28/02/2024 17:45:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [FOND_ID].[USP_LOAD_ETL4_LAS_COMMISSION_PAYABLE_WHT] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@p_prd_id [integer] AS

BEGIN

	DECLARE
	@V_START			datetime,
	@V_END				datetime,
	@V_DURATION			datetime,
	@V_FUNCTION_NAME		varchar(100),
	@V_DESCRIPTION			varchar(500),
	@V_CMD				nvarchar(max),
	@V_PARAM			nvarchar(4000),
	@V_SEQNO			integer,
	@V_PRD_ID			integer,
	@V_PERIOD			varchar(10),
	@V_ACCT_PERIOD			varchar(10),
	@V_COUNT			integer,
	@V_COUNT_2			integer,
	@V_CREATED_DATE			datetime,
	@V_START_DATE			date,
	@V_END_DATE			date,
	@YEAR1 				integer,
	@MONTH1 			integer,

	------ START ABC ------
    @BATCH_MASTER_ID    VARCHAR(20) = 0,
    @BATCH_RUN_ID       VARCHAR(20) = 0,
    @JOB_MASTER_ID      VARCHAR(20) = 0,
    @JOB_RUN_ID         VARCHAR(20) = 0,
    @GMT_START_DTTM     VARCHAR(20) = GETDATE();
	 
	EXEC STAG_ID.USP_GetRunIdReturn
      @JobName         = @JOBNAMESTR,
      @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
      @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
      @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
      @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
      @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
	------ END ABC ---------
	
	SET @V_FUNCTION_NAME	= 'FOND_ID.USP_LOAD_ETL4_LAS_COMMISSION_PAYABLE_WHT';
	SET @V_PERIOD			= @BATCHDATESTR;
	SET @V_ACCT_PERIOD		= CONCAT(CONCAT(LEFT(@V_PERIOD,4),'0'),RIGHT(@V_PERIOD,2));
	SET @V_SEQNO			= 0;
	
	BEGIN TRY
	
	SET @V_START_DATE	= convert(date, convert(varchar(8), @p_prd_id), 112);
	SET @V_START 		= current_timestamp;

	-- Extracting Parameter Input Year
	SET @YEAR1           = YEAR(@V_START_DATE);
	-- Extracting Parameter Input Month
	SET @MONTH1          = MONTH(@V_START_DATE);
	PRINT	'Param Year: '+ convert(varchar(4), @YEAR1) +' and Month: '+ convert(varchar(2), @MONTH1);
	
	----------------------------------------------------
	-- STEP 1: INITIALIZATION
	----------------------------------------------------
	SET @V_DESCRIPTION 	= 'Start '+ @V_FUNCTION_NAME +' PARAM YEAR='+ convert(varchar(4), @YEAR1) +' PARAM MONTH='+ convert(varchar(2), @MONTH1) +': '+ convert(varchar(20), @V_START);
	PRINT	'Start '+ @V_FUNCTION_NAME +': '+ convert(varchar(20), @V_START);

	INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
	--- END OF STEP 1
	
	----------------------------------------------------
	-- STEP 2A: DROP TEMP TABLE IF EXISTS
	----------------------------------------------------
	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	SET @V_DESCRIPTION 	= 'DROP TABLE IF EXISTS etl4_lifeasia_wht,  commission_payable_wht, etc. Also FINAL TARGET TABLE: '+ convert(varchar(20),current_timestamp);
	PRINT	@V_DESCRIPTION;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#COMMISSION_PAYABLE_WHT'', ''U'') IS NOT NULL
	DROP TABLE #COMMISSION_PAYABLE_WHT';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT_NONRELATED'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_NONRELATED';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT_RELATED'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_RELATED';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT_AGG'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_AGG';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#PRE_DIFF_WHT'', ''U'') IS NOT NULL
	DROP TABLE #PRE_DIFF_WHT';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#DIFF_REAL_WHT'', ''U'') IS NOT NULL
	DROP TABLE #DIFF_REAL_WHT';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#DIFF_FROM_DIFF_REAL_WHT'', ''U'') IS NOT NULL
	DROP TABLE #DIFF_FROM_DIFF_REAL_WHT';
	EXEC sp_executesql @V_CMD;
		
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#AMT_DIFFERENCE_WHT'', ''U'') IS NOT NULL
	DROP TABLE #AMT_DIFFERENCE_WHT';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT_DIFFERENCE'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_DIFFERENCE';
	EXEC sp_executesql @V_CMD;
	
	SET @V_CMD = 
	N'IF OBJECT_ID(''tempdb.dbo.#ETL4_LIFEASIA_WHT_ZEROING'', ''U'') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_ZEROING';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD = 
	N'IF OBJECT_ID(''STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT'', ''U'') IS NOT NULL
	DROP TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD = 
	N'IF OBJECT_ID(''STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_NONRELATED_COM_WHT'', ''U'') IS NOT NULL
	DROP TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_NONRELATED_COM_WHT';
	EXEC sp_executesql @V_CMD;
	
	INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

	--- END OF STEP 2A
	
	----------------------------------------------------
	-- STEP 2B: CREATE TEMP TABLES BEFORE INSERTED TO TARGET TABLE
	----------------------------------------------------
	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	SET @V_DESCRIPTION 	= 'SELECT INTO etl4_lifeasia_wht, commission_payable_wht, and many more: '+ convert(varchar(20),current_timestamp);
	PRINT	@V_DESCRIPTION;
	
	SET @V_CMD =
	N'
	CREATE TABLE #ETL4_LIFEASIA_WHT
	WITH 
	(  
		CLUSTERED COLUMNSTORE INDEX,  
		DISTRIBUTION = HASH(RLDGACCT)
    )
	AS
	SELECT A.*,
	CAST(1 - A.MISSING_POLICY_NO / TOTAL_RECORDS * 1 AS FLOAT) POLICY_PERCENTAGE
	FROM 
		(
		SELECT 
		CAST(B.VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO,
		CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE,
		CAST(RLDGACCT AS VARCHAR(20)) RLDGACCT,
		CAST(ORG_CCY_CD AS VARCHAR(3)) ORG_CCY_CD,
		COUNT(1) TOTAL_RECORDS,
		SUM(AMT_RPT_CCY) TOT_AMT_RPT, SUM(AMT_ORG_CCY) TOT_AMT_ORI,
		CAST(COUNT(CASE WHEN POLICY_NO IS NULL THEN 1 ELSE NULL END) AS FLOAT) MISSING_POLICY_NO
		FROM
		(SELECT 
			POLICY_NO,
			ORG_CCY_CD,
			AMT_ORG_CCY,
			AMT_RPT_CCY,
			VOUCHER_NO,
			RLDGACCT,
			TRANS_CODE,
			SUN_CD
			FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B ON A.SUN_CD = B.IFRS_SUN_CD
		UNION ALL
		SELECT 
			POLICY_NO,
			ORG_CCY_CD,
			AMT_ORG_CCY,
			AMT_RPT_CCY,
			VOUCHER_NO,
			RLDGACCT,
			TRANS_CODE,
			SUN_CD
			FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B ON A.SUN_CD = B.IFRS_SUN_CD
		UNION ALL
		SELECT 
			POLICY_NO,
			ORG_CCY_CD,
			AMT_ORG_CCY,
			AMT_RPT_CCY,
			VOUCHER_NO,
			RLDGACCT,
			TRANS_CODE,
			SUN_CD
			FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B ON A.SUN_CD = B.IFRS_SUN_CD
		) B
		INNER JOIN
		(	SELECT DISTINCT VOUCHER_NO FROM
		(	SELECT DISTINCT VOUCHER_NO 
			FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			UNION ALL SELECT DISTINCT VOUCHER_NO FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			UNION ALL SELECT DISTINCT VOUCHER_NO FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		) C
		) C
		ON B.VOUCHER_NO = C.VOUCHER_NO
		GROUP BY B.VOUCHER_NO, B.TRANS_CODE, B.RLDGACCT, B.ORG_CCY_CD
		) A
		WHERE 1 - A.MISSING_POLICY_NO / TOTAL_RECORDS * 1 NOT IN (0, 1)';
	EXEC sp_executesql @V_CMD;
	
	SET @V_COUNT =
	(SELECT COUNT(1) FROM #ETL4_LIFEASIA_WHT);	
	
	IF @V_COUNT <> 0
	BEGIN
		SET @V_CMD = N'
		CREATE TABLE #ETL4_LIFEASIA_WHT_AGG
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(RLDGACCT)
		)
		AS
		SELECT CAST(A.VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(A.ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, SUM(ABS(AMT_ORG_CCY)) AS AGG_AMT_ORG_CCY, SUM(ABS(AMT_RPT_CCY)) AS AGG_AMT_RPT_CCY,
		COUNT(AMT_ORG_CCY) AS CNT_AMT_ORG_CCY, COUNT(AMT_RPT_CCY) AS CNT_AMT_RPT_CCY
		FROM 
		(SELECT A.* FROM
		(SELECT * FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		UNION ALL 
		SELECT * FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		WHERE POLICY_NO IS NOT NULL AND TRANS_CODE IN (''B671'',''B621'')) A
		INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B 
		ON A.SUN_CD = B.IFRS_SUN_CD) A
		INNER JOIN (SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
		ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT
		GROUP BY A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD';
		EXEC sp_executesql @V_CMD;
		
		SET @V_CMD = N'
		CREATE TABLE #ETL4_LIFEASIA_WHT_RELATED
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(POLICY_NO)
		)
		AS
		SELECT CAST(A.VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, 
		CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(ABS(AMT_ORG_CCY) AS NUMERIC(28,6)) AMT_ORG_CCY_ABS,
		CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(ABS(AMT_RPT_CCY) AS NUMERIC(28,6)) AMT_RPT_CCY_ABS,
		CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, CAST(ROWNO AS BIGINT) ROWNO, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(A.SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(A.RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST('''' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
		FROM (SELECT A.* FROM
		(SELECT * FROM 
		(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A 
		UNION ALL 
		SELECT * FROM 
		(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A 
		WHERE POLICY_NO IS NOT NULL AND TRANS_CODE IN (''B671'',''B621'')) A
		INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B ON A.SUN_CD = B.IFRS_SUN_CD) A
		INNER JOIN (SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
		ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT';
		EXEC sp_executesql @V_CMD;

		SET @V_CMD = N'
		CREATE TABLE #ETL4_LIFEASIA_WHT_NONRELATED
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(POLICY_NO)
		)
		AS
		SELECT CAST(A.VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, CAST(ROWNO AS BIGINT) ROWNO, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(A.SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(A.RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST('''' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
		FROM
		(SELECT A.* FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		INNER JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B ON A.SUN_CD = B.IFRS_SUN_CD) A
		INNER JOIN (SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
		ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT';
		EXEC sp_executesql @V_CMD;
		
		SET @V_CMD = N'
		CREATE TABLE #COMMISSION_PAYABLE_WHT
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(POLICY_NO)
		)
		AS
		SELECT
		ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, AMT_ORG_CCY, AMT_RPT_CCY, AGG_AMT_ORG_CCY, PAS_NAME, ACCT_PERIOD, VOUCHER_NO, 
		CASE WHEN AMT_RPT_CCY > 0 THEN ''DR'' ELSE ''CR'' END CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, RDOCNUM, RLDGACCT, TRANNO, TRANDESC, LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG, TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, APRVDATE, CRTABLE
		FROM
		(
		SELECT
		ROW_NUMBER() OVER(ORDER BY A.ENTITY_ID) ROWNO,
		A.ENTITY_ID,
		B.POLICY_NO,
		CASE WHEN B.POLICY_IDENTIFIER IS NULL THEN A.POLICY_IDENTIFIER ELSE B.POLICY_IDENTIFIER END POLICY_IDENTIFIER,
		B.PRODUCT_CD,
		B.BENEFIT_CD,
		A.COHORT_DT,
		A.SUN_CD,
		A.SOURCE_PARM_1,
		A.SOURCE_PARM_2,
		A.SOURCE_PARM_3,
		A.TXN_DT,
		B.ORIGINAL_CCY,
		A.REPORTING_CCY,
		CASE WHEN COALESCE(C.AGG_AMT_ORG_CCY,0) = 0 THEN ROUND((A.AMT_ORG_CCY/C.CNT_AMT_ORG_CCY),6) ELSE ROUND(((B.AMT_ORG_CCY_ABS/C.AGG_AMT_ORG_CCY)*A.AMT_ORG_CCY),6) END AMT_ORG_CCY,
		CASE WHEN COALESCE(C.AGG_AMT_RPT_CCY,0) = 0 THEN ROUND((A.AMT_RPT_CCY/C.CNT_AMT_RPT_CCY),6) ELSE ROUND(((B.AMT_RPT_CCY_ABS/C.AGG_AMT_RPT_CCY)*A.AMT_RPT_CCY),6) END AMT_RPT_CCY,
		C.AGG_AMT_ORG_CCY AS AGG_AMT_ORG_CCY,
		A.PAS_NAME,
		A.ACCT_PERIOD,
		A.VOUCHER_NO,
		CASE WHEN CAST(B.T0 AS VARCHAR(10)) IS NULL THEN CAST(A.T0 AS VARCHAR(10)) ELSE B.T0 END T0,
		CASE WHEN B.T1 IS NULL THEN A.T1 ELSE B.T1 END T1,
		CASE WHEN B.T2 IS NULL THEN A.T2 ELSE B.T2 END T2,
		CASE WHEN B.T3 IS NULL THEN A.T3 ELSE B.T3 END T3,
		CASE WHEN B.T4 IS NULL THEN A.T4 ELSE B.T4 END T4,
		CASE WHEN B.T5 IS NULL THEN A.T5 ELSE B.T5 END T5,
		CASE WHEN B.T6 IS NULL THEN A.T6 ELSE B.T6 END T6,
		CASE WHEN B.T7 IS NULL THEN A.T7 ELSE B.T7 END T7,
		CASE WHEN B.T8 IS NULL THEN A.T8 ELSE B.T8 END T8,
		A.JRNL_CD,
		A.RDOCNUM,
		A.RLDGACCT,
		A.TRANNO,
		A.TRANDESC,
		A.LIFECOVERAGERIDER,
		A.EFFDATE,
		A.POLICYRELATED_FLAG,
		A.TRANREF,
		A.SACSCODE,
		A.SACSTYP,
		A.TRANS_CODE,
		A.LFAGLCODE,
		A.CLAIM_NO,
		A.TREATY_IDENTIFIER,
		A.APRVDATE,
		B.CRTABLE
		FROM
		#ETL4_LIFEASIA_WHT_NONRELATED A
		LEFT JOIN #ETL4_LIFEASIA_WHT_RELATED B ON A.VOUCHER_NO=B.VOUCHER_NO AND A.RLDGACCT=B.RLDGACCT AND A.ORIGINAL_CCY=B.ORIGINAL_CCY
		LEFT JOIN #ETL4_LIFEASIA_WHT_AGG C ON A.VOUCHER_NO=C.VOUCHER_NO AND A.RLDGACCT=C.RLDGACCT AND A.ORIGINAL_CCY=C.ORIGINAL_CCY
		) D';
		EXEC sp_executesql @V_CMD;
		
		INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	END
	
	IF @V_COUNT = 0
	BEGIN
		SET @V_DESCRIPTION = 'NO DATA MATCH THE REQUIREMENT';
		PRINT @V_DESCRIPTION;
		
		INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	END	
	
	--- END OF STEP 2B
	
	----------------------------------------------------
	-- STEP 3: INSERT INTO TEMP TABLE
	-- CALCULATE DIFFERENCE BETWEEN ORIGINAL & ALLOCATED DATA. MOVE THE DIFFERENCE TO THE HIGHEST RECORD.
	----------------------------------------------------
	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	SET @V_DESCRIPTION 	= 'DATA INTO TEMP TABLE; CREATE TABLE etl4_lifeasia_wht_difference & etl4_lifeasia_wht_zeroing if there are differences: '+ CONVERT(VARCHAR(20),CURRENT_TIMESTAMP);
	PRINT	@V_DESCRIPTION;
		
	IF @V_COUNT <> 0
	BEGIN

	SET @V_CMD = N'
		CREATE TABLE #PRE_DIFF_WHT
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(RLDGACCT)
		)
		AS
		SELECT * FROM
		(SELECT * FROM
		(SELECT CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(ORG_CCY_CD AS VARCHAR(5)) ORG_CCY_CD,
		CAST(RPT_CCY_CD AS VARCHAR(5)) RPT_CCY_CD, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLG, SUM(AMT_ORG_CCY) AMT_ORG_CCY, SUM(AMT_RPT_CCY) AMT_RPT_CCY FROM
		(SELECT A.TRANS_CODE, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG, A.AMT_ORG_CCY, A.AMT_RPT_CCY FROM 
			(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		UNION ALL
		
		SELECT A.TRANS_CODE, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG, A.AMT_ORG_CCY, A.AMT_RPT_CCY FROM 
			(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		UNION ALL		
		
			SELECT A.TRANS_CODE, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG, A.AMT_ORG_CCY, A.AMT_RPT_CCY FROM 
			(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			INNER JOIN
			(SELECT DISTINCT TRANS_CODE, VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
			ON A.TRANS_CODE = B.TRANS_CODE AND A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT
			LEFT JOIN 
			(SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) C
			ON A.SUN_CD = C.IFRS_SUN_CD
			WHERE C.IFRS_SUN_CD IS NULL
		UNION ALL
			SELECT A.TRANS_CODE, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG, A.AMT_ORG_CCY, A.AMT_RPT_CCY FROM 
			(SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			LEFT JOIN
			(SELECT DISTINCT TRANS_CODE, VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
			ON A.TRANS_CODE = B.TRANS_CODE AND A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT
			WHERE B.TRANS_CODE IS NULL AND A.TRANS_CODE IN (''B671'',''B621'')
		UNION ALL
			SELECT TRANS_CODE, VOUCHER_NO, RLDGACCT, ORIGINAL_CCY ORG_CCY_CD, REPORTING_CCY RPT_CCY_CD, CR_DR_FLAG CR_DR_FLG, AMT_ORG_CCY, AMT_RPT_CCY FROM #COMMISSION_PAYABLE_WHT
		) A
		GROUP BY TRANS_CODE, VOUCHER_NO, RLDGACCT, ORG_CCY_CD, RPT_CCY_CD, CR_DR_FLG
		) A
		WHERE AMT_ORG_CCY <> 0 OR AMT_RPT_CCY <> 0	
		) A';
	EXEC sp_executesql @V_CMD;

	SET @V_CMD =
		N'
		CREATE TABLE #DIFF_REAL_WHT
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(RLDGACCT)
		)
		AS
		SELECT * FROM
		(SELECT CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(ORG_CCY_CD AS VARCHAR(5)) ORG_CCY_CD, CAST(RPT_CCY_CD AS VARCHAR(5)) RPT_CCY_CD, 
		CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLG, SUM(AMT_ORG_CCY) AMT_ORG_CCY, SUM(AMT_RPT_CCY) AMT_RPT_CCY
		FROM 
		(SELECT TRANS_CODE, VOUCHER_NO, RLDGACCT, ORG_CCY_CD, RPT_CCY_CD, CR_DR_FLG, AMT_ORG_CCY, AMT_RPT_CCY FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		WHERE TRANS_CODE IN (''B671'',''B621'')
		UNION ALL
		SELECT TRANS_CODE, VOUCHER_NO, RLDGACCT, ORG_CCY_CD, RPT_CCY_CD, CR_DR_FLG, AMT_ORG_CCY, AMT_RPT_CCY FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		WHERE TRANS_CODE IN (''B671'',''B621'')
		UNION ALL
		SELECT TRANS_CODE, VOUCHER_NO, RLDGACCT, ORG_CCY_CD, RPT_CCY_CD, CR_DR_FLG, AMT_ORG_CCY, AMT_RPT_CCY FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
		WHERE TRANS_CODE IN (''B671'',''B621'')) A
		GROUP BY TRANS_CODE, VOUCHER_NO, RLDGACCT, ORG_CCY_CD, RPT_CCY_CD, CR_DR_FLG) A
		WHERE AMT_ORG_CCY <> 0 OR AMT_RPT_CCY <> 0';
	EXEC sp_executesql @V_CMD;
		
	SET @V_CMD =
		N'
		CREATE TABLE #AMT_DIFFERENCE_WHT
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(RLDGACCT)
		)
		AS
			SELECT * FROM
			(
			SELECT CAST(A.TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(A.VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(A.ORG_CCY_CD AS VARCHAR(5)) ORG_CCY_CD, 
			CAST(A.RPT_CCY_CD AS VARCHAR(5)) RPT_CCY_CD, CAST(A.CR_DR_FLG AS VARCHAR(2)) CR_DR_FLG, (A.AMT_ORG_CCY - B.AMT_ORG_CCY) AMT_ORG_CCY, (A.AMT_RPT_CCY - B.AMT_RPT_CCY) AMT_RPT_CCY
			FROM 
			(SELECT A.* FROM #PRE_DIFF_WHT A
			INNER JOIN 
			(SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
			ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT) A
			INNER JOIN #DIFF_REAL_WHT B
			ON A.TRANS_CODE = B.TRANS_CODE AND A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ORG_CCY_CD = B.ORG_CCY_CD AND A.CR_DR_FLG = B.CR_DR_FLG
		UNION ALL
			SELECT A.* FROM #PRE_DIFF_WHT A
			LEFT JOIN #DIFF_REAL_WHT B
			ON A.TRANS_CODE = B.TRANS_CODE AND A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ORG_CCY_CD = B.ORG_CCY_CD AND A.CR_DR_FLG = B.CR_DR_FLG
			WHERE B.VOUCHER_NO IS NULL
			) C
			WHERE AMT_ORG_CCY <> 0 OR AMT_RPT_CCY <> 0';
	EXEC sp_executesql @V_CMD;

	SET @V_COUNT_2 =
	(SELECT COUNT(1) FROM #AMT_DIFFERENCE_WHT);	
	
		IF @V_COUNT_2 <> 0
		BEGIN
			SET @V_CMD = N'
			CREATE TABLE #ETL4_LIFEASIA_WHT_DIFFERENCE
			WITH 
			(  
				CLUSTERED COLUMNSTORE INDEX,  
				DISTRIBUTION = HASH(RLDGACCT)
			)
			AS
			WITH 
			AMT_DIFFERENCE AS (
			SELECT * FROM #AMT_DIFFERENCE_WHT
			),
			AMT_MAX AS (
			SELECT * FROM (
			SELECT ROWNO, VOUCHER_NO, RLDGACCT, ORIGINAL_CCY ORG_CCY_CD, REPORTING_CCY RPT_CCY_CD, CR_DR_FLAG CR_DR_FLG, AMT_ORG_CCY, AMT_RPT_CCY, 
			ROW_NUMBER() OVER(PARTITION BY VOUCHER_NO, RLDGACCT, ORIGINAL_CCY, REPORTING_CCY, CR_DR_FLAG ORDER BY ABS(AMT_ORG_CCY) DESC, ABS(AMT_RPT_CCY) DESC, ROWNO) AS RNK
			FROM #COMMISSION_PAYABLE_WHT
			) A
			WHERE RNK = 1
			),
			ALLOCATED AS (
			SELECT B.ROWNO, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG,
			(COALESCE(B.AMT_ORG_CCY,0) - A.AMT_ORG_CCY) AS AMT_ORG_CCY, (COALESCE(B.AMT_RPT_CCY,0) - A.AMT_RPT_CCY) AS AMT_RPT_CCY, ''DIFF_AVAILABLE_ROW'' FLG
			FROM AMT_DIFFERENCE A 
			LEFT JOIN AMT_MAX B
			ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ORG_CCY_CD = B.ORG_CCY_CD AND A.CR_DR_FLG = B.CR_DR_FLG
			),
			DIFF_NEW_ALLOC AS (
			SELECT B.ROWNO, A.VOUCHER_NO, A.RLDGACCT, A.ORG_CCY_CD, A.RPT_CCY_CD, A.CR_DR_FLG, A.AMT_ORG_CCY, A.AMT_RPT_CCY, ''DIFF_NEW_ROW'' FLG
			FROM
			(SELECT * FROM ALLOCATED WHERE ROWNO IS NULL) A INNER JOIN AMT_MAX B
			ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ORG_CCY_CD = B.ORG_CCY_CD AND A.CR_DR_FLG = B.CR_DR_FLG
			)
			SELECT * FROM ALLOCATED WHERE ROWNO IS NOT NULL
			UNION ALL
			SELECT * FROM DIFF_NEW_ALLOC
			';
			EXEC sp_executesql @V_CMD;
			
			SET @V_CMD = N'
			CREATE TABLE #ETL4_LIFEASIA_WHT_ZEROING
			WITH 
			(  
				CLUSTERED COLUMNSTORE INDEX,  
				DISTRIBUTION = HASH(POLICY_NO)
			)
			AS			
				SELECT A.ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, 
				SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, B.AMT_ORG_CCY, B.AMT_RPT_CCY, AGG_AMT_ORG_CCY, PAS_NAME, ACCT_PERIOD, A.VOUCHER_NO, 
				CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, A.RDOCNUM, A.RLDGACCT, TRANNO, TRANDESC, LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG,
				TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, APRVDATE, CRTABLE
				FROM
				#COMMISSION_PAYABLE_WHT A
				INNER JOIN (SELECT * FROM #ETL4_LIFEASIA_WHT_DIFFERENCE WHERE FLG <> ''DIFF_NEW_ROW'') B
				ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ROWNO = B.ROWNO AND A.ORIGINAL_CCY = B.ORG_CCY_CD AND A.CR_DR_FLAG = B.CR_DR_FLG
			UNION ALL
				SELECT A.ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, 
				SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, A.AMT_ORG_CCY, A.AMT_RPT_CCY, AGG_AMT_ORG_CCY, PAS_NAME, ACCT_PERIOD, A.VOUCHER_NO, 
				CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, A.RDOCNUM, A.RLDGACCT, TRANNO, TRANDESC, LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG,
				TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, APRVDATE, CRTABLE FROM #COMMISSION_PAYABLE_WHT A
				LEFT JOIN (SELECT * FROM #ETL4_LIFEASIA_WHT_DIFFERENCE WHERE FLG <> ''DIFF_NEW_ROW'') B
				ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ROWNO = B.ROWNO AND A.ORIGINAL_CCY = B.ORG_CCY_CD AND A.CR_DR_FLAG = B.CR_DR_FLG
				WHERE B.VOUCHER_NO IS NULL
			UNION ALL
				SELECT A.ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, 
				SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, B.AMT_ORG_CCY, B.AMT_RPT_CCY, AGG_AMT_ORG_CCY, PAS_NAME, ACCT_PERIOD, A.VOUCHER_NO, 
				B.CR_DR_FLG CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, A.RDOCNUM, A.RLDGACCT, TRANNO, TRANDESC, LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG,
				TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, APRVDATE, CRTABLE
				FROM 
				#COMMISSION_PAYABLE_WHT A
				INNER JOIN
				(SELECT * FROM #ETL4_LIFEASIA_WHT_DIFFERENCE WHERE FLG = ''DIFF_NEW_ROW'') B
				ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT AND A.ROWNO = B.ROWNO AND A.ORIGINAL_CCY = B.ORG_CCY_CD AND A.CR_DR_FLAG = B.CR_DR_FLG
			';
			EXEC sp_executesql @V_CMD;
			
			INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
			VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		END
		
		IF @V_COUNT_2 = 0
		BEGIN
			SET @V_DESCRIPTION = 'NO DATA DIFFERENCE';
			PRINT @V_DESCRIPTION;
			
			INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
			VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		END
	END
	
	IF @V_COUNT = 0
	BEGIN
		SET @V_DESCRIPTION = 'NO DATA MATCH THE REQUIREMENT';
		PRINT @V_DESCRIPTION;
		
		INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	END
	
	--- END OF STEP 3

	---------------------------------------------------------------
	-- STEP 4: CTAS FINAL (TEMP) TABLE
	-- COMBINE ALLOCATED & RELATED RECORDS, TAKE OUT ANOMALY RECORDS FROM NON-RELATED TABLE.
	---------------------------------------------------------------
	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	
	IF @V_COUNT <> 0
	BEGIN
	
		IF @V_COUNT_2 <> 0
		BEGIN
			SET @V_DESCRIPTION 	= 'DATA INTO FINAL (TEMP) TABLE; CTAS STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT from ZEROING (to re-allocate the difference) table: '+ convert(varchar(20),current_timestamp);
			PRINT @V_DESCRIPTION;
			
			EXEC (
			'CREATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT
			WITH 
			(  
				CLUSTERED COLUMNSTORE INDEX,  
				DISTRIBUTION = HASH(POLICY_NO)
			)
			AS
			SELECT ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, 
			SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY,
			PAS_NAME, ACCT_PERIOD, VOUCHER_NO, 
			CASE WHEN AMT_RPT_CCY > 0 THEN ''DR'' ELSE ''CR'' END CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, RDOCNUM, RLDGACCT, TRANNO, TRANDESC, 
			LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG, TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, 
			CAST(''14'' AS VARCHAR(2)) TXN_SK, APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
			FROM #ETL4_LIFEASIA_WHT_ZEROING');
			
			INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
			VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		END

		IF @V_COUNT_2 = 0
		BEGIN
			SET @V_DESCRIPTION 	= 'DATA INTO FINAL (TEMP) TABLE; CTAS STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT from ALLOCATION table: '+ convert(varchar(20),current_timestamp);
			PRINT @V_DESCRIPTION;

			EXEC (
			'CREATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT
			WITH 
			(  
				CLUSTERED COLUMNSTORE INDEX,  
				DISTRIBUTION = HASH(POLICY_NO)
			)
			AS
			SELECT ROWNO, ENTITY_ID, POLICY_NO, POLICY_IDENTIFIER, PRODUCT_CD, BENEFIT_CD, COHORT_DT, SUN_CD, SOURCE_PARM_1, SOURCE_PARM_2, 
			SOURCE_PARM_3, TXN_DT, ORIGINAL_CCY, REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY,
			PAS_NAME, ACCT_PERIOD, VOUCHER_NO, 
			CASE WHEN AMT_RPT_CCY > 0 THEN ''DR'' ELSE ''CR'' END CR_DR_FLAG, T0, T1, T2, T3, T4, T5, T6, T7, T8, JRNL_CD, RDOCNUM, RLDGACCT, TRANNO, TRANDESC, 
			LIFECOVERAGERIDER, EFFDATE, POLICYRELATED_FLAG, TRANREF, SACSCODE, SACSTYP, TRANS_CODE, LFAGLCODE, CLAIM_NO, TREATY_IDENTIFIER, 
			CAST(''14'' AS VARCHAR(2)) TXN_SK, APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
			FROM #COMMISSION_PAYABLE_WHT');
			
			INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
			VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		END

		SET @V_DESCRIPTION 	= 'DATA INTO FINAL TABLE; CTAS STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_NONRELATED_COM_WHT: '+ convert(varchar(20),current_timestamp);
		PRINT @V_DESCRIPTION;
		
		EXEC ('
		CREATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_NONRELATED_COM_WHT
		WITH 
		(  
			CLUSTERED COLUMNSTORE INDEX,  
			DISTRIBUTION = HASH(POLICY_NO)
		)
		AS
			SELECT CAST(ROWNO AS BIGINT) ROWNO, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, 
			CAST(''01'' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
			FROM
			(SELECT A.* FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			INNER JOIN (SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
			ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT) A
			LEFT JOIN (SELECT DISTINCT IFRS_SUN_CD FROM STAG_ID.STAG_LIFEASIA_IFRS17_COA_INSCOPE) B
			ON A.SUN_CD = B.IFRS_SUN_CD
			WHERE B.IFRS_SUN_CD IS NULL
		UNION ALL
			SELECT CAST(ROWNO AS BIGINT) ROWNO, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(A.RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, 
			CAST(''01'' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
			FROM (SELECT A.* FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
			LEFT JOIN (SELECT DISTINCT VOUCHER_NO, RLDGACCT FROM #ETL4_LIFEASIA_WHT) B
			ON A.VOUCHER_NO = B.VOUCHER_NO AND A.RLDGACCT = B.RLDGACCT
			WHERE B.VOUCHER_NO IS NULL AND A.TRANS_CODE IN (''B671'',''B621'')) A');

		INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	END
	
	IF @V_COUNT = 0
	BEGIN
	
	SET @V_DESCRIPTION = 'NO DATA MATCH THE REQUIREMENT, INSERT ORIGINAL NON-RELATED DATA & CREATE BLANK RELATED DATA';
	PRINT @V_DESCRIPTION;

	EXEC ('
	CREATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT
	WITH 
	(  
		CLUSTERED COLUMNSTORE INDEX,  
		DISTRIBUTION = HASH(POLICY_NO)
	)
	AS
	SELECT TOP 1 CAST(ROWNO AS BIGINT) ROWNO, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, 
	CAST(''01'' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
	FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
	WHERE TRANS_CODE IN (''B671'',''B621'')');

	EXEC ('
	TRUNCATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_COM_WHT');

	EXEC ('
	CREATE TABLE STAG_ID.STAG_LIFEASIA_ETL4_LIFEASIA_NONRELATED_COM_WHT
	WITH 
	(  
		CLUSTERED COLUMNSTORE INDEX,  
		DISTRIBUTION = HASH(POLICY_NO)
	)
	AS
	SELECT CAST(ROWNO AS BIGINT) ROWNO, CAST([ENTITY_ID] AS VARCHAR(25)) [ENTITY_ID], CAST(POLICY_NO AS VARCHAR(36)) POLICY_NO, CAST(POLICY_IDENTIFIER AS VARCHAR(1)) POLICY_IDENTIFIER, CAST(PRODUCT_CD AS VARCHAR(30)) PRODUCT_CD, CAST(BENEFIT_CD AS VARCHAR(30)) BENEFIT_CD, CAST(COHORT_DT AS DATE) COHORT_DT, CAST(SUN_CD AS VARCHAR(30)) SUN_CD, CAST(SOURCE_PARM_1 AS VARCHAR(15)) SOURCE_PARM_1, CAST(SOURCE_PARM_2 AS VARCHAR(15)) SOURCE_PARM_2, CAST(SOURCE_PARM_3 AS VARCHAR(15)) SOURCE_PARM_3, CAST(TXN_DT AS DATE) TXN_DT, CAST(ORG_CCY_CD AS VARCHAR(3)) ORIGINAL_CCY, CAST(RPT_CCY_CD AS VARCHAR(3)) REPORTING_CCY, CAST(AMT_ORG_CCY AS NUMERIC(28,6)) AMT_ORG_CCY, CAST(AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY, CAST(PAS_NAME AS VARCHAR(50)) PAS_NAME, CAST(ACCT_PERIOD AS BIGINT) ACCT_PERIOD, CAST(VOUCHER_NO AS VARCHAR(50)) VOUCHER_NO, CAST(CR_DR_FLG AS VARCHAR(2)) CR_DR_FLAG, CAST(T0 AS VARCHAR(15)) T0, CAST(T1 AS VARCHAR(15)) T1, CAST(T2 AS VARCHAR(15)) T2, CAST(T3 AS VARCHAR(15)) T3, CAST(T4 AS VARCHAR(15)) T4, CAST(T5 AS VARCHAR(15)) T5, CAST(T6 AS VARCHAR(15)) T6, CAST(T7 AS VARCHAR(15)) T7, CAST(T8 AS VARCHAR(15)) T8, CAST(JRNAL_CD AS VARCHAR(10)) JRNL_CD, CAST(RDOCNUM AS VARCHAR(20)) RDOCNUM, CAST(RLDGACCT AS VARCHAR(20)) RLDGACCT, CAST(TRANNO AS NUMERIC(5,0)) TRANNO, CAST(TRANDESC AS VARCHAR(20)) TRANDESC, CAST(LIFECOVERAGERIDER AS VARCHAR(20)) LIFECOVERAGERIDER, CAST(EFFDATE AS NUMERIC(8,0)) EFFDATE, CAST(POLICYRELATED_FLAG AS VARCHAR(20)) POLICYRELATED_FLAG, CAST(TRANREF AS VARCHAR(50)) TRANREF, CAST(SACSCODE AS VARCHAR(5)) SACSCODE, CAST(SACSTYP AS VARCHAR(5)) SACSTYP, CAST(TRANS_CODE AS VARCHAR(5)) TRANS_CODE, CAST(LFAGLCODE AS VARCHAR(20)) LFAGLCODE, CAST(CLAIM_NO AS VARCHAR(40)) CLAIM_NO, CAST(TREATY_IDENTIFIER AS VARCHAR(50)) TREATY_IDENTIFIER, 
	CAST(''01'' AS VARCHAR(2)) TXN_SK, CAST(APRVDATE AS NUMERIC(8,0)) AS APRVDATE, CAST(CRTABLE AS VARCHAR(20)) CRTABLE
	FROM (SELECT * FROM FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_NONRELATED_' + @V_PERIOD + ' WHERE TRANS_CODE IN (''B671'',''B621'')) A
	WHERE TRANS_CODE IN (''B671'',''B621'')');
		
	INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	END
	
	--- END OF STEP 4
	
	---------------------------------------------------------------
	-- STEP 5: FINISH THE PROCESS - PAYABLE_WHT
	---------------------------------------------------------------
	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	SET @V_DESCRIPTION 	= 'FINISH '+ @V_FUNCTION_NAME +': '+ convert(varchar(20), @V_START);
	PRINT @V_DESCRIPTION;
		
	INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
				
						-- AND DROP TEMP TABLE --
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#COMMISSION_PAYABLE_WHT', 'U') IS NOT NULL
	DROP TABLE #COMMISSION_PAYABLE_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_NONRELATED', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_NONRELATED;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_RELATED', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_RELATED;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_AGG', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_AGG;

	IF OBJECT_ID('tempdb.dbo.#PRE_DIFF_WHT', 'U') IS NOT NULL
	DROP TABLE #PRE_DIFF_WHT;

	IF OBJECT_ID('tempdb.dbo.#DIFF_REAL_WHT', 'U') IS NOT NULL
	DROP TABLE #DIFF_REAL_WHT;

	IF OBJECT_ID('tempdb.dbo.#DIFF_FROM_DIFF_REAL_WHT', 'U') IS NOT NULL
	DROP TABLE #DIFF_FROM_DIFF_REAL_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#AMT_DIFFERENCE_WHT', 'U') IS NOT NULL
	DROP TABLE #AMT_DIFFERENCE_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_DIFFERENCE', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_DIFFERENCE;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_ZEROING', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_ZEROING;
	
	END TRY
	
				-- IF TRANSACTION FAILED --	
	BEGIN CATCH

	SET @V_START 		= current_timestamp;
	SET @V_SEQNO		= @V_SEQNO + 1;
	SET @V_DESCRIPTION 	= 'Error execution for function '+ @V_FUNCTION_NAME + ' at ' + convert(varchar(20),current_timestamp) + ' with Error Message: ' + ERROR_MESSAGE();
	PRINT	@V_DESCRIPTION;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#COMMISSION_PAYABLE_WHT', 'U') IS NOT NULL
	DROP TABLE #COMMISSION_PAYABLE_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_NONRELATED', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_NONRELATED;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_RELATED', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_RELATED;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_AGG', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_AGG;

	IF OBJECT_ID('tempdb.dbo.#PRE_DIFF_WHT', 'U') IS NOT NULL
	DROP TABLE #PRE_DIFF_WHT;

	IF OBJECT_ID('tempdb.dbo.#DIFF_REAL_WHT', 'U') IS NOT NULL
	DROP TABLE #DIFF_REAL_WHT;

	IF OBJECT_ID('tempdb.dbo.#DIFF_FROM_DIFF_REAL_WHT', 'U') IS NOT NULL
	DROP TABLE #DIFF_FROM_DIFF_REAL_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#AMT_DIFFERENCE_WHT', 'U') IS NOT NULL
	DROP TABLE #AMT_DIFFERENCE_WHT;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_DIFFERENCE', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_DIFFERENCE;
	
	IF OBJECT_ID('tempdb.dbo.#ETL4_LIFEASIA_WHT_ZEROING', 'U') IS NOT NULL
	DROP TABLE #ETL4_LIFEASIA_WHT_ZEROING;
	
	INSERT INTO FOND_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES(@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

	DECLARE @ErrorMessage AS NVARCHAR(1000)		= ERROR_MESSAGE();
	DECLARE @ErrorSeverity AS INT				= ERROR_SEVERITY();
	DECLARE @ErrorState AS INT					= ERROR_STATE();

	RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
	
	END CATCH

	--- END OF STEP 5

END;
GO