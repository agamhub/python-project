CREATE PROC [FOND_ID].[USP_LOAD_ETL1_IFRS17_RI_ICG_STORES_TRIMMING] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN TRY

	------START GET RUN ID DETAIL FROM ABC------
    DECLARE @BATCH_MASTER_ID    VARCHAR(20) = 0;
    DECLARE @BATCH_RUN_ID    VARCHAR(20)  = 0;
    DECLARE @JOB_MASTER_ID    VARCHAR(20)  = 0;
    DECLARE @JOB_RUN_ID    VARCHAR(20)  = 0;
    DECLARE @GMT_START_DTTM    VARCHAR(20) = GETDATE();
	
	EXEC STAG_ID.USP_GetRunIdReturn
		@JobName = @JOBNAMESTR,
		@BATCH_MASTER_ID  = @BATCH_MASTER_ID OUTPUT,
		@BATCH_RUN_ID   = @BATCH_RUN_ID OUTPUT,
		@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT,
		@JOB_RUN_ID  = @JOB_RUN_ID OUTPUT,
		@GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;

    ------END GET RUN ID DETAIL FROM ABC------
    
	--DECLARE VARIABLE
	DECLARE @V_START			DATETIME,
	        @V_END				DATETIME,
			@V_DURATION			DATETIME,
	        @V_FUNCTION_NAME	VARCHAR(100),
			@V_DESCRIPTION		VARCHAR(100),
	        @V_CMD				VARCHAR(100),
			@V_SEQNO			INTEGER,
	        @V_PRD_ID			INTEGER,
			@V_CREATED_DATE		DATETIME,
			@V_START_DATE		DATE,
	        @V_END_DATE			DATE,
			@PRUTOP_DATE		NVARCHAR(8);

	--SET VARIABLE
	SET @V_FUNCTION_NAME = 'FOND_ID.USP_LOAD_ETL1_IFRS17_RI_ICG_STORES_TRIMMING';
	SET @V_SEQNO = 1;
	SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('START ', @V_FUNCTION_NAME, ' : ', @V_START_DATE);
	SET @PRUTOP_DATE = '20200113'; -- NO NEED TO UPDATE (FIXED VALUE)
	

	--STORE INITIAL STEP TO LOG
	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, DESCRIPTION)
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	-----------------------------
	--- DROP ALL PERMANENT TABLES
	-----------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('DROP ALL TEMPORARY TABLES : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
	--drop permanent object if exists
	
    IF OBJECT_ID('STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING','U') IS NOT NULL DROP TABLE STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING;
	IF OBJECT_ID('STAG_ID.STAG_TEMP_ETL1_RS_RI_ICG_STORE_VALIDLAG','U') IS NOT NULL DROP TABLE STAG_ID.STAG_TEMP_ETL1_RS_RI_ICG_STORE_VALIDLAG;
	IF OBJECT_ID('FOND_ID.FOND_RI_ICG_STORES_TRIMMED','U') IS NOT NULL DROP TABLE FOND_ID.FOND_RI_ICG_STORES_TRIMMED;
	IF OBJECT_ID('FOND_ID.FOND_RI_ICG_STORES_TRIMMED_INVALID','U') IS NOT NULL DROP TABLE FOND_ID.FOND_RI_ICG_STORES_TRIMMED_INVALID;

---------------------------------------------------------------------------------------------------------------------------
-- CREATE COVRPF WITH DATETIME <= 202012, AND RIDER RECORD ONLY, AND TAKE THE LATEST, FOR TRIMMING RI ICG STORE PURPOSES
---------------------------------------------------------------------------------------------------------------------------

	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('CREATE COVRPF WITH DATETIME <= 202012, AND RIDER RECORD ONLY, AND TAKE THE LATEST, FOR TRIMMING RI ICG STORE PURPOSES : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


WITH CTE AS (
SELECT E.* 
FROM (
SELECT	D.[CHDRNUM], 
		D.[CRTABLE], 
		D.[LIFE], 
		D.[COVERAGE], 
		D.[RIDER], 
		D.[TRANNO], 
		D.[CRRCD],
		D.[TRANSACTION_DATE_V2], 
		ROW_NUMBER() OVER(PARTITION BY D.[CHDRNUM], D.[CRTABLE], D.[LIFE], D.[COVERAGE], D.[RIDER] ORDER BY CAST(D.[TRANNO] AS INT) DESC, D.[TRANSACTION_DATE_V2] DESC) AS [RN]
FROM (
SELECT C.* 
FROM 
(
SELECT B.[CHDRNUM],
       B.[CRTABLE],
       B.[LIFE],
       B.[COVERAGE],
       B.[RIDER],
	   B.[TRANNO],
	   B.[CRRCD],
	   B.[TRANSACTION_DATE_V2],
       DENSE_RANK() OVER(PARTITION BY B.[CHDRNUM], B.[CRTABLE], B.[LIFE] ORDER BY B.[COVERAGE] DESC, B.[RIDER] DESC) AS [RANK_RIDER] 
FROM 
	(
	SELECT A.*
		,CAST(CASE WHEN SUBSTRING(STAG_ID.LPAD(TRANSACTION_DATE,6,'0'),1,2) > 80 THEN
						CONCAT(19,STAG_ID.LPAD(TRANSACTION_DATE,6,'0'))
					ELSE
						CONCAT(20,STAG_ID.LPAD(TRANSACTION_DATE,6,'0'))
				END as INTEGER) as TRANSACTION_DATE_V2 
	FROM 
	(SELECT [CHDRNUM],
            [CRTABLE],
            [LIFE],
            [COVERAGE],
            [RIDER],
		    [TRANNO],
		    [CRRCD],
			[TRANSACTION_DATE]
	FROM STAG_ID.STAG_LIFEASIA_COVRPF -- INI LANGSUNG AMMBIL AJA LANGSUNG COVRPF STAG_ID.STAG_LIFEASIA_COVRPF
	) AS A
	) AS B
	WHERE CONCAT(B.[LIFE], B.[COVERAGE], B.[RIDER]) <> '010100' ---EXCLUDE BASIC
	AND SUBSTRING(B.[CRTABLE], 1, 1) <> 'U' --EXCLUDE TOPUP
  	AND LEFT(B.[TRANSACTION_DATE_V2],6) <= @BATCHDATESTR
	GROUP BY B.[CHDRNUM],
           B.[CRTABLE],
           B.[LIFE],
           B.[COVERAGE],
           B.[RIDER],
		   B.[TRANNO],
		   B.[CRRCD],
		   B.[TRANSACTION_DATE_V2]
	) AS C
	WHERE C.[RANK_RIDER] = 1
	) AS D
	) AS E
	WHERE E.[RN] = 1
)

SELECT	RCD_RIDER.[CHDRNUM],
		RCD_RIDER.[BENEFIT_CODE],
		CONVERT(NVARCHAR,RCD_RIDER.[CRRCD],112) AS CRRCD
INTO STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING --FINAL OUTPUT THAT WILL BE USED IN ANOTHER QUERY
FROM(
SELECT 	DISTINCT COVRPF.[CHDRNUM],
		CASE WHEN MULT_CODE.[RIDER_CODE] IS NULL THEN COVRPF.[CRTABLE] ELSE COVRPF.[CRTABLE]+COVRPF.[LIFE] END AS [BENEFIT_CODE],
		COVRPF.[CRRCD]
  FROM CTE AS COVRPF 
LEFT JOIN STAG_ID.STAG_LIFEASIA_IFRS17_MULTINS_RIDER_CODES 
 AS MULT_CODE ON COVRPF.[CRTABLE] = MULT_CODE.[RIDER_CODE] --LIST OF BENEFIT_CODE THAT NEED LIFENUMBER
LEFT JOIN STAG_ID.STAG_LIFEASIA_AC1108RDR 
 AS PROPTRDR ON COVRPF.[CHDRNUM] = PROPTRDR.[CHDRNUM] AND COVRPF.[CRTABLE]=PROPTRDR.[CRTABLE] --UPDATE THIS TO CURRENT MONTH VE PROPTRDB
WHERE PROPTRDR.[CHDRNUM] IS NULL
UNION
SELECT D.[CHDRNUM]
      ,(CASE WHEN H.[CRTABLE] IS NULL
            THEN ''
        WHEN MULT_CODE.[RIDER_CODE] IS NOT NULL
            THEN
                (CASE WHEN LIFEPF.[LIFE] IS NULL
                    THEN
                        (CASE WHEN LIFEPF2.[LIFE] IS NULL
                            THEN ''
                        ELSE CONCAT(D.[CRTABLE], LIFEPF2.[LIFE])
                        END)
                ELSE
                    CONCAT(D.[CRTABLE], LIFEPF.[LIFE])
                END)
        ELSE D.[CRTABLE] --Update by budi because of the crtable must be valued by valuation extract not the policy number
        END) AS [BENEFIT_CODE]
      ,D.[CRRCD] AS [CRRCD]
  FROM STAG_ID.STAG_LIFEASIA_AC1108RDR 
  AS D --UPDATE THIS TO CURRENT MONTH VE PROPTRDR
  LEFT JOIN STAG_ID.STAG_LIFEASIA_AC1108RDB 
  AS H ON D.[CHDRNUM] = H.[CHDRNUM] --UPDATE THIS TO CURRENT MONTH VE PROPTRDB
  LEFT JOIN STAG_ID.STAG_LIFEASIA_LIFEPF 
  AS LIFEPF --LIFEPF VALIDFLAG = 1
  ON CONCAT(D.[CHDRNUM], D.[LIFCNUM]) = CONCAT(LIFEPF.[CHDRNUM], LIFEPF.[LIFCNUM])
  LEFT JOIN STAG_ID.STAG_LIFEASIA_LIFEPF AS LIFEPF2 
  --LIFEPF WITHOUT VALIDFLAG FILTER
  ON CONCAT(D.[CHDRNUM], D.[LIFCNUM], CASE WHEN LIFEPF.[LIFCNUM] IS NULL THEN 'YES' ELSE 'NO' END) = CONCAT(LIFEPF2.[CHDRNUM], LIFEPF2.[LIFCNUM], 'YES')
    LEFT JOIN STAG_ID.STAG_LIFEASIA_IFRS17_MULTINS_RIDER_CODES
	AS MULT_CODE   ON D.[CRTABLE] = MULT_CODE.[RIDER_CODE]) AS RCD_RIDER --LIST OF BENEFIT_CODE THAT NEED LIFENUMBER
;


------------------------------------------------------------------------------------
-- EXCLUDE CATASTROPHE TREATY FROM PROD_TREATY_MAP_MASTER AND TRIMMING PROCESS
------------------------------------------------------------------------------------

	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('EXCLUDE CATASTROPHE TREATY FROM PROD_TREATY_MAP_MASTER AND TRIMMING PROCESS : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


WITH ABC AS (
SELECT [PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[TREATY_ID]
      ,[TREATY_NAME]
      ,[MASTER_TREATY_ID]
      ,[TREATY_EFF_DT]
      ,[TREATY_END_DT] 
      ,[PREM_GUARANTEE]
      ,[GUARANTEE_TERM]
      ,[RI_CONTRACT_BOUNDARY]
      ,[RI_PORTFOLIO_GROUP]
      ,[MEASUREMENT_MODEL]
      ,[RI_CCY_CD]
      ,[SERVICE_FLG]
      ,[QS_PERC]
      ,[INVESTMENT_COMPONENT]
      ,[COUNTERPARTY_ID]
FROM ABST_ID.ABST_RI_PROD_TREATY_MAP_MASTER --ABST_ID.ABST_RI_PROD_TREATY_MAP_MASTER
WHERE [RI_PORTFOLIO_GROUP] NOT LIKE '%XL%' 
AND [TREATY_END_DT] >= @V_START_DATE --Modified in UAT Cycle 4
)
SELECT RI_ICG_STORE.[ENTITY_ID]
	  ,RI_ICG_STORE.[POLICY_NO]
	  ,RI_ICG_STORE.[PRODUCT_CD]
	  ,RI_ICG_STORE.[BENEFIT_CD]
	  ,RI_ICG_STORE.[TREATY_ID]
	  ,RI_ICG_STORE.[TYPE]
	  ,RI_ICG_STORE.[RCD]
	  ,RI_ICG_STORE.[CB_START_DT] --added in v3
	  ,RI_ICG_STORE.[CB_END_DT] --added in v3
	  ,RI_ICG_STORE.[UC_RI_CB_START_DT] --added in v3
	  ,RI_ICG_STORE.[UC_RI_CB_END_DT] --added in v3
	  ,RI_ICG_STORE.[TREATY_EFF_DT]
	  ,RI_ICG_STORE.[RCD_EFF_DIFF]
	  ,RI_ICG_STORE.[VALIDFLAG]
	  ,RI_ICG_STORE.[CURR_IND]
	  ,RI_ICG_STORE.[RI_INFORCE_FLG]
	  ,RI_ICG_STORE.[EFF_FROM_DT]-- EDITED BY Dyah 20221201
	  ,RI_ICG_STORE.[EFF_TO_DT]-- EDITED BY Dyah 20221201
	  ,RI_ICG_STORE.[BATCH_FROM_DT]-- EDITED Dyah 20221201
	  ,RI_ICG_STORE.[BATCH_TO_DT]-- EDITED BY Dyah 20221201
	INTO STAG_ID.STAG_TEMP_ETL1_RS_RI_ICG_STORE_VALIDLAG 
FROM
(( 
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
	  ,[TREATY_ID]
	  ,[TYPE]
	  ,[RCD]
	  ,[CB_START_DT] --added in v3
	  ,[CB_END_DT] --added in v3
	  ,[UC_RI_CB_START_DT] --added in v3
	  ,[UC_RI_CB_END_DT] --added in v3
	  ,[TREATY_EFF_DT]
	  ,[RCD_EFF_DIFF] AS [RCD_EFF_DIFF]
	  ,(CASE WHEN [RN_MINPOSITIVE] = 1 AND [RCD_EFF_DIFF1] != 99999 AND [RCD_EFF_DIFF1] >= 0 AND [TREATY_EFF_DT] <= @V_START_DATE THEN 'Y'  
	  WHEN [RN_MAXNEGATIVE] = 1 AND [RCD_EFF_DIFF2] != 99999 AND [RCD_EFF_DIFF2] < 0 AND [TREATY_EFF_DT] <= @V_START_DATE THEN 'Y'  
	  ELSE 'N' END) AS VALIDFLAG 
	  ,[CURR_IND]
	  ,[RI_INFORCE_FLG]
	  ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT]-- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT]-- EDITED Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
FROM
(SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
	  ,[TREATY_ID]
	  ,[TYPE]
	  ,(CASE WHEN [PRODUCT_CD]=[BENEFIT_CD] THEN [CB_START_DT] ELSE CAST([CRRCD] AS DATE) END) AS [RCD]
	  ,[CB_START_DT] --added in v3
	  ,[CB_END_DT] --added in v3
	  ,[UC_RI_CB_START_DT] --added in v3
	  ,[UC_RI_CB_END_DT] --added in v3
	  ,[TREATY_EFF_DT]
	  ,[RCD_EFF_DIFF]
	  ,(CASE WHEN [RCD_EFF_DIFF] < 0 OR [RCD_EFF_DIFF] IS NULL OR [RI_INFORCE_FLG]='N' OR [CURR_IND]='N' THEN 99999 ELSE [RCD_EFF_DIFF] END) AS RCD_EFF_DIFF1  --V2 ADJUSTMENT
	  ,(CASE WHEN [RCD_EFF_DIFF] IS NULL OR [RI_INFORCE_FLG]='N' OR [CURR_IND]='N' THEN 99999 ELSE [RCD_EFF_DIFF] END) AS RCD_EFF_DIFF2  --V2 ADJUSTMENT
	  ,ROW_NUMBER () OVER (PARTITION BY [POLICY_NO],[PRODUCT_CD],[BENEFIT_CD] 
	  ORDER BY (CASE WHEN [RCD_EFF_DIFF] < 0 OR [RCD_EFF_DIFF] IS NULL OR [RI_INFORCE_FLG]='N' OR [CURR_IND]='N' THEN 99999 ELSE [RCD_EFF_DIFF] END) ASC) AS RN_MINPOSITIVE
	  ,ROW_NUMBER () OVER (PARTITION BY [POLICY_NO],[PRODUCT_CD],[BENEFIT_CD] 
	  ORDER BY (CASE WHEN [RCD_EFF_DIFF] IS NULL OR [RI_INFORCE_FLG]='N' OR [CURR_IND]='N' THEN 99999 ELSE [RCD_EFF_DIFF] END) DESC) AS RN_MAXNEGATIVE
	  ,[CURR_IND]
	  ,[RI_INFORCE_FLG]
	  ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT] -- EDITED BY Dyah 20221201

FROM
(SELECT ICG_STORE.[ENTITY_ID] 
      ,[POLICY_NO]
      ,ICG_STORE.[PRODUCT_CD]
      ,ICG_STORE.[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,ICG_STORE.[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
	  ,MAP.[TYPE]
	  ,(CASE WHEN ICG_STORE.[BENEFIT_CD]!=ICG_STORE.[PRODUCT_CD] THEN DATEDIFF(DAY,PROD_TREATY.[TREATY_EFF_DT],RIDER.[CRRCD])
		ELSE DATEDIFF(DAY,PROD_TREATY.[TREATY_EFF_DT],ICG_STORE.[CB_START_DT]) END) AS RCD_EFF_DIFF
	  ,PROD_TREATY.[TREATY_EFF_DT]
	  ,RIDER.[CRRCD]
	FROM --FCORE_ID.FOND_RI_ICG_STORE_UC AS ICG_STORE --RI ICG STORE FROM RHO
		  ----- START EDITED BY Dyah 221201---
				(SELECT *,	
				ROW_NUMBER () OVER (
				PARTITION BY [POLICY_NO], 
				[PRODUCT_CD], 
				[BENEFIT_CD] ,
				[TREATY_ID],
				[BATCH_FROM_DT]
				ORDER BY 
				[EFF_TO_DT] DESC) AS MAXEFF_DT 
				FROM FCORE_ID.FOND_RI_ICG_STORE_UC ) AS ICG_STORE
				----- END EDITED BY Dyah----
    LEFT JOIN (SELECT 
 A.[PRODUCT_CD]
,A.[BENEFIT_CD]
,COUNT(A.[PRODUCT_CD]) AS 'COUNT'
,(CASE
WHEN A.[BENEFIT_CD] IN('C14R','C15R') THEN '3'
WHEN COUNT(A.[PRODUCT_CD])=1 THEN '1'
ELSE '2' END) AS TYPE
FROM(
SELECT [PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[TREATY_END_DT]
	  ,COUNT([BENEFIT_CD]) AS 'COUNT'
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD], [BENEFIT_CD], [TREATY_END_DT]) AS A
  LEFT JOIN (SELECT [PRODUCT_CD], [BENEFIT_CD] 
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS B ON A.[PRODUCT_CD]=B.[PRODUCT_CD] AND A.[BENEFIT_CD] = B.[BENEFIT_CD]
  WHERE B.[BENEFIT_CD] IS NULL
  GROUP BY A.[PRODUCT_CD],A.[BENEFIT_CD]
UNION
SELECT [PRODUCT_CD], [BENEFIT_CD],COUNT([PRODUCT_CD]),'NORMAL' 
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS MAP ON MAP.[PRODUCT_CD] = ICG_STORE.[PRODUCT_CD] AND MAP.[BENEFIT_CD]=ICG_STORE.[BENEFIT_CD]
    JOIN ABC AS PROD_TREATY ON CONCAT(ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD],ICG_STORE.[TREATY_ID])=CONCAT(PROD_TREATY.[PRODUCT_CD],PROD_TREATY.[BENEFIT_CD],PROD_TREATY.[TREATY_ID]) --Updated by budi, because issue valid flag
	  LEFT JOIN STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING --HASIL DARI QUERY SEBELUMNYA
	AS RIDER ON CONCAT(RIDER.[CHDRNUM],RIDER.[BENEFIT_CODE])=CONCAT(ICG_STORE.[POLICY_NO],ICG_STORE.[BENEFIT_CD])
	WHERE MAXEFF_DT = 1 -- EDITED BY Dyah
)AS RI_ICG_STORE_TEMP1
WHERE RI_ICG_STORE_TEMP1.[TYPE]='1' ) AS RI_ICG_STORE_TEMP2)
UNION
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
	  ,[TREATY_ID]
	  ,[TYPE]
	  ,(CASE WHEN [PRODUCT_CD]=[BENEFIT_CD] THEN [CB_START_DT] ELSE CAST([CRRCD] AS DATE) END) AS [RCD]
	  ,[CB_START_DT] --added in v3
	  ,[CB_END_DT] --added in v3
	  ,[UC_RI_CB_START_DT] --added in v3
	  ,[UC_RI_CB_END_DT] --added in v3
	  ,[TREATY_EFF_DT]
	  ,[RCD_EFF_DIFF]
	  ,(CASE WHEN [RCD_EFF_DIFF]=1 THEN 'Y' ELSE 'N' END) AS VALIDFLAG
	  ,[CURR_IND]
	  ,[RI_INFORCE_FLG]
	  ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
FROM
(SELECT ICG_STORE.[ENTITY_ID] 
      ,[POLICY_NO]
      ,ICG_STORE.[PRODUCT_CD]
      ,ICG_STORE.[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,ICG_STORE.[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
	  ,MAP.[TYPE]
	  ,(CASE WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND RIDER.[CRRCD] IS NULL THEN 99999 --V2 ADJUSTMENT
			 WHEN ICG_STORE.[PRODUCT_CD]=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= ICG_STORE.[CB_START_DT] AND (@V_START_DATE BETWEEN PROD_TREATY.[TREATY_EFF_DT] AND PROD_TREATY.[TREATY_END_DT]) AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			 WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND (@V_START_DATE BETWEEN PROD_TREATY.[TREATY_EFF_DT] AND PROD_TREATY.[TREATY_END_DT]) AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			 ELSE 99999 END) AS RCD_EFF_DIFF
	  ,ROW_NUMBER () OVER (PARTITION BY ICG_STORE.[POLICY_NO],ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD] 
	    ORDER BY ((CASE WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND RIDER.[CRRCD] IS NULL THEN 99999  --V2 ADJUSTMENT
				WHEN ICG_STORE.[PRODUCT_CD]=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= ICG_STORE.[CB_START_DT] AND @V_START_DATE BETWEEN PROD_TREATY.[TREATY_EFF_DT] AND PROD_TREATY.[TREATY_END_DT] AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			  WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND @V_START_DATE BETWEEN PROD_TREATY.[TREATY_EFF_DT] AND PROD_TREATY.[TREATY_END_DT] AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			 ELSE 99999 END)) ASC) AS RN
	  ,PROD_TREATY.[TREATY_EFF_DT]
	  ,PROD_TREATY.[TREATY_END_DT]
	  ,RIDER.[CRRCD] 
	  FROM --FCORE_ID.FOND_RI_ICG_STORE_UC AS ICG_STORE --RI ICG STORE FROM RHO
	     ----- START EDITED BY Dyah 221201---
				(SELECT *,	
				ROW_NUMBER () OVER (
				PARTITION BY [POLICY_NO], 
				[PRODUCT_CD], 
				[BENEFIT_CD] ,
				[TREATY_ID],
				[BATCH_FROM_DT]
				ORDER BY 
				[EFF_TO_DT] DESC) AS MAXEFF_DT_2
				FROM FCORE_ID.FOND_RI_ICG_STORE_UC ) AS ICG_STORE
			----- END EDITED BY Dyah-----
    LEFT JOIN (SELECT 
 A.[PRODUCT_CD]
,A.[BENEFIT_CD]
,COUNT(A.[PRODUCT_CD]) AS 'COUNT'
,(CASE
WHEN A.[BENEFIT_CD] IN('C14R','C15R') THEN '3'
WHEN COUNT(A.[PRODUCT_CD])=1 THEN '1'
ELSE '2' END) AS TYPE
FROM(
SELECT [PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[TREATY_END_DT]
	  ,COUNT([BENEFIT_CD]) AS 'COUNT'
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD], [BENEFIT_CD], [TREATY_END_DT]) AS A
  LEFT JOIN (SELECT [PRODUCT_CD], [BENEFIT_CD] 
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS B ON A.[PRODUCT_CD]=B.[PRODUCT_CD] AND A.[BENEFIT_CD] = B.[BENEFIT_CD]
  WHERE B.[BENEFIT_CD] IS NULL
  GROUP BY A.[PRODUCT_CD],A.[BENEFIT_CD]
UNION
SELECT [PRODUCT_CD], [BENEFIT_CD],COUNT([PRODUCT_CD]),'NORMAL' AS [TYPE] 
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS MAP ON MAP.[PRODUCT_CD] = ICG_STORE.[PRODUCT_CD] AND MAP.[BENEFIT_CD]=ICG_STORE.[BENEFIT_CD]
    LEFT JOIN ABC AS PROD_TREATY ON CONCAT(ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD],ICG_STORE.[TREATY_ID])=CONCAT(PROD_TREATY.[PRODUCT_CD],PROD_TREATY.[BENEFIT_CD],PROD_TREATY.[TREATY_ID]) --INTO POINT 1
	LEFT JOIN STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING --HASIL DARI QUERY SEBELUMNYA
	AS RIDER ON CONCAT(RIDER.[CHDRNUM],RIDER.[BENEFIT_CODE])=CONCAT(ICG_STORE.[POLICY_NO],ICG_STORE.[BENEFIT_CD])
	WHERE ICG_STORE.MAXEFF_DT_2 = 1 --EDITED BY Dyah 20221201
) AS RI_ICG_STORE_TEMP1
WHERE RI_ICG_STORE_TEMP1.[TYPE]='2' OR [RI_ICG_STORE_TEMP1].[TYPE]='NORMAL'
UNION
--TYPE 3
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
	  ,[TREATY_ID]
	  ,[TYPE]
	  ,(CASE WHEN [PRODUCT_CD]=[BENEFIT_CD] THEN [CB_START_DT] ELSE CAST([CRRCD] AS DATE) END) AS [RCD]
	  ,[CB_START_DT] --added in v3
	  ,[CB_END_DT] --added in v3
	  ,[UC_RI_CB_START_DT] --added in v3
	  ,[UC_RI_CB_END_DT] --added in v3
	  ,[TREATY_EFF_DT]
	  ,[RCD_EFF_DIFF]
	  ,(CASE WHEN [RCD_EFF_DIFF]=1 THEN 'Y' ELSE 'N' END) AS VALIDFLAG
	  ,[CURR_IND]
	  ,[RI_INFORCE_FLG]
	  ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
FROM
(SELECT ICG_STORE.[ENTITY_ID] 
      ,[POLICY_NO]
      ,ICG_STORE.[PRODUCT_CD]
      ,ICG_STORE.[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,ICG_STORE.[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[EFF_FROM_DT] -- EDITED BY Dyah 20221201
      ,[EFF_TO_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_FROM_DT] -- EDITED BY Dyah 20221201
      ,[BATCH_TO_DT]-- EDITED BY Dyah 20221201
	  ,MAP.[TYPE]
	  ,(CASE WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND RIDER.[CRRCD] IS NULL THEN 99999 
			  WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND RIDER.[CRRCD] >= @PRUTOP_DATE  AND UPPER(ICG_STORE.[TREATY_ID]) IN ('127A_U','128A_U') AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
				  WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND RIDER.[CRRCD] < @PRUTOP_DATE  AND UPPER(ICG_STORE.[TREATY_ID]) IN ('129A_U','130A_U') AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			 ELSE 99999 END) AS RCD_EFF_DIFF
	  ,ROW_NUMBER () OVER (PARTITION BY ICG_STORE.[POLICY_NO],ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD] 
	    ORDER BY ((CASE WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND RIDER.[CRRCD] IS NULL THEN 99999 
			  WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND RIDER.[CRRCD] >= @PRUTOP_DATE  AND UPPER(ICG_STORE.[TREATY_ID]) IN ('127A_U','128A_U') AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
				  WHEN ICG_STORE.[PRODUCT_CD]!=ICG_STORE.[BENEFIT_CD] AND @V_START_DATE >= CONVERT(DATE,RIDER.[CRRCD]) AND RIDER.[CRRCD] < @PRUTOP_DATE AND UPPER(ICG_STORE.[TREATY_ID]) IN ('129A_U','130A_U') AND [RI_INFORCE_FLG]='Y' AND [CURR_IND]='Y'  THEN 1 
			 ELSE 99999 END)) ASC) AS RN
	  ,PROD_TREATY.[TREATY_EFF_DT]
	  ,PROD_TREATY.[TREATY_END_DT]
	  ,RIDER.[CRRCD] 
	  FROM --FCORE_ID.FOND_RI_ICG_STORE_UC AS ICG_STORE --RI ICG STORE FROM RHO
	       ----- START EDITED BY Dyah 221201---
				(SELECT *,	
				ROW_NUMBER () OVER (
				PARTITION BY [POLICY_NO], 
				[PRODUCT_CD], 
				[BENEFIT_CD] ,
				[TREATY_ID],
				[BATCH_FROM_DT]
				ORDER BY 
				[EFF_TO_DT] DESC) AS MAXEFF_DT_3
				FROM FCORE_ID.FOND_RI_ICG_STORE_UC ) AS ICG_STORE
			----- END EDITED BY Dyah--
    LEFT JOIN (SELECT 
 A.[PRODUCT_CD]
,A.[BENEFIT_CD]
,COUNT(A.[PRODUCT_CD]) AS 'COUNT'
,(CASE
WHEN A.[BENEFIT_CD] IN('C14R','C15R') THEN '3'
WHEN COUNT(A.[PRODUCT_CD])=1 THEN '1'
ELSE '2' END) AS TYPE
FROM(
SELECT [PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[TREATY_END_DT]
	  ,COUNT([BENEFIT_CD]) AS 'COUNT'
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD], [BENEFIT_CD], [TREATY_END_DT]) AS A
  LEFT JOIN (SELECT [PRODUCT_CD], [BENEFIT_CD] 
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS B ON A.[PRODUCT_CD]=B.[PRODUCT_CD] AND A.[BENEFIT_CD] = B.[BENEFIT_CD]
  WHERE B.[BENEFIT_CD] IS NULL
  GROUP BY A.[PRODUCT_CD],A.[BENEFIT_CD]
UNION
SELECT [PRODUCT_CD], [BENEFIT_CD],COUNT([PRODUCT_CD]),'NORMAL' AS [TYPE]
  FROM ABC --INTO POINT 1
  GROUP BY [PRODUCT_CD],[BENEFIT_CD]
  HAVING COUNT([PRODUCT_CD])=1) AS MAP ON MAP.[PRODUCT_CD] = ICG_STORE.[PRODUCT_CD] AND MAP.[BENEFIT_CD]=ICG_STORE.[BENEFIT_CD]
    LEFT JOIN ABC --INTO POINT 1
	AS PROD_TREATY ON CONCAT(ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD],ICG_STORE.[TREATY_ID])=CONCAT(PROD_TREATY.[PRODUCT_CD],PROD_TREATY.[BENEFIT_CD],PROD_TREATY.[TREATY_ID]) --INTO POINT 1
	LEFT JOIN (SELECT [CHDRNUM], [BENEFIT_CODE], [CRRCD] FROM STAG_ID.STAG_TEMP_ETL1_RS_RIDER_RCD_RI_TRIMMING --HASIL DARI QUERY SEBELUMNYA
	WHERE [BENEFIT_CODE] IN ('C11R','C1WR')) AS RIDER ON RIDER.[CHDRNUM]=ICG_STORE.[POLICY_NO]
	WHERE  ICG_STORE.MAXEFF_DT_3 = 1 -- EDITED BY Dyah 20221201
) AS RI_ICG_STORE_TEMP3
WHERE RI_ICG_STORE_TEMP3.[TYPE]='3'
) AS RI_ICG_STORE
--ORDER BY [TYPE], [POLICY_NO], [PRODUCT_CD], [BENEFIT_CD]
;

------------------------------------------------------------------------------------
-- ADD VALIDFLAG TO THE ORIGINAL RI_ICG_STORE FROM RHO
------------------------------------------------------------------------------------
	
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('ADD VALIDFLAG TO THE ORIGINAL RI_ICG_STORE FROM RHO : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


SELECT ICG_STORE.[ENTITY_ID]
      ,ICG_STORE.[POLICY_NO]
      ,ICG_STORE.[PRODUCT_CD]
      ,ICG_STORE.[BENEFIT_CD]
      ,ICG_STORE.[COHORT_YEAR]
      ,ICG_STORE.[CB_START_DT]
      ,ICG_STORE.[CB_END_DT]
      ,ICG_STORE.[INSURANCE_CONTRACT_GROUP_ID]
      ,ICG_STORE.[RI_INFORCE_FLG]
      ,ICG_STORE.[TREATY_ID]
      ,ICG_STORE.[UC_RI_COHORT]
      ,ICG_STORE.[RI_ICG_ID]
      ,ICG_STORE.[UC_RI_CB_START_DT]
      ,ICG_STORE.[UC_RI_CB_END_DT]
      ,ICG_STORE.[CURR_IND]
      ,(CASE WHEN (ICG_STORE.[RI_ICG_ID] LIKE '%XL%') OR (UPPER(ICG_STORE.[TREATY_ID]) IN ('113A_N','133A_N')) 
	  OR VALID_FLAG.[VALIDFLAG] IS NULL THEN 'N' 
	    ELSE VALID_FLAG.[VALIDFLAG] END) AS VALIDFLAG,
		@BATCH_MASTER_ID  AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
INTO FOND_ID.FOND_RI_ICG_STORES_TRIMMED	 --FINAL OUTPUT THAT NEED TO BE EXPORTED FOR ETL2B PURPOSE
FROM FCORE_ID.FOND_RI_ICG_STORE_UC AS ICG_STORE --RI ICG STORE FROM RHO
LEFT JOIN STAG_ID.STAG_TEMP_ETL1_RS_RI_ICG_STORE_VALIDLAG AS VALID_FLAG --INTO POINT 2
ON CONCAT(ICG_STORE.[POLICY_NO],ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD],ICG_STORE.[TREATY_ID],ICG_STORE.[CURR_IND],ICG_STORE.[RI_INFORCE_FLG], ICG_STORE.[CB_START_DT], ICG_STORE.[CB_END_DT],ICG_STORE.[UC_RI_CB_START_DT], ICG_STORE.[UC_RI_CB_END_DT]) --ADDED IN V3
=CONCAT(VALID_FLAG.[POLICY_NO],VALID_FLAG.[PRODUCT_CD],VALID_FLAG.[BENEFIT_CD],VALID_FLAG.[TREATY_ID],VALID_FLAG.[CURR_IND],VALID_FLAG.[RI_INFORCE_FLG], VALID_FLAG.[CB_START_DT], VALID_FLAG.[CB_END_DT],VALID_FLAG.[UC_RI_CB_START_DT], VALID_FLAG.[UC_RI_CB_END_DT]) --ADDED IN V3
WHERE ICG_STORE.[RI_ICG_ID] NOT LIKE '%XL%' --ADDED IN V3
--ORDER BY VALID_FLAG.[TYPE], ICG_STORE.[POLICY_NO], ICG_STORE.[PRODUCT_CD], ICG_STORE.[BENEFIT_CD]
;



------------------------------------------------------------------------------------
-- SELECT INVALID RECORD
------------------------------------------------------------------------------------
	
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('SELECT INVALID RECORD : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

-- INVALID UC_RI_CB_START_DT > UC_RI_CB_END_DT 
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[VALID_FLG]
	  ,BATCH_FROM_DT
	  ,BATCH_TO_DT
	  ,'INVALID UC_RI_CB_START_DT > UC_RI_CB_END_DT' AS [DESC],
	  	@BATCH_MASTER_ID  AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
	  INTO FOND_ID.FOND_RI_ICG_STORES_TRIMMED_INVALID 
FROM FCORE_ID.FOND_RI_ICG_STORE_UC
WHERE UC_RI_CB_START_DT > UC_RI_CB_END_DT

--INVALID UC_RI_CB_END_DT
INSERT INTO FOND_ID.FOND_RI_ICG_STORES_TRIMMED_INVALID
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[VALID_FLG]
	  ,BATCH_FROM_DT
	  ,BATCH_TO_DT
	  ,'INVALID UC_RI_CB_END_DT' AS [DESC],
	  	@BATCH_MASTER_ID  AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM
(SELECT ICG_STORE.*, (CASE WHEN (CASE WHEN ICG_STORE.[CB_END_DT] <= REF.[TREATY_END_DT] THEN ICG_STORE.[CB_END_DT] ELSE REF.[TREATY_END_DT]END) = ICG_STORE.[UC_RI_CB_END_DT] 
		THEN 1
		ELSE 0 END) AS [DEFECT_IND]
  FROM FCORE_ID.FOND_RI_ICG_STORE_UC AS ICG_STORE 
  LEFT JOIN (SELECT [PRODUCT_CD], [BENEFIT_CD], [TREATY_ID], [TREATY_END_DT] FROM ABST_ID.ABST_RI_PROD_TREATY_MAP_MASTER) AS REF
    ON CONCAT(ICG_STORE.[PRODUCT_CD],ICG_STORE.[BENEFIT_CD],ICG_STORE.[TREATY_ID]) = CONCAT(REF.[PRODUCT_CD],REF.[BENEFIT_CD],REF.[TREATY_ID])
WHERE REF.[PRODUCT_CD] IS NOT NULL) AS A
WHERE A.[DEFECT_IND] = '0'

-- INVALID RU_ICG_ID
INSERT INTO FOND_ID.FOND_RI_ICG_STORES_TRIMMED_INVALID 
SELECT [ENTITY_ID]
      ,[POLICY_NO]
      ,[PRODUCT_CD]
      ,[BENEFIT_CD]
      ,[COHORT_YEAR]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[INSURANCE_CONTRACT_GROUP_ID]
      ,[RI_INFORCE_FLG]
      ,[TREATY_ID]
      ,[UC_RI_COHORT]
      ,[RI_ICG_ID]
      ,[UC_RI_CB_START_DT]
      ,[UC_RI_CB_END_DT]
      ,[CURR_IND]
      ,[VALID_FLG]
	  ,BATCH_FROM_DT
	  ,BATCH_TO_DT
	  ,'INVALID RI_ICG_ID' AS [DESC],
	  	@BATCH_MASTER_ID  AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM
(SELECT RI.* ,CASE WHEN CONCAT('IAI_', REF.[RI_PORTFOLIO_GROUP], '_', (CASE WHEN MAP_RN.[PRODUCT_CD] IS NOT NULL THEN RIGHT(RI.[RI_ICG_ID], 4) ELSE (CASE WHEN RI.[COHORT_YEAR] >= YEAR(REF.[TREATY_EFF_DT]) THEN RI.[COHORT_YEAR] ELSE YEAR(REF.[TREATY_EFF_DT]) END) END)) = CONCAT('IAI_', REF.[RI_PORTFOLIO_GROUP], '_', (CASE WHEN MAP_RN.[PRODUCT_CD] IS NOT NULL THEN (CASE WHEN RIGHT(MAP_RN.[RI_ICG_ID], 4) < '2021' THEN '2021' ELSE RIGHT(MAP_RN.[RI_ICG_ID], 4) END) ELSE (CASE WHEN RI.[COHORT_YEAR] >= YEAR(REF.[TREATY_EFF_DT]) THEN RI.[COHORT_YEAR] ELSE YEAR(REF.[TREATY_EFF_DT]) END) END)) THEN 1 ELSE 0 END AS [DEFECT_IND] 
  FROM FCORE_ID.FOND_RI_ICG_STORE_UC AS RI 
  LEFT JOIN (SELECT 
			[PRODUCT_CD],
			[BENEFIT_CD],
			[TREATY_ID],
			[TREATY_EFF_DT],
			[RI_PORTFOLIO_GROUP] 
			FROM ABST_ID.ABST_RI_PROD_TREATY_MAP_MASTER) AS REF
    ON CONCAT(RI.[PRODUCT_CD],RI.[BENEFIT_CD],RI.[TREATY_ID]) = CONCAT(REF.[PRODUCT_CD],REF.[BENEFIT_CD],REF.[TREATY_ID])
	LEFT JOIN (
		SELECT
			MAP.*
		FROM
			(
			SELECT
				* ,
				ROW_NUMBER() OVER(PARTITION BY [PRODUCT_CD],
				[BENEFIT_CD],
				[INSURANCE_CONTRACT_GROUP_ID],
				[RI_COHORT],
				[TREATY_ID]
			ORDER BY
				RIGHT([RI_ICG_ID],
				4) DESC) AS [RN]
			FROM
				FCORE_ID.FOND_RI_UNDERLYING_ICG_MAP) AS MAP
		WHERE
			MAP.[RN] = '1') AS MAP_RN ON
		CONCAT(RI.[PRODUCT_CD], RI.[BENEFIT_CD], RI.[TREATY_ID], RI.[UC_RI_COHORT], RI.[INSURANCE_CONTRACT_GROUP_ID]) = CONCAT(MAP_RN.[PRODUCT_CD], MAP_RN.[BENEFIT_CD], MAP_RN.[TREATY_ID], MAP_RN.[RI_COHORT], MAP_RN.[INSURANCE_CONTRACT_GROUP_ID])
    ) AS A
WHERE A.[DEFECT_IND] = '0'


--STORE END STEP TO LOG
	SET @V_END = CURRENT_TIMESTAMP;
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_DESCRIPTION = CONCAT('FINISH ', @V_FUNCTION_NAME, ' : ', @V_END, ' DURATION ', DATEDIFF(MINUTE, @V_START, @V_END));

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, DESCRIPTION)
	VALUES (@V_END, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


	END TRY
BEGIN CATCH

  SELECT
    ERROR_PROCEDURE() AS ERRORPROCEDURE,
	ERROR_NUMBER() AS ERRORNUMBER,
    ERROR_STATE() AS ERRORSTATE,
    ERROR_SEVERITY() AS ERRORSEVERITY,
    --ERROR_LINE() AS ERRORLINE,
    ERROR_MESSAGE() AS ERRORMESSAGE;

END CATCH;

