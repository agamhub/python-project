CREATE PROC [FOND_ID].[USP_IFRS17_RESVPIA_REGION] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS
BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_RESVPIA_REGION';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)
	   
INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,"DESCRIPTION")
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

--- PRE CREATE BACKUP RAW DATA FOR DUPLICACY REMOVAL
BEGIN TRY
DROP TABLE [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP];
DROP TABLE [FOND_ID].[FOND_IFRS17_RESVPIA_REGION];
TRUNCATE TABLE [FOND_ID].[FOND_IFRS17_RESVPIA_REGION_INVALID];
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

SELECT * INTO [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP] --- preserve original data
FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA]

print(1)
--- 1. CHECK BLANK DATA (NOTIFY USER IF THERE IS ANY)---
INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_INVALID
SELECT *,'STATCODE OR SEX BLANK' FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP] -- none found
WHERE STATCODE = '' OR SEX = '';
print(3)
--- 3. CHECK FOR ANY INVALID HOISSDTE (ALREADY CAPTURED IN INVALID REPORT)
INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_INVALID
SELECT *,'INVALID HOISSDTE' 
FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP]
WHERE [HOISSDTE] like '99999999%' OR [HOISSDTE] IS NULL -- none found
print(4)
--- 4. NS REGION INDICATOR
	--- 4.1. Clears previous month policy list
	BEGIN TRY
	DROP TABLE [STAG_ID].[STAG_NS_UNFLAGGED_RESVPIA]
	PRINT 'Table exist, dropping table..'
	END TRY
	BEGIN CATCH
	PRINT 'Table does not exists..'
	END CATCH
	print(4.2)
	--- 4.2. Lists NS policies without '2' flag
	SELECT DISTINCT(RESVPIA.[CHDRNUM]) 
	INTO [STAG_ID].[STAG_NS_UNFLAGGED_RESVPIA]
	FROM
	(
		(SELECT [CHDRNUM]
				,[ADDR04CITY] AS CITY
				,[ADDR05PROV] AS PROVINCE
				,[REGIONFLG] AS REGION_IND
				,CASE WHEN [ADDR04CITY] = '' THEN [ADDR05PROV] ELSE [ADDR04CITY] END AS REGION
		FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP]
		) AS RESVPIA
		LEFT JOIN [STAG_ID].[STAG_NS_CITY_DICTIONARY] AS CITYPROVINCE ON RESVPIA.[REGION] = CITYPROVINCE.[CITY_DICTIONARY]
	)
	WHERE CITYPROVINCE.[CITY_DICTIONARY] IS NOT NULL and RESVPIA.[REGION_IND] = 0
--	ORDER BY RESVPIA.[CHDRNUM]

-- INSERT TO CHECKING TABLE
INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_INVALID
SELECT *,'NS POLICIES WITHOUT 2 FLAG' 
FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP]
WHERE [CHDRNUM] IN (SELECT * FROM [STAG_ID].[STAG_NS_UNFLAGGED_RESVPIA])

print(4.3)
	--- 4.3. Updates indicator for records found above
	UPDATE [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP]
	SET [REGIONFLG] = 2
	WHERE [CHDRNUM] IN (SELECT * FROM [STAG_ID].[STAG_NS_UNFLAGGED_RESVPIA])
	print(5)
--- 5. BASIC ENTRY AGE CHECK
INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_INVALID
SELECT *,'INVALID ENTRY AGE CHECK' FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP]
WHERE CONVERT(FLOAT, [ANBCCD]) < 0 OR CONVERT(FLOAT, [ANBCCD]) > 95
print(6)
--- 6. DCS READY INPUT
SELECT AA.*
INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION
FROM [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_TEMP] AS AA

--------------------------------------------------------------------
--- BACKUP MPFILES TABLE TO HISTORY TABLE
--------------------------------------------------------------------
-- insert log process
SET @V_SEQNO 	= @V_SEQNO + 1;
SET @V_START 	= convert(datetime,getDATE());
SET @V_DESCRIPTION	= 'BACKUP FOND_ID.FOND_IFRS17_MPFILES_RESPVIA TO FOND_ID.FOND_IFRS17_MPFILES_RESPVIA_HIS: ' + convert(varchar,@V_START,121);
PRINT @V_DESCRIPTION;
print(7)

DELETE FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) < EOMONTH(DATEADD(MONTH,-12,CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))))
OR CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
SELECT A.*
FROM (
	SELECT [CHDRNUM]
      ,[CRTABLE]
      ,[ANBCCD]
      ,[SEX]
      ,[PCESSTRM]
      ,[INSTOT]
      ,[SUMINS]
      ,[MORTCLS]
      ,[HOISSDTE]
      ,[CRRCD]
      ,[TOPUPAMNT]
      ,[WDRAMNT]
      ,[TTLFUND]
      ,[PRCF]
      ,[PREF]
      ,[PRFF]
      ,[PRMF]
      ,[PDMF]
      ,[STATCODE]
      ,[SLSCNL]
      ,[CHGDTE]
      ,[CURYRTUP]
      ,[TOPUPLAST]
      ,[BILCHNL]
      ,[CLNTCODE]
      ,[CLTPHONE01]
      ,[CLTPHONE02]
      ,[LIFCNUM]
      ,[AGNTNUM]
      ,[AGTNAME]
      ,[DTEAPP]
      ,[DTETRM]
      ,[TSALESUNT]
      ,[UNITNUM]
      ,[UNITNAME]
      ,[REGION]
      ,[PRMP]
      ,[PRODCAT]
      ,[TPDCLAIM]
      ,[ADDR04CITY]
      ,[ADDR05PROV]
      ,[SPEF]
      ,[SPMF]
      ,[SPFF]
      ,[SPCF]
      ,[SPMP]
      ,[SPDF]
      ,[SPTTLAMNT]
      ,[TOPUPEF]
      ,[TOPUPMF]
      ,[TOPUPFF]
      ,[TOPUPCF]
      ,[TOPUPMP]
      ,[TOPUPDF]
      ,[TTTLTOPUP]
      ,[WITHEF]
      ,[WITHMF]
      ,[WITHFF]
      ,[WITHCF]
      ,[WITHMP]
      ,[WITHDF]
      ,[TTLWITHAMT]
      ,[LOADINGEXT]
      ,[CLTDOB]
      ,[MEDPRVIND]
      ,[CNTCURR]
      ,[ZZSRCE]
      ,[UALPCTA]
      ,[UALPCTB]
      ,[UALPCTC]
      ,[UALPCTD]
      ,[UALPCTE]
      ,[UALPCTF]
      ,[CODE]
      ,[ZLONGDESC]
      ,[ACTVALUE]
      ,[SURRDATE]
      ,[LSTWDWDATE]
      ,[LSTTOPDATE]
      ,[PRGC]
      ,[PDGC]
      ,[SPRGC]
      ,[SPDGC]
      ,[TOPUPRGC]
      ,[TOPUPGDC]
      ,[WITHRGC]
      ,[WITHDGC]
      ,[UALPCTG]
      ,[UALPCTH]
      ,[PREP]
      ,[SPEP]
      ,[TOPUPEP]
      ,[WITHEP]
      ,[UALPCTI]
      ,[PRIEF]
      ,[SPRIEF]
      ,[TUPRIEF]
      ,[WDPRIEF]
      ,[PRIEFPCT]
      ,[REGIONFLG]
      ,[PRVEF]
      ,[SPRVEF]
      ,[TUPRVEF]
      ,[WDPRVEF]
      ,[PRVEFPCT]
      ,[PRAEF]
      ,[SPRAEF]
      ,[TUPRAEF]
      ,[WDPRAEF]
      ,[PRAEFPCT]
      ,[PDIEF]
      ,[LBIND]
      ,[BASPRCF]
      ,[BASPREF]
      ,[BASPRFF]
      ,[BASPRMF]
      ,[BASPDMF]
      ,[BASPRMPF]
      ,[BASPRGCEF]
      ,[BASPDGCEF]
      ,[BASPREPF]
      ,[BASPRIE]
      ,[BASPRVE]
      ,[BASPRAE]
      ,[TOPPRCF]
      ,[TOPPREF]
      ,[TOPPRFF]
      ,[TOPPRMF]
      ,[TOPPDMF]
      ,[TOPPRMPF]
      ,[TOPPRGCEF]
      ,[TOPPDGCEF]
      ,[TOPPREPF]
      ,[TOPPRIE]
      ,[TOPPRVE]
      ,[TOPPRAE]
      ,[TOTBASFUND]
      ,[TOTTOPFUND]
      ,[PDGV]
      ,[PDGM]
      ,[PRGV]
      ,[PRGM]
      ,[PREC]
      ,[PSEC]
      ,[PDMM]
      ,[PDIF]
      ,[PDNV]
      ,[SPMM]
      ,[SPIF]
      ,[SPNV]
      ,[TOPUPMM]
      ,[TOPUPIF]
      ,[TOPUPNV]
      ,[WITHMM]
      ,[WITHIF]
      ,[WITHNV]
      ,[UALPCTJ]
      ,[UALPCTK]
      ,[UALPCTL]
      ,[BASPDMM]
      ,[BASPDIF]
      ,[BASPDNV]
      ,[TOPPDMM]
      ,[TOPPDIF]
      ,[TOPPDNV]
      ,[PDFI]
      ,[SPFI]
      ,[TOPUPFI]
      ,[WITHFI]
      ,[UALPCTM]
      ,[BASPDFI]
      ,[TOPPDFI]
      ,[PRNV]
      ,[SPPR]
      ,[TOPUPPR]
      ,[WITHPR]
      ,[UALPCTN]
      ,[BASPDPR]
      ,[TOPPDPR]
      ,[PDGT]
      ,[SPGT]
      ,[TOPUPGT]
      ,[WITHGT]
      ,[UALPCTO]
      ,[BASPDGT]
      ,[TOPPDGT]
      ,[IFRS_ONEROUS_GRP]
      ,[IFRS_CY_GRP]
      ,[IFRS_PORT_GRP]
      ,[IFRS_MEASURE_MODEL]
      ,[BASIC_ENTRY_YEAR]
      ,[BASIC_ENTRY_MONTH]
      ,[IFRS_CB_TERM_M]
      ,[MTHS_TO_SALE]
      ,[IFRS_ICG_ID]
      ,[IFRS_ICG_ID_PROPHET]
      ,[SUB_GROUP_ID]
      ,[ENTITY_ID]
      ,[CURRENCY]
      ,[CB_START_DT]
      ,[CB_END_DT]
      ,[REL_INSURANCE_CONTRACT_GROUP_ID]
      ,[SUBSYSTEM]
      ,[CREATED_DATE]
      ,[UPDATED_DATE]
      ,[BATCH_MASTER_ID]
      ,[BATCH_RUN_ID]
      ,[JOB_MASTER_ID]
      ,[JOB_RUN_ID]
      ,[BATCHDATE]
      ,[ETL_PROCESS_DATE_TIME], EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE
	FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION
)A;

END;


