CREATE PROC [FOND_ID].[USP_IFRS17_PROPHETU_REGION] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN 
--- PRE CREATE BACKUP RAW DATA FOR DUPLICACY REMOVAL
--declare variable
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	
BEGIN TRY


------set variable----------------
SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_PROPHETU_REGION';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)
	   
INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,"DESCRIPTION")
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

DROP TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION]
DROP TABLE [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_PREV]
DROP TABLE [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
TRUNCATE TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_INVALID]
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

--DROP TABLE [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
--DROP TABLE [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_PREV]
--TRUNCATE TABLE FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID

CREATE TABLE  [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WITH (HEAP, DISTRIBUTION = ROUND_ROBIN)
AS
SELECT * FROM  [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU]

--- 1. CHECK BLANK DATA (NOTIFY USER IF THERE IS ANY)---
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *,'CNTCURR BLANK' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [CNTCURR] = '' OR [ANBCCD] IS NULL OR [PYRTRM] IS NULL -- no blanks

/*
+++++++++++++++++++++++++++++++++ Need To ASK ++++++++++++++++++++++++++++++++++++++++++++
--- 3. CHECK CC COLUMNS OR NEW RIDER CODE COLUMNS (TBC) 
SELECT DISTINCT([CRTABLECC]) AS [CC] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
SELECT DISTINCT([CRTABLECCP]) AS [CCP] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
SELECT DISTINCT([CRTABLEMCC]) AS [MCC] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
SELECT DISTINCT([PRODCDE]) AS [ESCC] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
SELECT DISTINCT([CRTABLEJCC]) AS [JCC] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
SELECT DISTINCT([CRTABLECCB]) AS [CC61] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
+++++++++++++++++++++++++++++++++ Need To ASK ++++++++++++++++++++++++++++++++++++++++++++
*/

--- 4. CHECK FOR ANY INVALID HOISSDTE (ALREADY CAPTURED IN INVALID REPORT)
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *, 'INVALID HOISSDTE' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [HOISSDTE] like '99999999%' OR [HOISSDTE] IS NULL -- none found

PRINT 'START PPH'
--- 7. CHECK FOR PPH+ PLAN (TBC)
DECLARE @CHECKPPH NVARCHAR (4000) =
'SELECT COUNT(A.CHDRNUM) from (
SELECT	[CHDRNUM] AS CHDRNUM 
		, [STATCODE] AS STATCODE 
		, [CRRCD] AS CRRCD
 		, [CRTABLHS] AS CRTABLHS
		, [RCDHS] AS RCDHS
		, [SUMINHS] AS SUMINHS
		, [PPHPLUS_PLAN_TYPE] AS PPHPLUS_PLAN_TYPE
		,([API] + CONVERT(FLOAT,[BILLFREQ])*[PRUSVR]) AS ANN_PREM
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU]
WHERE [CRTABLHS] in (''H1Z1'', ''H1Z3'', ''H1Z7'', ''H1Z5'') AND ROUND([SUMINHS],0)>0 AND [PPHPLUS_PLAN_TYPE] = ''''
) A';

PRINT @CHECKPPH
PRINT 'END PPH'


PRINT 'START PPH2'

IF @CHECKPPH IS NOT NULL
BEGIN
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *, 'PPH CEK' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [CRTABLHS] in ('H1Z1', 'H1Z3', 'H1Z7', 'H1Z5') AND ROUND([SUMINHS],0)>0 AND [PPHPLUS_PLAN_TYPE] = ''
END;

PRINT 'END PPH2'

/*
SELECT	[CHDRNUM]
		, [STATCODE]
		, [CRRCD]
		, [CRTABLHS]
		, [RCDHS]
		, [SUMINHS]
		, [PPHPLUS_PLAN_TYPE]
		,(CONVERT(FLOAT,[API]) + CONVERT(FLOAT,[BILLFREQ])*CONVERT(FLOAT,[PRUSVR])) AS ANN_PREM
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [CRTABLHS] in ('H1Z1', 'H1Z3', 'H1Z7', 'H1Z5') AND ROUND([SUMINHS],0)>0 AND [PPHPLUS_PLAN_TYPE] = ''
*/

--- 8. CHECK FOR CIR PLAN (TBC)
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *,'INVALID CIR PLAN'
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [CODE_CHC] <> '' AND [PLANTYPE_CHC] = ''

PRINT '1'
	--- 8.1. UPDATE BASED ON LM VE OR RELOAD LAS DATA (TBC)
CREATE TABLE  [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_PREV]
WITH (HEAP, DISTRIBUTION = ROUND_ROBIN)
AS
SELECT A.SLSCNL
,A.CHDRNUM
,A.CNTCURR
,A.STATCODE
,A.CNTTYPE
,A.ANBCCD
,A.SEX
,A.MORTCLS
,A.API
,A.BILLFREQ
,A.CRRCD
,A.PRUSVR
,A.SINGP
,A.SUMINS
,A.CRTABLECC
,A.ANBCC
,A.RCDCC
,A.SUMINCC
,A.RCESAGECC
,A.CRTABLEAD
,A.ANBAD
,A.RCDAD
,A.MORTCLSAD
,A.SUMINAD
,A.RCESAGEAD
,A.CRTABLEADD
,A.ANBADD
,A.RCDADD
,A.MORTCLSADD
,A.SUMINADD
,A.RCESAGEADD
,A.CRTABLEHB
,A.ANBHB
,A.RCDHB
,A.SUMINHB
,A.RCESAGEHB
,A.ANBWVR
,A.CRTABLEWVR
,A.RCDWVR
,A.SUMINWVR
,A.RCESAGEWVR
,A.CRTABLESPO
,A.ANBSPO
,A.SEXTWO
,A.RCDSPO
,A.SUMINSPO
,A.RCESDTE
      ,case
		when D.[CHDRNUM] is null then A.[HOISSDTE]
		else D.[HOISSDTE]
		end as [HOISSDTE]
,A.TTLFUND
,A.PRCF
,A.PREF
,A.PRFF
,A.PRMF
,A.PDMF
,A.CHGDTE
,A.PYRTRM
,A.CURYRTUP
,A.TOPUPLAST
,A.PCESTRM
,A.ANBCCP
,A.RCDCCP
,A.RCESAGECCP
,A.SUMINCCP
,A.CRTABLECCP
,A.ALLOCIND
,A.BILCHNL
,A.WDRAMNT
,A.CLNTNAME
,A.LIFCNUM
,A.AGNTNUM
,A.UNITNUM
,A.CRTABLHS
,A.ANBHS
,A.RCDHS
,A.SUMINHS
,A.RCESAGEHS
,A.CRTABLLT
,A.ANBLT
,A.RCDLT
,A.SUMINLT
,A.RCESAGELT
,A.CRTABL3LF
,A.ANB3LF
,A.SEX3LF
,A.RCD3LF
,A.SUMIN3LF
,A.RCESDT3LF
,A.PAAFLAG
,A.PTDATE
,A.WAIVERSTAT
,A.CLAIMSAR
,A.FPAYDATE
,A.PRMP
,A.TPDCLAIM
,A.ADDR04CITY
,A.ADDR05PROV
,A.CRTABLECI
,A.ANBCI
,A.RCDCI
,A.SUMINCI
,A.RCESDTECI
,A.CRTABLEMCC
,A.ANBMCC
,A.RCDMCC
,A.SUMINMCC
,A.RCESDTEMCC
,A.PRODCDE
,A.ANBESCC
,A.RCDESCC
,A.SUMINESCC
,A.RCESDTEESCC
,A.CLTBDAY
,A.MEDPCLAS
,A.ADMINCHG
,A.COIDEBT
,A.TOTCHGHS
,A.TOTTPACOST
,A.CODE
,A.ZLONGDESC
,A.RCESAGESO
,A.RCESAGEPW
,A.RCESAGEPWX
,A.RCESAGECI
,A.RCESAGEMC
,A.RCESAGEEC
,A.LSTTOPDATE
,A.COWNNUM
,A.CRTABLEJCC
,A.ANBJCC
,A.RCDJCC
,A.SUMINJCC
,A.RCESAGEJCC
,A.SUMINPMC
,A.PRGC
,A.PDGC
,A.PRUSTATCDE
,A.CRTABLESAV
,A.AGNTDLCODE
,A.UMCODE
,A.PREP
,A.CLMTYP
,A.PRIEF
,A.EDUPAR1C
,A.EDUP1SUM
,A.EDUPAR2C
,A.EDUP2SUM
,A.CRTABL3LT
,A.ANB3LT
,A.RCD3LT
,A.SUMIN3LT
,A.RCESAGE3LT
,A.NLGFLAG
,A.REGIONFLG
,A.PRVEF
,A.PRAEF
,A.ANBCCB
,A.RCDCCB
,A.RCESAGECCB
,A.SUMINCCB
,A.CRTABLECCB
,A.PDIEF
--,A.MINIIND
,A.PDGV
,A.PDGM
,A.CODE_CHC
,A.AGE_ENTRY_CHC
,A.CRRCD_CHC
      ,case
		when B.[CHDRNUM] is null then A.[PLANTYPE_CHC]
		else B.[PPHPLUS_PLAN_TYPE]
		end as [PLANTYPE_CHC]
,A.AGE_END_CHC
,A.CODE_DISABLE
,A.AGE_ENTRY_DISABLE
,A.CRRCD_DISABLE
,A.SUMINS_DISABLE
,A.AGE_END_DISABLE
,A.PRGV
,A.PRGM
,A.TOTAL_FUND_BAV
,A.PRCF_BAV
,A.PREF_BAV
,A.PRFF_BAV
,A.PRGC_BAV
,A.PRMF_BAV
,A.PRMP_BAV
,A.PRIE_BAV
,A.PRAE_BAV
,A.PRVE_BAV
,A.PRGM_BAV
,A.PRGV_BAV
,A.PDFF_BAV
,A.PDGC_BAV
,A.PDGM_BAV
,A.PDGV_BAV
,A.PLEF_BAV
,A.TOTAL_FUND_TPAV
,A.PRCF_TPAV
,A.PREF_TPAV
,A.PRFF_TPAV
,A.PRGC_TPAV
,A.PRMF_TPAV
,A.PRMP_TPAV
,A.PRIE_TPAV
,A.PRAE_TPAV
,A.PRVE_TPAV
,A.PRGM_TPAV
,A.PRGV_TPAV
,A.PDFF_TPAV
,A.PDGC_TPAV
,A.PDGM_TPAV
,A.PDGV_TPAV
,A.PLEF_TPAV
,A.TOTAL_UNIT_ACT
,A.PRCF_ACT
,A.PREF_ACT
,A.PRFF_ACT
,A.PRGC_ACT
,A.PRMF_ACT
,A.PRMP_ACT
,A.PRIE_ACT
,A.PRAE_ACT
,A.PRVE_ACT
,A.PRGM_ACT
,A.PRGV_ACT
,A.PDFF_ACT
,A.PDGC_ACT
,A.PDGM_ACT
,A.PDGV_ACT
,A.PLEF_ACT
,A.TOTAL_UNIT_PRV
,A.PRCF_PRV
,A.PREF_PRV
,A.PRFF_PRV
,A.PRGC_PRV
,A.PRMF_PRV
,A.PRMP_PRV
,A.PRIE_PRV
,A.PRAE_PRV
,A.PRVE_PRV
,A.PRGM_PRV
,A.PRGV_PRV
,A.PDFF_PRV
,A.PDGC_PRV
,A.PDGM_PRV
,A.PDGV_PRV
,A.PLEF_PRV
,A.BASIC_PREMIUM_PREV
,A.STFLAG
,A.SIOFLAG
,A.BILLCHNL_PRV
,A.FUPCODE_FOR_PBC
,A.REQUEST_DATE_FOR_PBC
,A.PRNV
      ,case
		when C.[CHDRNUM] is null then A.[PPHPLUS_PLAN_TYPE]
		else C.[PPHPLUS_PLAN_TYPE]
		end as [PPHPLUS_PLAN_TYPE]
,A.PDNV
,A.PPHPLUS_CAMPAIGN_FLAG
,A.CODE_PRUTOP_CCB61
,A.AGE_ENTRY_PRUTOP_CCB61
,A.CRRCD_PRUTOP_CCB61
,A.CODE_PRUTOP_CCB34
,A.AGE_ENTRY_PRUTOP_CCB34
,A.CRRCD_PRUTOP_CCB34
,A.CODE_PRUTOP_ESCC
,A.AGE_ENTRY_PRUTOP_ESCC
,A.CRRCD_PRUTOP_ESCC
from FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_HIS as A -- Need to Change with Real Table
left join STAG_ID.STAG_PROPHETU_CHCPLAN as B
on A.[CHDRNUM] = B.[CHDRNUM]
left join STAG_ID.STAG_PROPHETU_PPHPPLAN as C
on A.[CHDRNUM] = C.[CHDRNUM]
left join STAG_ID.STAG_PROPHETU_HOISSDT as D
on A.[CHDRNUM] = D.[CHDRNUM]

PRINT '2'

--- 9. CHECK FOR WAIVER AGE
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *,'WAIVER AGE CHECKED' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [RCESAGEWVR] > 94


/*
--- 10. CHECK FOR CITY AND PROVINCE
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *,'CHECK CITY AND PROVINCI' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE [ADDR04CITY] LIKE '%""%' OR [ADDR05PROV] LIKE '%""%' OR [REGIONFLG] = ''
*/
	--- 10.1. UPDATE FOR CITY AND PROVINCE (TBC, remove "" special character and put region indicator in column 152)

PRINT '3'
--- 11. NS REGION INDICATOR
	--- 11.1. Clears previous month policy list
	BEGIN TRY
	DROP TABLE [FOND_ID].[NS_UNFLAGGED_PROPHETU]
	PRINT 'Table exist, dropping table..'
	END TRY
	BEGIN CATCH
	PRINT 'Table does not exists..'
	END CATCH

PRINT '4'	
	--- 11.2. Lists NS policies without '2' flag
	SELECT PROPHETU.[CHDRNUM] 
	INTO [FOND_ID].[NS_UNFLAGGED_PROPHETU]
	FROM
		(
			SELECT	[CHDRNUM]
					,[ADDR04CITY] AS CITY
					,[ADDR05PROV] AS PROVINCE
					,[REGIONFLG] AS REGION_IND
					,CASE WHEN [ADDR04CITY] = '' THEN [ADDR05PROV] ELSE [ADDR04CITY] END AS REGION
			FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP] AS PROPHETU
		LEFT JOIN STAG_ID.STAG_NS_CITY_DICTIONARY AS CITYPROVINCE ON PROPHETU.[ADDR04CITY] = TRIM(UPPER(CITYPROVINCE.[CITY_DICTIONARY]))		
		WHERE CITYPROVINCE.[CITY_DICTIONARY] IS NOT NULL and PROPHETU.REGIONFLG = 0	
		) PROPHETU

PRINT '5'

-- INSERT TO CHECKING TABLE
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT *,'NS POLICIES WITHOUT 2 FLAG' 
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
WHERE CHDRNUM IN (
SELECT CHDRNUM FROM [FOND_ID].[NS_UNFLAGGED_PROPHETU]
)

PRINT '6'
	--- 11.3. Updates indicator for records found above
	UPDATE [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP]
	SET [REGIONFLG] = 2
	WHERE [CHDRNUM] IN (SELECT * FROM [FOND_ID].[NS_UNFLAGGED_PROPHETU])

PRINT '7'

--- 12. BASIC ENTRY AGE CHECK
	--- 12.1. Check for any invalid entry age
INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_INVALID
SELECT	*,'INVALID ENTRY AGE' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP] -- found One, 79762537
WHERE ANBCCD < 0 OR ANBCCD > 99


--- 13. DCS READY INPUT
CREATE TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION]
WITH (HEAP, DISTRIBUTION = ROUND_ROBIN)
AS
SELECT AA.SLSCNL
,AA.CHDRNUM
,AA.CNTCURR
,AA.STATCODE
,AA.CNTTYPE
,AA.ANBCCD
,AA.SEX
,AA.MORTCLS
,AA.API
,AA.BILLFREQ
,AA.CRRCD
,AA.PRUSVR
,AA.SINGP
,AA.SUMINS
,AA.CRTABLECC
,AA.ANBCC
,AA.RCDCC
,AA.SUMINCC
,AA.RCESAGECC
,AA.CRTABLEAD
,AA.ANBAD
,AA.RCDAD
,AA.MORTCLSAD
,AA.SUMINAD
,AA.RCESAGEAD
,AA.CRTABLEADD
,AA.ANBADD
,AA.RCDADD
,AA.MORTCLSADD
,AA.SUMINADD
,AA.RCESAGEADD
,AA.CRTABLEHB
,AA.ANBHB
,AA.RCDHB
,AA.SUMINHB
,AA.RCESAGEHB
,AA.ANBWVR
,AA.CRTABLEWVR
,AA.RCDWVR
,AA.SUMINWVR
,AA.RCESAGEWVR
,AA.CRTABLESPO
,AA.ANBSPO
,AA.SEXTWO
,AA.RCDSPO
,AA.SUMINSPO
,AA.RCESDTE
,AA.HOISSDTE
,AA.TTLFUND
,AA.PRCF
,AA.PREF
,AA.PRFF
,AA.PRMF
,AA.PDMF
,AA.CHGDTE
,AA.PYRTRM
,AA.CURYRTUP
,AA.TOPUPLAST
,AA.PCESTRM
,AA.ANBCCP
,AA.RCDCCP
,AA.RCESAGECCP
,AA.SUMINCCP
,AA.CRTABLECCP
,AA.ALLOCIND
,AA.BILCHNL
,AA.WDRAMNT
      --,AA.[Column 67]
,AA.LIFCNUM
,AA.AGNTNUM
,AA.UNITNUM
,AA.CRTABLHS
,AA.ANBHS
,AA.RCDHS
,AA.SUMINHS
,AA.RCESAGEHS
,AA.CRTABLLT
,AA.ANBLT
,AA.RCDLT
,AA.SUMINLT
,AA.RCESAGELT
,AA.CRTABL3LF
,AA.ANB3LF
,AA.SEX3LF
,AA.RCD3LF
,AA.SUMIN3LF
,AA.RCESDT3LF
,AA.PAAFLAG
,AA.PTDATE
,AA.WAIVERSTAT
,AA.CLAIMSAR
,AA.FPAYDATE
,AA.PRMP
,AA.TPDCLAIM
,AA.ADDR04CITY
,AA.ADDR05PROV
,AA.CRTABLECI
,AA.ANBCI
,AA.RCDCI
,AA.SUMINCI
,AA.RCESDTECI
,AA.CRTABLEMCC
,AA.ANBMCC
,AA.RCDMCC
,AA.SUMINMCC
,AA.RCESDTEMCC
,AA.PRODCDE
,AA.ANBESCC
,AA.RCDESCC
,AA.SUMINESCC
,AA.RCESDTEESCC
,AA.CLTBDAY
,AA.MEDPCLAS
,AA.ADMINCHG
,AA.COIDEBT
,AA.TOTCHGHS
,AA.TOTTPACOST
,AA.CODE
,AA.ZLONGDESC
,AA.RCESAGESO
,AA.RCESAGEPW
,AA.RCESAGEPWX
,AA.RCESAGECI
,AA.RCESAGEMC
,AA.RCESAGEEC
,AA.LSTTOPDATE
,AA.COWNNUM
,AA.CRTABLEJCC
,AA.ANBJCC
,AA.RCDJCC
,AA.SUMINJCC
,AA.RCESAGEJCC
,AA.SUMINPMC
,AA.PRGC
,AA.PDGC
,AA.PRUSTATCDE
,AA.CRTABLESAV
,AA.AGNTDLCODE
,AA.UMCODE
,AA.PREP
,AA.CLMTYP
,AA.PRIEF
,AA.EDUPAR1C
,AA.EDUP1SUM
,AA.EDUPAR2C
,AA.EDUP2SUM
,AA.CRTABL3LT
,AA.ANB3LT
,AA.RCD3LT
,AA.SUMIN3LT
,AA.RCESAGE3LT
,AA.NLGFLAG
,AA.[REGIONFLG] AS REGION_IND
	  ,CASE WHEN AC.AR_IND IS NULL THEN 0 ELSE AC.AR_IND END AS AR_IND
	  ,CASE WHEN AD.HNW_IND IS NULL THEN 0 ELSE AD.HNW_IND END AS HNW_IND
	  ,CASE WHEN AE.RI_IND IS NULL THEN 0 ELSE AE.RI_IND END AS RI_IND
	  ,CASE WHEN AE.ADDR IS NULL THEN 0 ELSE AE.ADDR END AS ADDR
	  ,CASE WHEN AE.DTHR IS NULL THEN 0 ELSE AE.DTHR END AS DTHR
	  ,CASE WHEN AE.RDDS IS NULL THEN 0 ELSE AE.RDDS  END AS RDDS
	  ,CASE WHEN AE.SAR_RI_WAIV IS NULL THEN 0 ELSE AE.SAR_RI_WAIV END AS SAR_WAIV	 
	  ,CASE WHEN AE.SAR_RI_WAIV2 IS NULL THEN 0 ELSE AE.SAR_RI_WAIV2 END AS SAR_WAIV2
	  ,CASE WHEN AE.SAR_RI_CI IS NULL THEN 0 ELSE AE.SAR_RI_CI END AS SAR_CI
,AA.PRVEF
,AA.PRAEF
,AA.ANBCCB
,AA.RCDCCB
,AA.RCESAGECCB
,AA.SUMINCCB
,AA.CRTABLECCB
,AA.PDIEF
	  --,AA.[Column 161] (Mini PAA / PSAA Flag, currently not used)
--,AA.MINIIND
,AA.PDGV
,AA.PDGM
,AA.CODE_CHC
,AA.AGE_ENTRY_CHC
,AA.CRRCD_CHC
,AA.PLANTYPE_CHC
,AA.AGE_END_CHC
,AA.CODE_DISABLE
,AA.AGE_ENTRY_DISABLE
,AA.CRRCD_DISABLE
,AA.SUMINS_DISABLE
,AA.AGE_END_DISABLE
,AA.PRGV
,AA.PRGM
,AA.TOTAL_FUND_BAV
,AA.PRCF_BAV
,AA.PREF_BAV
,AA.PRFF_BAV
,AA.PRGC_BAV
,AA.PRMF_BAV
,AA.PRMP_BAV
,AA.PRIE_BAV
,AA.PRAE_BAV
,AA.PRVE_BAV
,AA.PRGM_BAV
,AA.PRGV_BAV
,AA.PDFF_BAV
,AA.PDGC_BAV
,AA.PDGM_BAV
,AA.PDGV_BAV
,AA.PLEF_BAV
,AA.TOTAL_FUND_TPAV
,AA.PRCF_TPAV
,AA.PREF_TPAV
,AA.PRFF_TPAV
,AA.PRGC_TPAV
,AA.PRMF_TPAV
,AA.PRMP_TPAV
,AA.PRIE_TPAV
,AA.PRAE_TPAV
,AA.PRVE_TPAV
,AA.PRGM_TPAV
,AA.PRGV_TPAV
,AA.PDFF_TPAV
,AA.PDGC_TPAV
,AA.PDGM_TPAV
,AA.PDGV_TPAV
,AA.PLEF_TPAV
,AA.TOTAL_UNIT_ACT
,AA.PRCF_ACT
,AA.PREF_ACT
,AA.PRFF_ACT
,AA.PRGC_ACT
,AA.PRMF_ACT
,AA.PRMP_ACT
,AA.PRIE_ACT
,AA.PRAE_ACT
,AA.PRVE_ACT
,AA.PRGM_ACT
,AA.PRGV_ACT
,AA.PDFF_ACT
,AA.PDGC_ACT
,AA.PDGM_ACT
,AA.PDGV_ACT
,AA.PLEF_ACT
,AA.TOTAL_UNIT_PRV
,AA.PRCF_PRV
,AA.PREF_PRV
,AA.PRFF_PRV
,AA.PRGC_PRV
,AA.PRMF_PRV
,AA.PRMP_PRV
,AA.PRIE_PRV
,AA.PRAE_PRV
,AA.PRVE_PRV
,AA.PRGM_PRV
,AA.PRGV_PRV
,AA.PDFF_PRV
,AA.PDGC_PRV
,AA.PDGM_PRV
,AA.PDGV_PRV
,AA.PLEF_PRV
,AA.BASIC_PREMIUM_PREV
,AA.STFLAG
,AA.SIOFLAG
,AA.BILLCHNL_PRV
,AA.FUPCODE_FOR_PBC
,AA.REQUEST_DATE_FOR_PBC
,AA.PRNV
,AA.PPHPLUS_PLAN_TYPE
,AA.PDNV
,AA.PPHPLUS_CAMPAIGN_FLAG
,AA.CODE_PRUTOP_CCB61
,AA.AGE_ENTRY_PRUTOP_CCB61
,AA.CRRCD_PRUTOP_CCB61
,AA.CODE_PRUTOP_CCB34
,AA.AGE_ENTRY_PRUTOP_CCB34
,AA.CRRCD_PRUTOP_CCB34
,AA.CODE_PRUTOP_ESCC
,AA.AGE_ENTRY_PRUTOP_ESCC
,AA.CRRCD_PRUTOP_ESCC
/*	  ,AA.[Column 263]
--	  ,AA.[Column 264]
--	  ,AA.[Column 265]
--	  ,AA.[Column 266]
--	  ,AA.[Column 267]
--	  ,AA.[Column 268]
*/
,AA.[IFRS_ONEROUS_GRP]
,AA.[IFRS_CY_GRP]
,AA.[IFRS_PORT_GRP]
,AA.[IFRS_MEASURE_MODEL]
,AA.[BASIC_ENTRY_YEAR]
,AA.[BASIC_ENTRY_MONTH]
,AA.[IFRS_CB_TERM_M]
,AA.[MTHS_TO_SALE]
,AA.[IFRS_ICG_ID]
,AA.[IFRS_ICG_ID_PROPHET]
,AA.[SUB_GROUP_ID]
,AA.[ENTITY_ID]
,AA.[CB_START_DT]
,AA.[CB_END_DT]
,AA.[REL_INSURANCE_CONTRACT_GROUP_ID],
@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
@BATCH_RUN_ID AS BATCH_RUN_ID,
@JOB_MASTER_ID AS JOB_MASTER_ID,
@JOB_RUN_ID  AS JOB_RUN_ID,
@BATCHDATESTR AS BATCHDATE,
@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_TEMP] AS AA
LEFT JOIN STAG_ID.STAG_LIST_OF_CITY_USED AS AB ON AA.[ADDR04CITY] = AB.[CITY]
LEFT JOIN STAG_ID.STAG_AR_COMBINE_ALL AS AC ON AA.[CHDRNUM] = AC.[CHDRNUM]
LEFT JOIN STAG_ID.STAG_HNW AS AD ON AA.[CHDRNUM] = AD.[CHDRNUM]
LEFT JOIN STAG_ID.STAG_REINS_LINK AS AE ON ROUND(AA.[CHDRNUM],0) = ROUND(AE.[POL_NO],0) -- Update to current month

PRINT '8'
--- 13. DCS READY INPUT

--------------------------------------------------------------------
--- BACKUP MPFILES TABLE TO HISTORY TABLE
--------------------------------------------------------------------
-- insert log process
SET @V_SEQNO 	= @V_SEQNO + 1;
SET @V_START 	= convert(datetime,getDATE());
SET @V_DESCRIPTION	= 'BACKUP FOND_ID.FOND_IFRS17_PROPHETU_REGION TO FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS: ' + convert(varchar,@V_START,121);
PRINT @V_DESCRIPTION;

DELETE FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) < EOMONTH(DATEADD(MONTH,-12,CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))))
OR CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
SELECT A.*
FROM (
	SELECT SLSCNL,CHDRNUM,CNTCURR,STATCODE,CNTTYPE,ANBCCD,SEX,MORTCLS,API,BILLFREQ,CRRCD,PRUSVR,SINGP,SUMINS,CRTABLECC,ANBCC,RCDCC,SUMINCC,RCESAGECC,CRTABLEAD,ANBAD,RCDAD,MORTCLSAD,SUMINAD,RCESAGEAD,CRTABLEADD,ANBADD,RCDADD,MORTCLSADD,SUMINADD,RCESAGEADD,CRTABLEHB,ANBHB,RCDHB,SUMINHB,RCESAGEHB,ANBWVR,CRTABLEWVR,RCDWVR,SUMINWVR,RCESAGEWVR,CRTABLESPO,ANBSPO,SEXTWO,RCDSPO,SUMINSPO,RCESDTE,HOISSDTE,TTLFUND,PRCF,PREF,PRFF,PRMF,PDMF,CHGDTE,PYRTRM,CURYRTUP,TOPUPLAST,PCESTRM,ANBCCP,RCDCCP,RCESAGECCP,SUMINCCP,CRTABLECCP,ALLOCIND,BILCHNL,WDRAMNT,LIFCNUM,AGNTNUM,UNITNUM,CRTABLHS,ANBHS,RCDHS,SUMINHS,RCESAGEHS,CRTABLLT,ANBLT,RCDLT,SUMINLT,RCESAGELT,CRTABL3LF,ANB3LF,SEX3LF,RCD3LF,SUMIN3LF,RCESDT3LF,PAAFLAG,PTDATE,WAIVERSTAT,CLAIMSAR,FPAYDATE,PRMP,TPDCLAIM,ADDR04CITY,ADDR05PROV,CRTABLECI,ANBCI,RCDCI,SUMINCI,RCESDTECI,CRTABLEMCC,ANBMCC,RCDMCC,SUMINMCC,RCESDTEMCC,PRODCDE,ANBESCC,RCDESCC,SUMINESCC,RCESDTEESCC,CLTBDAY,MEDPCLAS,ADMINCHG,COIDEBT,TOTCHGHS,TOTTPACOST,CODE,ZLONGDESC,RCESAGESO,RCESAGEPW,RCESAGEPWX,RCESAGECI,RCESAGEMC,RCESAGEEC,LSTTOPDATE,COWNNUM,CRTABLEJCC,ANBJCC,RCDJCC,SUMINJCC,RCESAGEJCC,SUMINPMC,PRGC,PDGC,PRUSTATCDE,CRTABLESAV,AGNTDLCODE,UMCODE,PREP,CLMTYP,PRIEF,EDUPAR1C,EDUP1SUM,EDUPAR2C,EDUP2SUM,CRTABL3LT,ANB3LT,RCD3LT,SUMIN3LT,RCESAGE3LT,NLGFLAG,REGION_IND,AR_IND,HNW_IND,RI_IND,ADDR,DTHR,RDDS,SAR_WAIV,SAR_WAIV2,SAR_CI,PRVEF,PRAEF,ANBCCB,RCDCCB,RCESAGECCB,SUMINCCB,CRTABLECCB,PDIEF,PDGV,PDGM,CODE_CHC,AGE_ENTRY_CHC,CRRCD_CHC,PLANTYPE_CHC,AGE_END_CHC,CODE_DISABLE,AGE_ENTRY_DISABLE,CRRCD_DISABLE,SUMINS_DISABLE,AGE_END_DISABLE,PRGV,PRGM,TOTAL_FUND_BAV,PRCF_BAV,PREF_BAV,PRFF_BAV,PRGC_BAV,PRMF_BAV,PRMP_BAV,PRIE_BAV,PRAE_BAV,PRVE_BAV,PRGM_BAV,PRGV_BAV,PDFF_BAV,PDGC_BAV,PDGM_BAV,PDGV_BAV,PLEF_BAV,TOTAL_FUND_TPAV,PRCF_TPAV,PREF_TPAV,PRFF_TPAV,PRGC_TPAV,PRMF_TPAV,PRMP_TPAV,PRIE_TPAV,PRAE_TPAV,PRVE_TPAV,PRGM_TPAV,PRGV_TPAV,PDFF_TPAV,PDGC_TPAV,PDGM_TPAV,PDGV_TPAV,PLEF_TPAV,TOTAL_UNIT_ACT,PRCF_ACT,PREF_ACT,PRFF_ACT,PRGC_ACT,PRMF_ACT,PRMP_ACT,PRIE_ACT,PRAE_ACT,PRVE_ACT,PRGM_ACT,PRGV_ACT,PDFF_ACT,PDGC_ACT,PDGM_ACT,PDGV_ACT,PLEF_ACT,TOTAL_UNIT_PRV,PRCF_PRV,PREF_PRV,PRFF_PRV,PRGC_PRV,PRMF_PRV,PRMP_PRV,PRIE_PRV,PRAE_PRV,PRVE_PRV,PRGM_PRV,PRGV_PRV,PDFF_PRV,PDGC_PRV,PDGM_PRV,PDGV_PRV,PLEF_PRV,BASIC_PREMIUM_PREV,STFLAG,SIOFLAG,BILLCHNL_PRV,FUPCODE_FOR_PBC,REQUEST_DATE_FOR_PBC,PRNV,PPHPLUS_PLAN_TYPE,PDNV,PPHPLUS_CAMPAIGN_FLAG,CODE_PRUTOP_CCB61,AGE_ENTRY_PRUTOP_CCB61,CRRCD_PRUTOP_CCB61,CODE_PRUTOP_CCB34,AGE_ENTRY_PRUTOP_CCB34,CRRCD_PRUTOP_CCB34,CODE_PRUTOP_ESCC,AGE_ENTRY_PRUTOP_ESCC,CRRCD_PRUTOP_ESCC,IFRS_ONEROUS_GRP,IFRS_CY_GRP,IFRS_PORT_GRP,IFRS_MEASURE_MODEL,BASIC_ENTRY_YEAR,BASIC_ENTRY_MONTH,IFRS_CB_TERM_M,MTHS_TO_SALE,IFRS_ICG_ID,IFRS_ICG_ID_PROPHET,SUB_GROUP_ID,ENTITY_ID,CB_START_DT,CB_END_DT,REL_INSURANCE_CONTRACT_GROUP_ID, EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE,@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
	@BATCH_RUN_ID AS BATCH_RUN_ID,
	@JOB_MASTER_ID AS JOB_MASTER_ID,
	@JOB_RUN_ID  AS JOB_RUN_ID,
	@BATCHDATESTR AS BATCHDATE,
	@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
	FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION
)A;


END;


