CREATE PROC [FOND_ID].[USP_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	


SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');

SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)


BEGIN TRY

IF OBJECT_ID('tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP;
IF OBJECT_ID('tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER','U') IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER;



---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP
---------------------------------------------------------------------
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

PRINT('JOB IS STARTED WITH BATCHDATESTR=' + @BATCHDATESTR + ' AND PRD_ID=' + CAST(@PRD_ID AS VARCHAR));
PRINT(CONCAT(YEAR(@BATCHDATESTR)-1,'-12-31'));

CREATE TABLE tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP
WITH
(
  DISTRIBUTION = HASH(CHDRNUM),
  HEAP
)
AS
SELECT * FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS A
	WHERE BACKUP_BATCHDATE = CAST(CONCAT(YEAR(@BATCHDATESTR)-1,'-12-31') AS DATE)
;

	
---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP
---------------------------------------------------------------------
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

CREATE TABLE tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP
WITH
(
  DISTRIBUTION = HASH(CHDRNUM),
  HEAP
)
AS
SELECT * FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS A
	WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
;


---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER
---------------------------------------------------------------------

SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

CREATE TABLE FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER
WITH
(
  DISTRIBUTION = HASH(CHDRNUM),
  HEAP
)
AS
SELECT 
EOP.[PRODUCT_CD]
,EOP.[BENEFIT_CD]
,EOP.[CHDRNUM]
,EOP.[CRTABLE]
,EOP.[ANBCCD]
,EOP.[SEX]
,EOP.[MORTCLS]
,EOP.[PRMTRM]
,EOP.[RSKTRM]
,EOP.[PREMI]
,EOP.[BILLFREQ]
,EOP.[SUMINS]
,EOP.[TOTBON]
,EOP.[PTDATE]
,EOP.[HOISSDTE]
,EOP.[CRRCD]
,EOP.[RCESDTE]
,EOP.[CNTCURR]
,EOP.[STATCODE]
,EOP.[CURRFROM]
,EOP.[ZLINSTPREM]
,EOP.[BPAYTY]
,EOP.[BPAYNY]
,EOP.[SLSCNL]
,EOP.[BILLCHNL]
,EOP.[ZPDFSURR]
,EOP.[CLTPHONE01]
,EOP.[CLTPHONE02]
,EOP.[LIFCNUM]
,EOP.[AGNTNUM]
,EOP.[DTEAPP]
,EOP.[DTETRM]
,EOP.[TSALESUNT]
,EOP.[REPORTAG]
,EOP.[COLUMN_NULL1] AS [ClaimWVR]
,EOP.[COLUMN_ZERO1] AS [ClaimWV_RES]
,EOP.[FUND] AS [PCA_CLASS1]
,EOP.[COLUMN_NULL2] AS [WVR_DATESTART]
,EOP.[CLTADDR04]
,EOP.[CLTADDR05]
,EOP.[COLUMN_ZERO2] AS [CLAIM_RES]
,EOP.[CLTDOB]
,EOP.[MEDFLG]
,EOP.[PLAN_TRAD]
,EOP.[MODE]
,EOP.[PRUBP]
,EOP.[CHANNEL]
,EOP.[SRCEBUS]
,EOP.[REASONCD]
,EOP.[LONGDESC]
,EOP.[COLUMN 48] AS [REGION_INDICATOR]
,EOP.[PRUSEHAT_SOLUTION_PLAN_TYPE]
,EOP.[SUBSTANDARD_LOADING]
,EOP.[CAMPAIGN_FLAG] --Add June 2021 (EOP) new column (Added in v2)
,EOP.[TOTCLAIMS] --updated by dyah 09/08/2022
,EOP.[STAT_SECT] --updated by dyah 09/08/2022
,EOP.[REN_PREM_IND] --updated by dyah 09/08/2022
,EOP.[FAMPLAN_IND] --updated by dyah 09/08/2022 
,EOP.[LOOKUP_CODE] -- DARA 230401
,EOP.[CV_BALANCE] -- ALDO 202312
,EOP.[E-SUBMISSION_E-POLICY_AND_MAILFLAG]
,EOP.[WP_FLAG]
,EOP.[CAMP_CODE]
,EOP.[RBP_STATE]
,EOP.[IFRS_ONEROUS_GRP]
,EOP.[IFRS_CY_GRP]
,EOP.[IFRS_PORT_GRP]
,EOP.[IFRS_MEASURE_MODEL]
,EOP.[BASIC_ENTRY_YEAR]
,EOP.[BASIC_ENTRY_MONTH]
,EOP.[IFRS_CB_TERM_M]
,EOP.[MTHS_TO_SALE]
,EOP.[IFRS_ICG_ID]
,EOP.[IFRS_ICG_ID_PROPHET]
,EOP.[SUB_GROUP_ID]
,EOP.[ENTITY_ID]
,EOP.[CB_START_DT]
,EOP.[CB_END_DT]
,EOP.[REL_INSURANCE_CONTRACT_GROUP_ID]
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID  AS JOB_RUN_ID
,@BATCHDATESTR AS BATCHDATE
,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_EOP EOP
JOIN tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP AS BASIC_POLICY ON CONCAT(EOP.[CHDRNUM],EOP.[PRODUCT_CD]) = CONCAT(BASIC_POLICY.[CHDRNUM],BASIC_POLICY.[PRODUCT_CD])
LEFT JOIN tempdb.dbo.#FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_MI_RIDER_SOP AS SOP ON CONCAT(EOP.[CHDRNUM],EOP.[PRODUCT_CD],EOP.[BENEFIT_CD]) = CONCAT(SOP.[CHDRNUM],SOP.[PRODUCT_CD],SOP.[BENEFIT_CD])
WHERE SOP.[CHDRNUM] IS NULL AND EOP.[PRODUCT_CD] <> EOP.[BENEFIT_CD]
;

SET @V_END = CURRENT_TIMESTAMP;
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_DESCRIPTION = CONCAT('Finish ', @V_FUNCTION_NAME, ' : ', @V_END, ' Duration ', DATEDIFF(MINUTE, @V_START, @V_END));

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_END, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
