CREATE PROC [FOND_ID].[USP_IFRS17_PROPHETU_REGION_AOM_5ABC] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');

SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_PROPHETU_REGION_AOM_5ABC';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,[DESCRIPTION])
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

BEGIN TRY
DROP TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_AOM_5ABC];
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

BEGIN TRY
CREATE TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_AOM_5ABC]
WITH
	(
	  DISTRIBUTION = HASH(CHDRNUM),
	  HEAP
	) AS
SELECT DISTINCT
COALESCE(CAST(SOP.[SLSCNL] AS VARCHAR),'') AS [SLSCNL]
,COALESCE(CAST(SOP.[CHDRNUM] AS VARCHAR),'') AS [CHDRNUM]
,COALESCE(CAST(SOP.[CNTCURR] AS VARCHAR),'') AS [CNTCURR]
,COALESCE(CAST(SOP.[STATCODE] AS VARCHAR),'') AS [STATCODE]
,COALESCE(CAST(SOP.[CNTTYPE] AS VARCHAR),'') AS [CNTTYPE]
,COALESCE(CAST(SOP.[ANBCCD] AS VARCHAR),'') AS [ANBCCD]
,COALESCE(CAST(SOP.[SEX] AS VARCHAR),'') AS [SEX]
,COALESCE(CAST(SOP.[MORTCLS] AS VARCHAR),'') AS [MORTCLS]
,COALESCE(CAST(SOP.[API] AS VARCHAR),'') AS [API]
,COALESCE(CAST(SOP.[BILLFREQ] AS VARCHAR),'') AS [BILLFREQ]
,COALESCE(CAST(SOP.[CRRCD] AS VARCHAR),'') AS [CRRCD]
,COALESCE(CAST(SOP.[PRUSVR] AS VARCHAR),'') AS [PRUSVR]
,COALESCE(CAST(SOP.[SINGP] AS VARCHAR),'') AS [SINGP]
,COALESCE(CAST(SOP.[SUMINS] AS VARCHAR),'') AS [SUMINS]
,COALESCE(CAST(SOP.[CRTABLECC] AS VARCHAR),'') AS [CRTABLECC]
,COALESCE(CAST(SOP.[ANBCC] AS VARCHAR),'') AS [ANBCC]
,COALESCE(CAST(SOP.[RCDCC] AS VARCHAR),'') AS [RCDCC]
,COALESCE(CAST(SOP.[SUMINCC] AS VARCHAR),'') AS [SUMINCC]
,COALESCE(CAST(SOP.[RCESAGECC] AS VARCHAR),'') AS [RCESAGECC]
,COALESCE(CAST(SOP.[CRTABLEAD] AS VARCHAR),'') AS [CRTABLEAD]
,COALESCE(CAST(SOP.[ANBAD] AS VARCHAR),'') AS [ANBAD]
,COALESCE(CAST(SOP.[RCDAD] AS VARCHAR),'') AS [RCDAD]
,COALESCE(CAST(SOP.[MORTCLSAD] AS VARCHAR),'') AS [MORTCLSAD]
,COALESCE(CAST(SOP.[SUMINAD] AS VARCHAR),'') AS [SUMINAD]
,COALESCE(CAST(SOP.[RCESAGEAD] AS VARCHAR),'') AS [RCESAGEAD]
,COALESCE(CAST(SOP.[CRTABLEADD] AS VARCHAR),'') AS [CRTABLEADD]
,COALESCE(CAST(SOP.[ANBADD] AS VARCHAR),'') AS [ANBADD]
,COALESCE(CAST(SOP.[RCDADD] AS VARCHAR),'') AS [RCDADD]
,COALESCE(CAST(SOP.[MORTCLSADD] AS VARCHAR),'') AS [MORTCLSADD]
,COALESCE(CAST(SOP.[SUMINADD] AS VARCHAR),'') AS [SUMINADD]
,COALESCE(CAST(SOP.[RCESAGEADD] AS VARCHAR),'') AS [RCESAGEADD]
,COALESCE(CAST(SOP.[CRTABLEHB] AS VARCHAR),'') AS [CRTABLEHB]
,COALESCE(CAST(SOP.[ANBHB] AS VARCHAR),'') AS [ANBHB]
,COALESCE(CAST(SOP.[RCDHB] AS VARCHAR),'') AS [RCDHB]
,COALESCE(CAST(SOP.[SUMINHB] AS VARCHAR),'') AS [SUMINHB]
,COALESCE(CAST(SOP.[RCESAGEHB] AS VARCHAR),'') AS [RCESAGEHB]
,COALESCE(CAST(SOP.[ANBWVR] AS VARCHAR),'') AS [ANBWVR]
,COALESCE(CAST(SOP.[CRTABLEWVR] AS VARCHAR),'') AS [CRTABLEWVR]
,COALESCE(CAST(SOP.[RCDWVR] AS VARCHAR),'') AS [RCDWVR]
,COALESCE(CAST(SOP.[SUMINWVR] AS VARCHAR),'') AS [SUMINWVR]
,COALESCE(CAST(SOP.[RCESAGEWVR] AS VARCHAR),'') AS [RCESAGEWVR]
,COALESCE(CAST(SOP.[CRTABLESPO] AS VARCHAR),'') AS [CRTABLESPO]
,COALESCE(CAST(SOP.[ANBSPO] AS VARCHAR),'') AS [ANBSPO]
,COALESCE(CAST(SOP.[SEXTWO] AS VARCHAR),'') AS [SEXTWO]
,COALESCE(CAST(SOP.[RCDSPO] AS VARCHAR),'') AS [RCDSPO]
,COALESCE(CAST(SOP.[SUMINSPO] AS VARCHAR),'') AS [SUMINSPO]
,COALESCE(CAST(SOP.[RCESDTE] AS VARCHAR),'') AS [RCESDTE]
,(CASE WHEN (SOP.[HOISSDTE] IS NOT NULL AND SOP.[HOISSDTE] <> '') THEN SOP.[HOISSDTE] ELSE EOP.[HOISSDTE] END) AS [HOISSDTE] -- updated by dyah 09/08/22
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TTLFUND] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TTLFUND]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF] AS VARCHAR),'') ELSE '' END AS [PRCF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF] AS VARCHAR),'') ELSE '' END AS [PREF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF] AS VARCHAR),'') ELSE '' END AS [PRFF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF] AS VARCHAR),'') ELSE '' END AS [PRMF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDMF] AS VARCHAR),'') ELSE '' END AS [PDMF]
,COALESCE(CAST(SOP.[CHGDTE] AS VARCHAR),'') AS [CHGDTE]
,COALESCE(CAST(SOP.[PYRTRM] AS VARCHAR),'') AS [PYRTRM]
,COALESCE(CAST(SOP.[CURYRTUP] AS VARCHAR),'') AS [CURYRTUP]
,COALESCE(CAST(SOP.[TOPUPLAST] AS VARCHAR),'') AS [TOPUPLAST]
,COALESCE(CAST(SOP.[PCESTRM] AS VARCHAR),'') AS [PCESTRM]
,COALESCE(CAST(SOP.[ANBCCP] AS VARCHAR),'') AS [ANBCCP]
,COALESCE(CAST(SOP.[RCDCCP] AS VARCHAR),'') AS [RCDCCP]
,COALESCE(CAST(SOP.[RCESAGECCP] AS VARCHAR),'') AS [RCESAGECCP]
,COALESCE(CAST(SOP.[SUMINCCP] AS VARCHAR),'') AS [SUMINCCP]
,COALESCE(CAST(SOP.[CRTABLECCP] AS VARCHAR),'') AS [CRTABLECCP]
,COALESCE(CAST(SOP.[ALLOCIND] AS VARCHAR),'') AS [ALLOCIND]
,COALESCE(CAST(SOP.[BILCHNL] AS VARCHAR),'') AS [BILCHNL]
,COALESCE(CAST(SOP.[WDRAMNT] AS VARCHAR),'') AS [WDRAMNT]
,COALESCE(CAST(SOP.[LIFCNUM] AS VARCHAR),'') AS [LIFCNUM]
,COALESCE(CAST(SOP.[AGNTNUM] AS VARCHAR),'') AS [AGNTNUM]
,COALESCE(CAST(SOP.[UNITNUM] AS VARCHAR),'') AS [UNITNUM]
,COALESCE(CAST(SOP.[CRTABLHS] AS VARCHAR),'') AS [CRTABLHS]
,COALESCE(CAST(SOP.[ANBHS] AS VARCHAR),'') AS [ANBHS]
,COALESCE(CAST(SOP.[RCDHS] AS VARCHAR),'') AS [RCDHS]
,COALESCE(CAST(SOP.[SUMINHS] AS VARCHAR),'') AS [SUMINHS]
,COALESCE(CAST(SOP.[RCESAGEHS] AS VARCHAR),'') AS [RCESAGEHS]
,COALESCE(CAST(SOP.[CRTABLLT] AS VARCHAR),'') AS [CRTABLLT]
,COALESCE(CAST(SOP.[ANBLT] AS VARCHAR),'') AS [ANBLT]
,COALESCE(CAST(SOP.[RCDLT] AS VARCHAR),'') AS [RCDLT]
,COALESCE(CAST(SOP.[SUMINLT] AS VARCHAR),'') AS [SUMINLT]
,COALESCE(CAST(SOP.[RCESAGELT] AS VARCHAR),'') AS [RCESAGELT]
,COALESCE(CAST(SOP.[CRTABL3LF] AS VARCHAR),'') AS [CRTABL3LF]
,COALESCE(CAST(SOP.[ANB3LF] AS VARCHAR),'') AS [ANB3LF]
,COALESCE(CAST(SOP.[SEX3LF] AS VARCHAR),'') AS [SEX3LF]
,COALESCE(CAST(SOP.[RCD3LF] AS VARCHAR),'') AS [RCD3LF]
,COALESCE(CAST(SOP.[SUMIN3LF] AS VARCHAR),'') AS [SUMIN3LF]
,COALESCE(CAST(SOP.[RCESDT3LF] AS VARCHAR),'') AS [RCESDT3LF]
,COALESCE(CAST(SOP.[PAAFLAG] AS VARCHAR),'') AS [PAAFLAG]
,COALESCE(CAST(SOP.[PTDATE] AS VARCHAR),'') AS [PTDATE]
,COALESCE(CAST(SOP.[WAIVERSTAT] AS VARCHAR),'') AS [WAIVERSTAT]
,COALESCE(CAST(SOP.[CLAIMSAR] AS VARCHAR),'') AS [CLAIMSAR]
,COALESCE(CAST(SOP.[FPAYDATE] AS VARCHAR),'') AS [FPAYDATE]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP] AS VARCHAR),'') ELSE '' END AS [PRMP]
,COALESCE(CAST(SOP.[TPDCLAIM] AS VARCHAR),'') AS [TPDCLAIM]
,COALESCE(CAST(SOP.[ADDR04CITY] AS VARCHAR),'') AS [ADDR04CITY]
,COALESCE(CAST(SOP.[ADDR05PROV] AS VARCHAR),'') AS [ADDR05PROV]
,COALESCE(CAST(SOP.[CRTABLECI] AS VARCHAR),'') AS [CRTABLECI]
,COALESCE(CAST(SOP.[ANBCI] AS VARCHAR),'') AS [ANBCI]
,COALESCE(CAST(SOP.[RCDCI] AS VARCHAR),'') AS [RCDCI]
,COALESCE(CAST(SOP.[SUMINCI] AS VARCHAR),'') AS [SUMINCI]
,COALESCE(CAST(SOP.[RCESDTECI] AS VARCHAR),'') AS [RCESDTECI]
,COALESCE(CAST(SOP.[CRTABLEMCC] AS VARCHAR),'') AS [CRTABLEMCC]
,COALESCE(CAST(SOP.[ANBMCC] AS VARCHAR),'') AS [ANBMCC]
,COALESCE(CAST(SOP.[RCDMCC] AS VARCHAR),'') AS [RCDMCC]
,COALESCE(CAST(SOP.[SUMINMCC] AS VARCHAR),'') AS [SUMINMCC]
,COALESCE(CAST(SOP.[RCESDTEMCC] AS VARCHAR),'') AS [RCESDTEMCC]
,COALESCE(CAST(SOP.[PRODCDE] AS VARCHAR),'') AS [PRODCDE]
,COALESCE(CAST(SOP.[ANBESCC] AS VARCHAR),'') AS [ANBESCC]
,COALESCE(CAST(SOP.[RCDESCC] AS VARCHAR),'') AS [RCDESCC]
,COALESCE(CAST(SOP.[SUMINESCC] AS VARCHAR),'') AS [SUMINESCC]
,COALESCE(CAST(SOP.[RCESDTEESCC] AS VARCHAR),'') AS [RCESDTEESCC]
,COALESCE(CAST(SOP.[CLTBDAY] AS VARCHAR),'') AS [CLTBDAY]
,COALESCE(CAST(SOP.[MEDPCLAS] AS VARCHAR),'') AS [MEDPCLAS]
,COALESCE(CAST(SOP.[ADMINCHG] AS VARCHAR),'') AS [ADMINCHG]
,COALESCE(CAST(SOP.[COIDEBT] AS VARCHAR),'') AS [COIDEBT]
,COALESCE(CAST(SOP.[TOTCHGHS] AS VARCHAR),'') AS [TOTCHGHS]
,COALESCE(CAST(SOP.[TOTTPACOST] AS VARCHAR),'') AS [TOTTPACOST]
,COALESCE(CAST(SOP.[CODE] AS VARCHAR),'') AS [CODE]
,COALESCE(CAST(SOP.[ZLONGDESC] AS VARCHAR),'') AS [ZLONGDESC]
,COALESCE(CAST(SOP.[RCESAGESO] AS VARCHAR),'') AS [RCESAGESO]
,COALESCE(CAST(SOP.[RCESAGEPW] AS VARCHAR),'') AS [RCESAGEPW]
,COALESCE(CAST(SOP.[RCESAGEPWX] AS VARCHAR),'') AS [RCESAGEPWX]
,COALESCE(CAST(SOP.[RCESAGECI] AS VARCHAR),'') AS [RCESAGECI]
,COALESCE(CAST(SOP.[RCESAGEMC] AS VARCHAR),'') AS [RCESAGEMC]
,COALESCE(CAST(SOP.[RCESAGEEC] AS VARCHAR),'') AS [RCESAGEEC]
,COALESCE(CAST(SOP.[LSTTOPDATE] AS VARCHAR),'') AS [LSTTOPDATE]
,COALESCE(CAST(SOP.[COWNNUM] AS VARCHAR),'') AS [COWNNUM]
,COALESCE(CAST(SOP.[CRTABLEJCC] AS VARCHAR),'') AS [CRTABLEJCC]
,COALESCE(CAST(SOP.[ANBJCC] AS VARCHAR),'') AS [ANBJCC]
,COALESCE(CAST(SOP.[RCDJCC] AS VARCHAR),'') AS [RCDJCC]
,COALESCE(CAST(SOP.[SUMINJCC] AS VARCHAR),'') AS [SUMINJCC]
,COALESCE(CAST(SOP.[RCESAGEJCC] AS VARCHAR),'') AS [RCESAGEJCC]
,COALESCE(CAST(SOP.[SUMINPMC] AS VARCHAR),'') AS [SUMINPMC]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC] AS VARCHAR),'') ELSE '' END AS [PRGC]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC] AS VARCHAR),'') ELSE '' END AS [PDGC]
,COALESCE(CAST(SOP.[PRUSTATCDE] AS VARCHAR),'') AS [PRUSTATCDE]
,COALESCE(CAST(SOP.[CRTABLESAV] AS VARCHAR),'') AS [CRTABLESAV]
,COALESCE(CAST(SOP.[AGNTDLCODE] AS VARCHAR),'') AS [AGNTDLCODE]
,COALESCE(CAST(SOP.[UMCODE] AS VARCHAR),'') AS [UMCODE]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREP] AS VARCHAR),'') ELSE '' END AS [PREP]
,COALESCE(CAST(SOP.[CLMTYP] AS VARCHAR),'') AS [CLMTYP]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIEF] AS VARCHAR),'') ELSE '' END AS [PRIEF]
,COALESCE(CAST(SOP.[EDUPAR1C] AS VARCHAR),'') AS [EDUPAR1C]
,COALESCE(CAST(SOP.[EDUP1SUM] AS VARCHAR),'') AS [EDUP1SUM]
,COALESCE(CAST(SOP.[EDUPAR2C] AS VARCHAR),'') AS [EDUPAR2C]
,COALESCE(CAST(SOP.[EDUP2SUM] AS VARCHAR),'') AS [EDUP2SUM]
,COALESCE(CAST(SOP.[CRTABL3LT] AS VARCHAR),'') AS [CRTABL3LT]
,COALESCE(CAST(SOP.[ANB3LT] AS VARCHAR),'') AS [ANB3LT]
,COALESCE(CAST(SOP.[RCD3LT] AS VARCHAR),'') AS [RCD3LT]
,COALESCE(CAST(SOP.[SUMIN3LT] AS VARCHAR),'') AS [SUMIN3LT]
,COALESCE(CAST(SOP.[RCESAGE3LT] AS VARCHAR),'') AS [RCESAGE3LT]
,COALESCE(CAST(SOP.[NLGFLAG] AS VARCHAR),'') AS [NLGFLAG]
,COALESCE(CAST(SOP.[REGION_IND] AS VARCHAR),'') AS [REGION_IND]
,COALESCE(CAST(SOP.[AR_IND] AS VARCHAR),'') AS [AR_IND]
,COALESCE(CAST(SOP.[HNW_IND] AS VARCHAR),'') AS [HNW_IND]
,COALESCE(CAST(SOP.[RI_IND] AS VARCHAR),'') AS [RI_IND]
,COALESCE(CAST(SOP.[ADDR] AS VARCHAR),'') AS [ADDR]
,COALESCE(CAST(SOP.[DTHR] AS VARCHAR),'') AS [DTHR]
,COALESCE(CAST(SOP.[RDDS] AS VARCHAR),'') AS [RDDS]
,COALESCE(CAST(SOP.[SAR_WAIV] AS VARCHAR),'') AS [SAR_WAIV]
,COALESCE(CAST(SOP.[SAR_WAIV2] AS VARCHAR),'') AS [SAR_WAIV2]
,COALESCE(CAST(SOP.[SAR_CI] AS VARCHAR),'') AS [SAR_CI]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVEF] AS VARCHAR),'') ELSE '' END AS [PRVEF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAEF] AS VARCHAR),'') ELSE '' END AS [PRAEF]
,COALESCE(CAST(SOP.[ANBCCB] AS VARCHAR),'') AS [ANBCCB]
,COALESCE(CAST(SOP.[RCDCCB] AS VARCHAR),'') AS [RCDCCB]
,COALESCE(CAST(SOP.[RCESAGECCB] AS VARCHAR),'') AS [RCESAGECCB]
,COALESCE(CAST(SOP.[SUMINCCB] AS VARCHAR),'') AS [SUMINCCB]
,COALESCE(CAST(SOP.[CRTABLECCB] AS VARCHAR),'') AS [CRTABLECCB]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDIEF] AS VARCHAR),'') ELSE '' END AS [PDIEF]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV] AS VARCHAR),'') ELSE '' END AS [PDGV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM] AS VARCHAR),'') ELSE '' END AS [PDGM]
,COALESCE(CAST(SOP.[CODE_CHC] AS VARCHAR),'') AS [CODE_CHC]
,COALESCE(CAST(SOP.[AGE_ENTRY_CHC] AS VARCHAR),'') AS [AGE_ENTRY_CHC]
,COALESCE(CAST(SOP.[CRRCD_CHC] AS VARCHAR),'') AS [CRRCD_CHC]
,COALESCE(CAST(SOP.[PLANTYPE_CHC] AS VARCHAR),'') AS [PLANTYPE_CHC]
,COALESCE(CAST(SOP.[AGE_END_CHC] AS VARCHAR),'') AS [AGE_END_CHC]
,COALESCE(CAST(SOP.[CODE_DISABLE] AS VARCHAR),'') AS [CODE_DISABLE]
,COALESCE(CAST(SOP.[AGE_ENTRY_DISABLE] AS VARCHAR),'') AS [AGE_ENTRY_DISABLE]
,COALESCE(CAST(SOP.[CRRCD_DISABLE] AS VARCHAR),'') AS [CRRCD_DISABLE]
,COALESCE(CAST(SOP.[SUMINS_DISABLE] AS VARCHAR),'') AS [SUMINS_DISABLE]
,COALESCE(CAST(SOP.[AGE_END_DISABLE] AS VARCHAR),'') AS [AGE_END_DISABLE]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV] AS VARCHAR),'') ELSE '' END AS [PRGV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM] AS VARCHAR),'') ELSE '' END AS [PRGM]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTAL_FUND_BAV] AS VARCHAR),'') ELSE '' END AS [TOTAL_FUND_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF_BAV] AS VARCHAR),'') ELSE '' END AS [PRCF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF_BAV] AS VARCHAR),'') ELSE '' END AS [PREF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF_BAV] AS VARCHAR),'') ELSE '' END AS [PRFF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC_BAV] AS VARCHAR),'') ELSE '' END AS [PRGC_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF_BAV] AS VARCHAR),'') ELSE '' END AS [PRMF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP_BAV] AS VARCHAR),'') ELSE '' END AS [PRMP_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIE_BAV] AS VARCHAR),'') ELSE '' END AS [PRIE_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAE_BAV] AS VARCHAR),'') ELSE '' END AS [PRAE_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVE_BAV] AS VARCHAR),'') ELSE '' END AS [PRVE_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM_BAV] AS VARCHAR),'') ELSE '' END AS [PRGM_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV_BAV] AS VARCHAR),'') ELSE '' END AS [PRGV_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDFF_BAV] AS VARCHAR),'') ELSE '' END AS [PDFF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC_BAV] AS VARCHAR),'') ELSE '' END AS [PDGC_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM_BAV] AS VARCHAR),'') ELSE '' END AS [PDGM_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV_BAV] AS VARCHAR),'') ELSE '' END AS [PDGV_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PLEF_BAV] AS VARCHAR),'') ELSE '' END AS [PLEF_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTAL_FUND_TPAV] AS VARCHAR),'') ELSE '' END AS [TOTAL_FUND_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF_TPAV] AS VARCHAR),'') ELSE '' END AS [PRCF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF_TPAV] AS VARCHAR),'') ELSE '' END AS [PREF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF_TPAV] AS VARCHAR),'') ELSE '' END AS [PRFF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC_TPAV] AS VARCHAR),'') ELSE '' END AS [PRGC_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF_TPAV] AS VARCHAR),'') ELSE '' END AS [PRMF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP_TPAV] AS VARCHAR),'') ELSE '' END AS [PRMP_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIE_TPAV] AS VARCHAR),'') ELSE '' END AS [PRIE_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAE_TPAV] AS VARCHAR),'') ELSE '' END AS [PRAE_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVE_TPAV] AS VARCHAR),'') ELSE '' END AS [PRVE_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM_TPAV] AS VARCHAR),'') ELSE '' END AS [PRGM_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV_TPAV] AS VARCHAR),'') ELSE '' END AS [PRGV_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDFF_TPAV] AS VARCHAR),'') ELSE '' END AS [PDFF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC_TPAV] AS VARCHAR),'') ELSE '' END AS [PDGC_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM_TPAV] AS VARCHAR),'') ELSE '' END AS [PDGM_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV_TPAV] AS VARCHAR),'') ELSE '' END AS [PDGV_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PLEF_TPAV] AS VARCHAR),'') ELSE '' END AS [PLEF_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTAL_UNIT_ACT] AS VARCHAR),'') ELSE '' END AS [TOTAL_UNIT_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF_ACT] AS VARCHAR),'') ELSE '' END AS [PRCF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF_ACT] AS VARCHAR),'') ELSE '' END AS [PREF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF_ACT] AS VARCHAR),'') ELSE '' END AS [PRFF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC_ACT] AS VARCHAR),'') ELSE '' END AS [PRGC_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF_ACT] AS VARCHAR),'') ELSE '' END AS [PRMF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP_ACT] AS VARCHAR),'') ELSE '' END AS [PRMP_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIE_ACT] AS VARCHAR),'') ELSE '' END AS [PRIE_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAE_ACT] AS VARCHAR),'') ELSE '' END AS [PRAE_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVE_ACT] AS VARCHAR),'') ELSE '' END AS [PRVE_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM_ACT] AS VARCHAR),'') ELSE '' END AS [PRGM_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV_ACT] AS VARCHAR),'') ELSE '' END AS [PRGV_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDFF_ACT] AS VARCHAR),'') ELSE '' END AS [PDFF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC_ACT] AS VARCHAR),'') ELSE '' END AS [PDGC_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM_ACT] AS VARCHAR),'') ELSE '' END AS [PDGM_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV_ACT] AS VARCHAR),'') ELSE '' END AS [PDGV_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PLEF_ACT] AS VARCHAR),'') ELSE '' END AS [PLEF_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTAL_UNIT_PRV] AS VARCHAR),'') ELSE '' END AS [TOTAL_UNIT_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF_PRV] AS VARCHAR),'') ELSE '' END AS [PRCF_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF_PRV] AS VARCHAR),'') ELSE '' END AS [PREF_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF_PRV] AS VARCHAR),'') ELSE '' END AS [PRFF_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC_PRV] AS VARCHAR),'') ELSE '' END AS [PRGC_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF_PRV] AS VARCHAR),'') ELSE '' END AS [PRMF_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP_PRV] AS VARCHAR),'') ELSE '' END AS [PRMP_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIE_PRV] AS VARCHAR),'') ELSE '' END AS [PRIE_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAE_PRV] AS VARCHAR),'') ELSE '' END AS [PRAE_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVE_PRV] AS VARCHAR),'') ELSE '' END AS [PRVE_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM_PRV] AS VARCHAR),'') ELSE '' END AS [PRGM_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV_PRV] AS VARCHAR),'') ELSE '' END AS [PRGV_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDFF_PRV] AS VARCHAR),'') ELSE '' END AS [PDFF_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC_PRV] AS VARCHAR),'') ELSE '' END AS [PDGC_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM_PRV] AS VARCHAR),'') ELSE '' END AS [PDGM_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV_PRV] AS VARCHAR),'') ELSE '' END AS [PDGV_PRV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PLEF_PRV] AS VARCHAR),'') ELSE '' END AS [PLEF_PRV]
,COALESCE(CAST(SOP.[BASIC_PREMIUM_PREV] AS VARCHAR),'') AS [BASIC_PREMIUM_PREV]
,COALESCE(CAST(SOP.[STFLAG] AS VARCHAR),'') AS [STFLAG]
,COALESCE(CAST(SOP.[SIOFLAG] AS VARCHAR),'') AS [SIOFLAG]
,COALESCE(CAST(SOP.[BILLCHNL_PRV] AS VARCHAR),'') AS [BILLCHNL_PRV]
,COALESCE(CAST(SOP.[FUPCODE_FOR_PBC] AS VARCHAR),'') AS [FUPCODE_FOR_PBC]
,COALESCE(CAST(SOP.[REQUEST_DATE_FOR_PBC] AS VARCHAR),'') AS [REQUEST_DATE_FOR_PBC]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRNV] AS VARCHAR),'') ELSE '' END AS [PRNV]
,COALESCE(CAST(SOP.[PPHPLUS_PLAN_TYPE] AS VARCHAR),'') AS [PPHPLUS_PLAN_TYPE]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDNV] AS VARCHAR),'') ELSE '' END AS [PDNV]
,COALESCE(CAST(SOP.[CODE_PRUTOP_CCB61] AS VARCHAR),'') AS [CODE_PRUTOP_CCB61]
,COALESCE(CAST(SOP.[AGE_ENTRY_PRUTOP_CCB61] AS VARCHAR),'') AS [AGE_ENTRY_PRUTOP_CCB61]
,COALESCE(CAST(SOP.[CRRCD_PRUTOP_CCB61] AS VARCHAR),'') AS [CRRCD_PRUTOP_CCB61]
,COALESCE(CAST(SOP.[CODE_PRUTOP_CCB34] AS VARCHAR),'') AS [CODE_PRUTOP_CCB34]
,COALESCE(CAST(SOP.[AGE_ENTRY_PRUTOP_CCB34] AS VARCHAR),'') AS [AGE_ENTRY_PRUTOP_CCB34]
,COALESCE(CAST(SOP.[CRRCD_PRUTOP_CCB34] AS VARCHAR),'') AS [CRRCD_PRUTOP_CCB34]
,COALESCE(CAST(SOP.[CODE_PRUTOP_ESCC] AS VARCHAR),'') AS [CODE_PRUTOP_ESCC]
,COALESCE(CAST(SOP.[AGE_ENTRY_PRUTOP_ESCC] AS VARCHAR),'') AS [AGE_ENTRY_PRUTOP_ESCC]
,COALESCE(CAST(SOP.[CRRCD_PRUTOP_ESCC] AS VARCHAR),'') AS [CRRCD_PRUTOP_ESCC]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGT] AS VARCHAR),'') ELSE '' END AS [PDGT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSMA] AS VARCHAR),'') ELSE '' END AS [PSMA]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSMA_BAV] AS VARCHAR),'') ELSE '' END AS [PSMA_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSMA_TPAV] AS VARCHAR),'') ELSE '' END AS [PSMA_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSMA_ACT] AS VARCHAR),'') ELSE '' END AS [PSMA_ACT]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSMA_PRV] AS VARCHAR),'') ELSE '' END AS [PSMA_PRV]
,SOP.[STAT_SECT] --updated by dyah 05/08/2022
-- start DARA 230401
,SOP.[CICA_ESCC]
,SOP.[C_ESCC]
,SOP.[CICA_CCB34]
,SOP.[CICA_CCB61]
,SOP.[CCB61]
,SOP.[RCESAGE]
,SOP.[FLAGS]
-- end DARA 230401
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDIF] AS VARCHAR),'') ELSE '0' END AS [PDIF] --PTPLAIFRS17-3961
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP] AS VARCHAR),'') ELSE '' END AS [PRDP]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP_BAV] AS VARCHAR),'') ELSE '' END AS [PRDP_BAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP_TPAV] AS VARCHAR),'') ELSE '' END AS [PRDP_TPAV]
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP_BON] AS VARCHAR),'') ELSE '' END AS [PRDP_BON] 
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP_PRV] AS VARCHAR),'') ELSE '' END AS [PRDP_PRV]  
,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRBI] AS VARCHAR),'') ELSE '' END AS [PRBI]
,SOP.[WP_FLAG]
,SOP.[CAMP_CODE]
,SOP.[RBP_STATE]
-- updated by dyah 08/06/2022  
,CASE 
	WHEN (SOP.[IFRS_ONEROUS_GRP] IS NULL OR SOP.[IFRS_ONEROUS_GRP] = '') THEN COALESCE(EOP.[IFRS_ONEROUS_GRP],'') 
	ELSE COALESCE(SOP.[IFRS_ONEROUS_GRP],'') END AS [IFRS_ONEROUS_GRP]
,CASE 
	WHEN (SOP.[IFRS_CY_GRP] IS NULL OR SOP.[IFRS_CY_GRP] = '') THEN COALESCE(EOP.[IFRS_CY_GRP],'') 
	ELSE COALESCE(SOP.[IFRS_CY_GRP],'') END AS [IFRS_CY_GRP]
,CASE 
	WHEN (SOP.[IFRS_PORT_GRP]  IS NULL OR SOP.[IFRS_PORT_GRP]  = '') THEN COALESCE(EOP.[IFRS_PORT_GRP] ,'') 
	ELSE COALESCE(SOP.[IFRS_PORT_GRP] ,'') END AS [IFRS_PORT_GRP] 
,CASE 
	WHEN (SOP.[IFRS_MEASURE_MODEL]  IS NULL OR SOP.[IFRS_MEASURE_MODEL]  = '') THEN COALESCE(EOP.[IFRS_MEASURE_MODEL] ,'') 
	ELSE COALESCE(SOP.[IFRS_MEASURE_MODEL] ,'') END AS [IFRS_MEASURE_MODEL]
,CASE 
	WHEN (SOP.[BASIC_ENTRY_YEAR] IS NULL OR SOP.[BASIC_ENTRY_YEAR] = '') THEN COALESCE(EOP.[BASIC_ENTRY_YEAR],'') 
	ELSE COALESCE(SOP.[BASIC_ENTRY_YEAR],'') END AS [BASIC_ENTRY_YEAR]
,CASE 
	WHEN (SOP.[BASIC_ENTRY_MONTH] IS NULL OR SOP.[BASIC_ENTRY_MONTH] = '') THEN COALESCE(EOP.[BASIC_ENTRY_MONTH],'') 
	ELSE COALESCE(SOP.[BASIC_ENTRY_MONTH],'') END AS [BASIC_ENTRY_MONTH]
,CASE 
	WHEN (SOP.[IFRS_CB_TERM_M] IS NULL OR SOP.[IFRS_CB_TERM_M] = '') THEN COALESCE(EOP.[IFRS_CB_TERM_M],'') 
	ELSE COALESCE(SOP.[IFRS_CB_TERM_M],'') END AS [IFRS_CB_TERM_M]
,CASE 
	WHEN (SOP.[MTHS_TO_SALE] IS NULL OR SOP.[MTHS_TO_SALE] = '') THEN COALESCE(EOP.[MTHS_TO_SALE],'') 
	ELSE COALESCE(SOP.[MTHS_TO_SALE],'') END AS [MTHS_TO_SALE]
,CASE 
	WHEN (SOP.[IFRS_ICG_ID] IS NULL OR SOP.[IFRS_ICG_ID] = '') THEN COALESCE(EOP.[IFRS_ICG_ID],'') 
	ELSE COALESCE(SOP.[IFRS_ICG_ID],'') END AS [IFRS_ICG_ID]
,CASE 
	WHEN (SOP.[IFRS_ICG_ID_PROPHET] IS NULL OR SOP.[IFRS_ICG_ID_PROPHET] = '') THEN COALESCE(EOP.[IFRS_ICG_ID_PROPHET],'') 
	ELSE COALESCE(SOP.[IFRS_ICG_ID_PROPHET],'') END AS [IFRS_ICG_ID_PROPHET]
,CASE 
	WHEN (SOP.[SUB_GROUP_ID] IS NULL OR SOP.[SUB_GROUP_ID] = '') THEN COALESCE(EOP.[SUB_GROUP_ID],'') 
	ELSE COALESCE(SOP.[SUB_GROUP_ID],'') END AS [SUB_GROUP_ID]
,CASE 
	WHEN (SOP.[ENTITY_ID] IS NULL OR SOP.[ENTITY_ID] = '') THEN COALESCE(EOP.[ENTITY_ID],'') 
	ELSE COALESCE(SOP.[ENTITY_ID],'') END AS [ENTITY_ID]
,CASE 
	WHEN (SOP.[CB_START_DT] IS NULL OR SOP.[CB_START_DT] = '') THEN COALESCE(EOP.[CB_START_DT],'') 
	ELSE COALESCE(SOP.[CB_START_DT],'') END AS [CB_START_DT]
,CASE 
	WHEN (SOP.[CB_END_DT] IS NULL OR SOP.[CB_END_DT] = '') THEN COALESCE(EOP.[CB_END_DT],'') 
	ELSE COALESCE(SOP.[CB_END_DT],'') END AS [CB_END_DT]
,CASE 
	WHEN (SOP.[REL_INSURANCE_CONTRACT_GROUP_ID] IS NULL OR SOP.[REL_INSURANCE_CONTRACT_GROUP_ID] = '') THEN COALESCE(EOP.[REL_INSURANCE_CONTRACT_GROUP_ID],'') 
	ELSE COALESCE(SOP.[REL_INSURANCE_CONTRACT_GROUP_ID],'') END AS [REL_INSURANCE_CONTRACT_GROUP_ID]
,CASE WHEN EOP.[STATCODE] = 'IF' AND EOP.[BILCHNL] = 'A'
		THEN 'PH'
		ELSE EOP.[STATCODE]
	END
AS [STATCODE_EOP]
,CASE WHEN EOP.[CHDRNUM] IS NULL 
		THEN 0
	WHEN COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0) + COALESCE(CAST(EOP.[CURYRTUP] AS FLOAT),0) = 0
		THEN 0
	ELSE
		COALESCE(CAST(EOP.[CURYRTUP] AS FLOAT),0) - (COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0))
	END
AS [UNDISC_FUND_BALANCE_ADJ]
,CASE WHEN EOP.[CHDRNUM] IS NULL 
		THEN 0
	ELSE
		(COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0)) 
	END AS [PW_AMOUNT], --updated by dyah 05/08/2022 --040723
@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
@BATCH_RUN_ID AS BATCH_RUN_ID,
@JOB_MASTER_ID AS JOB_MASTER_ID,
@JOB_RUN_ID  AS JOB_RUN_ID,
@BATCHDATESTR AS BATCHDATE,
@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM (
	SELECT * FROM (
		SELECT * , ROW_NUMBER() OVER(PARTITION BY CHDRNUM ORDER BY BACKUP_BATCHDATE ASC) AS ROW_NUMBER
		FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
		--UPDATE SOP to gether 2 digit month
		WHERE BACKUP_BATCHDATE >= CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) 
		AND CONCAT( YEAR(BACKUP_BATCHDATE),SUBSTRING(CAST(BACKUP_BATCHDATE AS CHAR),6,2)) <= CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE)),SUBSTRING(CAST(@BATCHDATESTR AS CHAR),6,2))
	)TMP WHERE TMP.ROW_NUMBER = 1
) AS SOP
LEFT JOIN (
  SELECT *
  FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
  WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
) AS EOP ON SOP.[CHDRNUM] = EOP.[CHDRNUM];

END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
