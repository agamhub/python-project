CREATE PROC [FOND_ID].[USP_LOAD_ETL1_IFRS17_FNC_MONTHLY_ICG_MPFILES_PROPHETU_PUL_RIDER] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN TRY
    --declare variable
	DECLARE @V_START			DATETIME,
	        @V_END				DATETIME,
			@V_DURATION			DATETIME,
	        @V_FUNCTION_NAME	VARCHAR(100),
			@V_DESCRIPTION		VARCHAR(100),
	        @V_CMD				VARCHAR(100),
			@V_SEQNO			INTEGER,
	        @V_PRD_ID			INTEGER,
			@V_CREATED_DATE		DATETIME,
	        @V_START_DATE		DATE,
	        @V_END_DATE			DATE,
	------START GET RUN ID DETAIL FROM ABC------
            @BATCH_MASTER_ID    VARCHAR(20) = 0,
            @BATCH_RUN_ID       VARCHAR(20) = 0,
            @JOB_MASTER_ID      VARCHAR(20) = 0,
            @JOB_RUN_ID         VARCHAR(20) = 0,
            @GMT_START_DTTM     VARCHAR(20) = GETDATE();

	EXEC STAG_ID.USP_GetRunIdReturn
      @JobName         = @JOBNAMESTR,
      @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
      @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
      @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
      @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
      @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
    ------END GET RUN ID DETAIL FROM ABC------

	--set variable
	SET @V_FUNCTION_NAME = 'FOND_ID.USP_LOAD_ETL1_IFRS17_FNC_MONTHLY_ICG_MPFILES_PROPHETU_PUL_RIDER';
	SET @V_SEQNO = 1;
	SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE);

	--store initial step to log
	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	-----------------------------
	--- DROP ALL TEMPORARY TABLES
	-----------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('DROP ALL TEMPORARY TABLES : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

    --drop temp object if exists
	IF OBJECT_ID('tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_1', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_1;
	IF OBJECT_ID('tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_2', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_2;

	--drop permanent object if exists
	IF OBJECT_ID('STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER','U') IS NOT NULL DROP TABLE STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER;
	--IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL_RIDER','U') IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL_RIDER;
	
	------------------------------------------------
	--- INSERT NEW BUSINESS TO ICG STORES TEMP TABLE
	------------------------------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('INSERT NEW BUSINESS TO ICG STORES TEMP TABLE : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	------------------------------------------------------------------
	--create temp table tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_1
	------------------------------------------------------------------
	CREATE TABLE tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_1
	WITH
	(
	  DISTRIBUTION = HASH(POLICY_NO),
	  HEAP
	)
	AS
	SELECT
	  'IAI' AS "ENTITY_ID",
	  'Life Asia' AS "SYSTEM",
      IPRVPF.CHDRNUM AS POLICY_NO,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.PRODUCT_CD ELSE ICG_STORES_BASIC.PRODUCT_CD END AS PRODUCT_CD,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.CONTRACT_ID ELSE ICG_STORES_BASIC.CONTRACT_ID END AS CONTRACT_ID,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.PORTFOLIO_GROUP ELSE ICG_STORES_BASIC.PORTFOLIO_GROUP END AS PORTFOLIO_GROUP,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.COHORT_YEAR ELSE ICG_STORES_BASIC.COHORT_YEAR END AS COHORT_YEAR,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.SET_OF_CONTRACT ELSE ICG_STORES_BASIC.SET_OF_CONTRACT END AS SET_OF_CONTRACT,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.INSURANCE_CONTRACT_GROUP_ID ELSE ICG_STORES_BASIC.INSURANCE_CONTRACT_GROUP_ID END AS INSURANCE_CONTRACT_GROUP_ID,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.ICG_ID_PROPHET ELSE ICG_STORES_BASIC.ICG_ID_PROPHET END AS ICG_ID_PROPHET,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.ENTRY_MONTH ELSE ICG_STORES_BASIC.ENTRY_MONTH END AS ENTRY_MONTH,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.CB_START_DT ELSE ICG_STORES_BASIC.CB_START_DT END AS CB_START_DT,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.CB_END_DT ELSE ICG_STORES_BASIC.CB_END_DT END AS CB_END_DT,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.MEASUREMENT_MODEL ELSE ICG_STORES_BASIC.MEASUREMENT_MODEL END AS MEASUREMENT_MODEL,
	  STATUS_MAP.INFORCE_FLAG,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.COVERAGE_LEVEL_END_DATE ELSE ICG_STORES_BASIC.COVERAGE_LEVEL_END_DATE END AS COVERAGE_LEVEL_END_DATE,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.CCY_CD ELSE ICG_STORES_BASIC.CCY_CD END AS CCY_CD,
	  ICG_STORES_PROPHETU_PUL_TMP.STATUS_SOURCE AS STATUS_SOURCE_BASIC,
	  COVR_V3.STATCODE AS STATUS_SOURCE_RIDER,
	  CASE WHEN ICG_STORES_BASIC.POLICY_NO IS NULL THEN ICG_STORES_PROPHETU_PUL_TMP.BEN_EXP_DATE ELSE ICG_STORES_BASIC.BEN_EXP_DATE END AS BEN_EXP_DATE,
	  ICG_STORES_PROPHETU_PUL_TMP.FLAG_INSERT_UPDATE AS FLAG_INSERT_UPDATE_BASIC,
	  COVR_V3.CRTABLE,
	  COVR_V3.LIFE,
	  CASE WHEN ICG_STORES_PROPHETU_PUL_TMP.CURR_BOUND_BY_REPRICE = 'Y' OR ICG_STORES_PROPHETU_PUL_TMP.CURR_BOUND_BY_TERMINATION_PROVISION = 'Y' THEN 'Y' ELSE 'N' END AS SHORTBOUND_FLAG

	FROM STAG_ID.STAG_LIFEASIA_IPRVPF AS IPRVPF

	JOIN
    (
      SELECT 
	    COVR_V2.CHDRNUM,
	    COVR_V2.CRTABLE,
	    COVR_V2.STATCODE,
	    COVR_V2.LIFE,
	    ROW_NUMBER() OVER(PARTITION BY COVR_V2.CHDRNUM, COVR_V2.CRTABLE, COVR_V2.LIFE, COVR_V2.COVERAGE, COVR_V2.RIDER ORDER BY COVR_V2.TRANNO DESC, COVR_V2.TXNDATE DESC) AS ROWNUM_TXNDATE

	  FROM 
	  (
	    SELECT
		  COVRPF_TXNDATE.CHDRNUM,
		  COVRPF_TXNDATE.CRTABLE,
		  COVRPF_TXNDATE.STATCODE,
		  COVRPF_TXNDATE.LIFE,
		  COVRPF_TXNDATE.COVERAGE,
		  COVRPF_TXNDATE.RIDER,
		  COVRPF_TXNDATE.TRANNO,
		  TRY_CONVERT(DATE, REPLACE(STR(COVRPF_TXNDATE.TRANSACTION_DATE, 6), ' ', '0'), 112) AS TXNDATE

		FROM STAG_ID.STAG_LIFEASIA_COVRPF COVRPF_TXNDATE

		JOIN 
		(
		  SELECT
		    CHDRNUM,
		    CRTABLE,
		    LIFE,
		    COVERAGE,
		    RIDER,
		    ROW_NUMBER() OVER(PARTITION BY CHDRNUM, CRTABLE, LIFE ORDER BY COVERAGE DESC, RIDER DESC) AS ROWNUM_RIDER

		    FROM STAG_ID.STAG_LIFEASIA_COVRPF

		    WHERE (TRIM(LIFE) + TRIM(COVERAGE) + TRIM(RIDER)) <> ('010100')
		    AND SUBSTRING(CRTABLE,1,1)<>'U'

		    GROUP BY CHDRNUM, CRTABLE, LIFE, COVERAGE, RIDER
		) COVRPF_RIDER 
		ON COVRPF_TXNDATE.CHDRNUM = COVRPF_RIDER.CHDRNUM 
		AND COVRPF_TXNDATE.CRTABLE = COVRPF_RIDER.CRTABLE 
		AND COVRPF_TXNDATE.LIFE = COVRPF_RIDER.LIFE
		AND COVRPF_TXNDATE.COVERAGE = COVRPF_RIDER.COVERAGE
		AND COVRPF_TXNDATE.RIDER = COVRPF_RIDER.RIDER

		WHERE COVRPF_RIDER.ROWNUM_RIDER = 1
	  ) COVR_V2 

	  WHERE COVR_V2.TXNDATE <= @V_START_DATE
    ) COVR_V3	
    ON IPRVPF.CHDRNUM = COVR_V3.CHDRNUM
    AND COVR_V3.ROWNUM_TXNDATE = 1
	
    JOIN STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL AS ICG_STORES_PROPHETU_PUL_TMP
    ON NULLIF(TRIM(IPRVPF.CHDRNUM), '') = ICG_STORES_PROPHETU_PUL_TMP.POLICY_NO

    LEFT JOIN STAG_ID.STAG_CONFIG_IFRS17_STATUS_MAPPING_TABLE AS STATUS_MAP  
    ON COVR_V3.STATCODE = STATUS_MAP.STATUS_SOURCE
    AND UPPER(TRIM(STATUS_MAP.SYSTEM)) = 'LIFE ASIA'

    LEFT JOIN 
    (
      SELECT
        *,
        ROW_NUMBER() OVER(PARTITION BY POLICY_NO, PRODUCT_CD ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_POLICY_NO
      FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD = BENEFIT_CD
    ) ICG_STORES_BASIC
    ON NULLIF(TRIM(IPRVPF.CHDRNUM), '') = ICG_STORES_BASIC.POLICY_NO
    AND ICG_STORES_BASIC.ROWNUM_POLICY_NO = 1;

	------------------------------------------------------------------
	--create temp table tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_2
	------------------------------------------------------------------
	CREATE TABLE tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_2
	WITH
	(
	  DISTRIBUTION = HASH(POLICY_NO),
	  HEAP
	)
	AS
	SELECT
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP."ENTITY_ID",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP."SYSTEM",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.CONTRACT_ID,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.PORTFOLIO_GROUP,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.COHORT_YEAR,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.SET_OF_CONTRACT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.INSURANCE_CONTRACT_GROUP_ID,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.ICG_ID_PROPHET,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.ENTRY_MONTH,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.MEASUREMENT_MODEL,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.COVERAGE_LEVEL_END_DATE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.CCY_CD,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_BASIC,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_BASIC,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.CRTABLE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.LIFE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP.SHORTBOUND_FLAG,
	  CASE
        WHEN MULTI_RIDER.RIDER_CODE IS NOT NULL THEN (TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.CRTABLE) + TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.LIFE))
        ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.CRTABLE
      END AS BENEFIT_CD

    FROM tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_1 AS ICG_STORES_PROPHETU_PUL_RIDER_TMP

    LEFT JOIN STAG_ID.STAG_LIFEASIA_IFRS17_MULTINS_RIDER_CODES MULTI_RIDER
    ON TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.CRTABLE) = TRIM(MULTI_RIDER.RIDER_CODE);

	-------------------------------------------------
	--store the result to ICG_STORES_PROPHETU_PUL_RIDER_TMP
	-------------------------------------------------
	CREATE TABLE STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER
	WITH
	(
	  DISTRIBUTION = HASH(POLICY_NO),
	  CLUSTERED INDEX(POLICY_NO)
    )
	AS
	SELECT
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2."ENTITY_ID",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP_2."SYSTEM",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.POLICY_NO,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.PRODUCT_CD,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.CONTRACT_ID,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.PORTFOLIO_GROUP,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.COHORT_YEAR,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.SET_OF_CONTRACT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.INSURANCE_CONTRACT_GROUP_ID,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.ICG_ID_PROPHET,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.ENTRY_MONTH,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.CB_START_DT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.CB_END_DT,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.MEASUREMENT_MODEL,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.INFORCE_FLAG,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.COVERAGE_LEVEL_END_DATE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.CCY_CD,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_BASIC,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_RIDER,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.BEN_EXP_DATE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.FLAG_INSERT_UPDATE_BASIC,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.CRTABLE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.LIFE,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.SHORTBOUND_FLAG,
	  ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.BENEFIT_CD,
      CASE
        WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.FLAG_INSERT_UPDATE_BASIC = 'INSERT' AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.SHORTBOUND_FLAG = 'Y' AND ICG_STORES.POLICY_NO IS NOT NULL AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_RIDER = 'IF' THEN 'INSERT'
        WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.FLAG_INSERT_UPDATE_BASIC = 'INSERT' AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.SHORTBOUND_FLAG = 'Y' AND ICG_STORES.POLICY_NO IS NOT NULL AND COALESCE(ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_RIDER, '') <> 'IF' THEN 'UPDATE'
        WHEN ICG_STORES.POLICY_NO IS NULL AND ((ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_BASIC = 'IF' AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_RIDER = 'IF') OR COALESCE(ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_BASIC, '') <> 'IF') THEN 'INSERT'
        WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.FLAG_INSERT_UPDATE_BASIC IN('UPDATE', 'NO UPDATE') AND ICG_STORES.POLICY_NO IS NOT NULL AND COALESCE(ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.STATUS_SOURCE_RIDER, '') <> ICG_STORES.STATUS_SOURCE THEN 'UPDATE'
        ELSE 'NO UPDATE'
      END AS FLAG_INSERT_UPDATE_RIDER,
	  @BATCH_MASTER_ID AS BATCH_MASTER_ID,
      @BATCH_RUN_ID AS BATCH_RUN_ID,
      @JOB_MASTER_ID AS JOB_MASTER_ID,
      @JOB_RUN_ID AS JOB_RUN_ID,
	  @BATCHDATESTR AS BATCHDATE,
      @GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
    
	FROM tempdb.dbo.#TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP_2 AS ICG_STORES_PROPHETU_PUL_RIDER_TMP_2
	
    LEFT JOIN 
    (
      SELECT
        POLICY_NO,
        PRODUCT_CD,
        BENEFIT_CD,
        STATUS_SOURCE,
        INFORCE_FLAG,
        ROW_NUMBER() OVER(PARTITION BY POLICY_NO, PRODUCT_CD, BENEFIT_CD ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_POLICY_NO
      
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD <> BENEFIT_CD
    ) ICG_STORES
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.POLICY_NO = ICG_STORES.POLICY_NO
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.PRODUCT_CD = ICG_STORES.PRODUCT_CD
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP_2.BENEFIT_CD = ICG_STORES.BENEFIT_CD
    AND ICG_STORES.ROWNUM_POLICY_NO = 1;

	--BEGIN TRANSACTION;
	--SET NOCOUNT ON

	---------------------------------------------
	--- INSERT INVALID DATA TO ICG_STORES_INVALID
	---------------------------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('INSERT INVALID DATA TO ICG_STORES_INVALID : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	INSERT INTO FOND_ID.FOND_IFRS17_ICG_STORES_PROPHETU_PUL_INVALID
	SELECT
      ICG_STORES_PROPHETU_PUL_RIDER_TMP."ENTITY_ID",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP."SYSTEM",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.PRODUCT_CD IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.PRODUCT_CD
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.PRODUCT_CD ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD
      END AS PRODUCT_CD,
      CASE WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.BENEFIT_CD ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD END AS BENEFIT_CD,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.CONTRACT_ID IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.CONTRACT_ID
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.CONTRACT_ID ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.CONTRACT_ID
      END AS CONTRACT_ID,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.PORTFOLIO_GROUP IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.PORTFOLIO_GROUP
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.PORTFOLIO_GROUP ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.PORTFOLIO_GROUP
      END AS PORTFOLIO_GROUP,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.COHORT_YEAR IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.COHORT_YEAR
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.COHORT_YEAR ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.COHORT_YEAR
      END AS COHORT_YEAR,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.SET_OF_CONTRACT IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.SET_OF_CONTRACT
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.SET_OF_CONTRACT ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.SET_OF_CONTRACT
      END AS SET_OF_CONTRACT,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.INSURANCE_CONTRACT_GROUP_ID IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.INSURANCE_CONTRACT_GROUP_ID
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.INSURANCE_CONTRACT_GROUP_ID ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.INSURANCE_CONTRACT_GROUP_ID
      END AS INSURANCE_CONTRACT_GROUP_ID,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.ICG_ID_PROPHET IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.ICG_ID_PROPHET
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.ICG_ID_PROPHET ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.ICG_ID_PROPHET
      END AS ICG_ID_PROPHET,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.ENTRY_MONTH IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.ENTRY_MONTH
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.ENTRY_MONTH ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.ENTRY_MONTH
      END AS ENTRY_MONTH,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.CB_START_DT IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.CB_START_DT
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.CB_START_DT ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT
      END AS CB_START_DT,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.CB_END_DT IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.CB_END_DT
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.CB_END_DT ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT
      END AS CB_END_DT,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.MEASUREMENT_MODEL IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.MEASUREMENT_MODEL
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.MEASUREMENT_MODEL ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.MEASUREMENT_MODEL
      END AS MEASUREMENT_MODEL,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.COVERAGE_LEVEL_END_DATE IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.COVERAGE_LEVEL_END_DATE
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.COVERAGE_LEVEL_END_DATE ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.COVERAGE_LEVEL_END_DATE
      END AS COVERAGE_LEVEL_END_DATE,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.CCY_CD IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.CCY_CD
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.CCY_CD ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.CCY_CD
      END AS CCY_CD,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER,
      CASE WHEN IPRVPF_DUP.CHDRNUM IS NOT NULL OR IPRVPF.CHDRNUM IS NULL OR ICG_STORES_PROPHETU_PUL_INVALID.BEN_EXP_DATE IS NOT NULL THEN ICG_STORES_PROPHETU_PUL_INVALID.BEN_EXP_DATE
           WHEN ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'UPDATE' THEN ICG_STORES_VALID.BEN_EXP_DATE ELSE ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE
      END AS BEN_EXP_DATE,
      CAST('Prophetu_PUL' AS VARCHAR(20)) AS SUBSYSTEM,
      CURRENT_TIMESTAMP AS CREATED_DATE,
      CURRENT_TIMESTAMP AS UPDATED_DATE,
      (
        CASE
          WHEN ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO IS NOT NULL THEN 'BASIC_INVALID'
          ELSE
		    (CASE WHEN NULLIF(TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD),'') IS NULL THEN 'BENEFIT_CD,' ELSE '' END) +
            (CASE WHEN NULLIF(TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG),'') IS NULL THEN 'INFORCE_FLAG,' ELSE '' END) +
            (CASE WHEN NULLIF(TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER),'') IS NULL THEN 'STATUS_SOURCE,' ELSE '' END)
        END
      ) AS INVALID_DESC
	  ,@BATCH_MASTER_ID AS BATCH_MASTER_ID,
      @BATCH_RUN_ID AS BATCH_RUN_ID,
      @JOB_MASTER_ID AS JOB_MASTER_ID,
      @JOB_RUN_ID AS JOB_RUN_ID,
	  @BATCHDATESTR AS BATCHDATE,
      @GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
          
    FROM STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER AS ICG_STORES_PROPHETU_PUL_RIDER_TMP

    LEFT JOIN (SELECT CHDRNUM FROM FOND_ID.FOND_IFRS17_ICG_STORES_PROPHETU_PUL_DUP GROUP BY CHDRNUM) AS IPRVPF_DUP
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = NULLIF(TRIM(IPRVPF_DUP.CHDRNUM), '')

    LEFT JOIN (SELECT * FROM FOND_ID.FOND_IFRS17_ICG_STORES_PROPHETU_PUL_INVALID WHERE COALESCE(PRODUCT_CD, '') = COALESCE(BENEFIT_CD, '') AND UPPER(TRIM(SUBSYSTEM)) = 'PROPHETU_PUL') AS ICG_STORES_PROPHETU_PUL_INVALID
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO

    LEFT JOIN
    (
      SELECT
        POLICY_NO,
	    PRODUCT_CD,
	    BENEFIT_CD,
	    CONTRACT_ID,
	    COHORT_YEAR,
	    SET_OF_CONTRACT,
	    PORTFOLIO_GROUP,
	    INSURANCE_CONTRACT_GROUP_ID,
	    ICG_ID_PROPHET,
	    ENTRY_MONTH,
	    CB_START_DT,
	    CB_END_DT,
	    MEASUREMENT_MODEL,
	    COVERAGE_LEVEL_END_DATE,
	    CCY_CD,
	    BEN_EXP_DATE,
	    INFORCE_FLAG,
	    STATUS_SOURCE,
        ROW_NUMBER() OVER(PARTITION BY POLICY_NO, PRODUCT_CD, BENEFIT_CD ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_POLICY_NO
      
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD <> BENEFIT_CD
    ) ICG_STORES_VALID
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_VALID.POLICY_NO
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD = ICG_STORES_VALID.PRODUCT_CD
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD = ICG_STORES_VALID.BENEFIT_CD
    AND ICG_STORES_VALID.ROWNUM_POLICY_NO = 1

    LEFT JOIN (SELECT CHDRNUM FROM STAG_ID.STAG_LIFEASIA_IPRVPF GROUP BY CHDRNUM) AS IPRVPF
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = NULLIF(TRIM(IPRVPF.CHDRNUM), '')

    WHERE
    (
	  ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO IS NOT NULL
	  OR
	    (
	      ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO IS NOT NULL AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT'
	      AND (ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD IS NULL OR ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG IS NULL OR ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER IS NULL)
	    )
	  OR (ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD IS NULL OR ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG IS NULL OR ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER IS NULL)
	)
	AND NOT
	(
	  (ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT' OR ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_BASIC = 'INSERT')
	  AND COALESCE(ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_BASIC ,'N/A')= 'IF'
	  AND NULLIF(TRIM(ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER),'') IS NOT NULL 
	  AND COALESCE(ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER,'N/A') <> 'IF'
	);

	---------------------------
	--- UPDATE TABLE ICG STORES
	---------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('UPDATE TABLE ICG STORES : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	UPDATE ICG_STORES
	SET
	  INFORCE_FLAG = (CASE
	                    WHEN IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT' THEN 'N'
						WHEN IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER = ICG_STORES.STATUS_SOURCE AND ICG_STORES.STATUS_SOURCE = 'IF' AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT <> ICG_STORES.CB_END_DT AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT' THEN 'N'
                        ELSE IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG
                      END),
	  STATUS_SOURCE = (CASE
	                     WHEN IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT' THEN ICG_STORES.STATUS_SOURCE
	                     ELSE IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER
	                   END),
	  UPDATED_DATE = CURRENT_TIMESTAMP
	
	FROM FOND_ID.FOND_IFRS17_ICG_STORES AS ICG_STORES

	JOIN
	(
	  SELECT
	    POLICY_NO,
	    PRODUCT_CD,
		BENEFIT_CD,
	    CB_START_DT,
	    CB_END_DT,
	    ROW_NUMBER() OVER(PARTITION BY POLICY_NO, PRODUCT_CD, BENEFIT_CD ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_RIDER
	  
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  
	  WHERE PRODUCT_CD <> BENEFIT_CD
	  AND UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	) AS LATEST_ICGS
	ON ICG_STORES.POLICY_NO = LATEST_ICGS.POLICY_NO
    AND ICG_STORES.PRODUCT_CD = LATEST_ICGS.PRODUCT_CD
	AND ICG_STORES.BENEFIT_CD = LATEST_ICGS.BENEFIT_CD
	AND ICG_STORES.CB_START_DT = LATEST_ICGS.CB_START_DT
	AND ICG_STORES.CB_END_DT = LATEST_ICGS.CB_END_DT
	AND LATEST_ICGS.ROWNUM_RIDER = 1
	
	JOIN STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER AS IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP
	ON IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = LATEST_ICGS.POLICY_NO
	AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD = LATEST_ICGS.BENEFIT_CD
	AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER IN('INSERT', 'UPDATE')

	LEFT JOIN 
    (
      SELECT *,
        ROW_NUMBER() OVER(PARTITION BY POLICY_NO ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_POLICY_NO
      
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD = BENEFIT_CD
    ) ICG_STORES_BASIC
    ON IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_BASIC.POLICY_NO
    AND ICG_STORES_BASIC.ROWNUM_POLICY_NO = 1

    LEFT JOIN (SELECT CHDRNUM FROM STAG_ID.STAG_LIFEASIA_IPRVPF WHERE NULLIF(TRIM(CHDRNUM), '') IS NOT NULL GROUP BY CHDRNUM) AS IPRVPF
    ON IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = NULLIF(TRIM(IPRVPF.CHDRNUM), '')

    LEFT JOIN (SELECT * FROM FOND_ID.FOND_IFRS17_ICG_STORES_PROPHETU_PUL_INVALID WHERE COALESCE(PRODUCT_CD, '') = COALESCE(BENEFIT_CD, '') AND UPPER(TRIM(SUBSYSTEM)) = 'PROPHETU_PUL') AS ICG_STORES_PROPHETU_PUL_INVALID
    ON IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO
    
	WHERE UPPER(TRIM(ICG_STORES.SUBSYSTEM)) = 'PROPHETU_PUL'
	AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO IS NOT NULL
	AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CONTRACT_ID IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.PORTFOLIO_GROUP IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.COHORT_YEAR IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.SET_OF_CONTRACT IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.INSURANCE_CONTRACT_GROUP_ID IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.ICG_ID_PROPHET IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.ENTRY_MONTH IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.MEASUREMENT_MODEL IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.COVERAGE_LEVEL_END_DATE IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CCY_CD IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER IS NOT NULL
    AND IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE IS NOT NULL
	AND (IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT <= IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE OR IFRS17_ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER <> 'IF')
	AND ICG_STORES_BASIC.POLICY_NO IS NOT NULL
    --ONLY PROCESS RIDERS WITH VALID BASIC:
    AND IPRVPF.CHDRNUM IS NOT NULL 
    AND ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO IS NULL;

    ---------------------------------------
	--- INSERT NEW VALID DATA TO ICG_STORES
	---------------------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('INSERT NEW VALID DATA TO ICG_STORES : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	INSERT INTO FOND_ID.FOND_IFRS17_ICG_STORES
	(
	  "ENTITY_ID",
      "SYSTEM",
	  POLICY_NO,
	  PRODUCT_CD,
	  BENEFIT_CD,
	  CONTRACT_ID,
	  PORTFOLIO_GROUP,
	  COHORT_YEAR,
	  SET_OF_CONTRACT,
	  INSURANCE_CONTRACT_GROUP_ID,
	  ICG_ID_PROPHET,
	  ENTRY_MONTH,
	  CB_START_DT,
	  CB_END_DT,
	  MEASUREMENT_MODEL,
	  INFORCE_FLAG,
	  COVERAGE_LEVEL_END_DATE,
	  CCY_CD,
	  STATUS_SOURCE,
	  BEN_EXP_DATE,
	  SUBSYSTEM,
	  CREATED_DATE,
	  UPDATED_DATE,
	  BATCH_MASTER_ID,
      BATCH_RUN_ID,
      JOB_MASTER_ID,
      JOB_RUN_ID,
	  BATCHDATE,
      ETL_PROCESS_DATE_TIME
	)
    SELECT
      ICG_STORES_PROPHETU_PUL_RIDER_TMP."ENTITY_ID",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP."SYSTEM",
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.CONTRACT_ID,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.PORTFOLIO_GROUP,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.COHORT_YEAR,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.SET_OF_CONTRACT,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.INSURANCE_CONTRACT_GROUP_ID,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.ICG_ID_PROPHET,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.ENTRY_MONTH,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.MEASUREMENT_MODEL,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.COVERAGE_LEVEL_END_DATE,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.CCY_CD,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER,
      ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE,
      CAST('Prophetu_PUL' AS VARCHAR(20)) AS SUBSYSTEM,
      CURRENT_TIMESTAMP AS CREATED_DATE,
      CURRENT_TIMESTAMP AS UPDATED_DATE,
	  @BATCH_MASTER_ID AS BATCH_MASTER_ID,
      @BATCH_RUN_ID AS BATCH_RUN_ID,
      @JOB_MASTER_ID AS JOB_MASTER_ID,
      @JOB_RUN_ID AS JOB_RUN_ID,
	  @BATCHDATESTR AS BATCHDATE,
      @GMT_START_DTTM AS ETL_PROCESS_DATE_TIME

    FROM STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER AS ICG_STORES_PROPHETU_PUL_RIDER_TMP

    LEFT JOIN 
    (
      SELECT *,
        ROW_NUMBER() OVER(PARTITION BY POLICY_NO ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_POLICY_NO
      
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD = BENEFIT_CD
    ) ICG_STORES_BASIC
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_BASIC.POLICY_NO
    AND ICG_STORES_BASIC.ROWNUM_POLICY_NO = 1

    LEFT JOIN (SELECT CHDRNUM FROM STAG_ID.STAG_LIFEASIA_IPRVPF WHERE NULLIF(TRIM(CHDRNUM), '') IS NOT NULL GROUP BY CHDRNUM) AS IPRVPF
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = NULLIF(TRIM(IPRVPF.CHDRNUM), '')

    LEFT JOIN (SELECT * FROM FOND_ID.FOND_IFRS17_ICG_STORES_PROPHETU_PUL_INVALID WHERE COALESCE(PRODUCT_CD, '') = COALESCE(BENEFIT_CD, '') AND UPPER(TRIM(SUBSYSTEM)) = 'PROPHETU_PUL') AS ICG_STORES_PROPHETU_PUL_INVALID
    ON ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO = ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO

    WHERE ICG_STORES_PROPHETU_PUL_RIDER_TMP.FLAG_INSERT_UPDATE_RIDER = 'INSERT'
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.POLICY_NO IS NOT NULL
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.PRODUCT_CD IS NOT NULL
    AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.BENEFIT_CD IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.CONTRACT_ID IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.PORTFOLIO_GROUP IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.COHORT_YEAR IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.SET_OF_CONTRACT IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.INSURANCE_CONTRACT_GROUP_ID IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.ICG_ID_PROPHET IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.ENTRY_MONTH IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_END_DT IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.MEASUREMENT_MODEL IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.INFORCE_FLAG IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.COVERAGE_LEVEL_END_DATE IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.CCY_CD IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.STATUS_SOURCE_RIDER IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE IS NOT NULL
	AND ICG_STORES_PROPHETU_PUL_RIDER_TMP.CB_START_DT < ICG_STORES_PROPHETU_PUL_RIDER_TMP.BEN_EXP_DATE
	AND ICG_STORES_BASIC.POLICY_NO IS NOT NULL
    --ONLY PROCESS RIDERS WITH VALID BASIC:
    AND IPRVPF.CHDRNUM IS NOT NULL 
    AND ICG_STORES_PROPHETU_PUL_INVALID.POLICY_NO IS NULL;

	-------------------------
	--- UPDATE RIDER OUTFORCE
	-------------------------
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_START = CURRENT_TIMESTAMP;
	SET @V_DESCRIPTION = CONCAT('UPDATE RIDER OUTFORCE : ', @V_START);

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	UPDATE ICG_STORES

	SET STATUS_SOURCE = STATUS_MAP.STATUS_SOURCE,
	    INFORCE_FLAG = STATUS_MAP.INFORCE_FLAG,
	    UPDATED_DATE = CURRENT_TIMESTAMP

	FROM FOND_ID.FOND_IFRS17_ICG_STORES AS ICG_STORES

	JOIN
	(
	  SELECT
	    POLICY_NO,
	    PRODUCT_CD,
	    BENEFIT_CD,
	    STATUS_SOURCE,
	    CB_START_DT,
	    CB_END_DT,
	    ROW_NUMBER() OVER(PARTITION BY POLICY_NO, PRODUCT_CD, BENEFIT_CD ORDER BY CB_START_DT DESC, CB_END_DT DESC) AS ROWNUM_RIDER
	  
	  FROM FOND_ID.FOND_IFRS17_ICG_STORES
	  
	  WHERE UPPER(SUBSYSTEM) = 'PROPHETU_PUL'
	  AND PRODUCT_CD <> BENEFIT_CD
	  AND STATUS_SOURCE = 'IF'
	) LATEST_ICGS
	ON ICG_STORES.POLICY_NO = LATEST_ICGS.POLICY_NO
    AND ICG_STORES.PRODUCT_CD = LATEST_ICGS.PRODUCT_CD
	AND ICG_STORES.BENEFIT_CD = LATEST_ICGS.BENEFIT_CD
	AND ICG_STORES.CB_START_DT = LATEST_ICGS.CB_START_DT
	AND ICG_STORES.CB_END_DT = LATEST_ICGS.CB_END_DT
	AND LATEST_ICGS.ROWNUM_RIDER = 1

	LEFT JOIN
	(
	  SELECT
	    POLICY_NO,
	    PRODUCT_CD,
	    BENEFIT_CD
	  
	  FROM STAG_ID.TMP_IFRS17_ICG_STORES_PROPHETU_PUL_RIDER
	  
	  WHERE BENEFIT_CD IS NOT NULL
	) PROPHETU_PUL_RIDER_TMP
	ON LATEST_ICGS.POLICY_NO = PROPHETU_PUL_RIDER_TMP.POLICY_NO
	AND LATEST_ICGS.BENEFIT_CD = PROPHETU_PUL_RIDER_TMP.BENEFIT_CD

	LEFT JOIN STAG_ID.STAG_CONFIG_IFRS17_STATUS_MAPPING_TABLE AS STATUS_MAP  
    ON STATUS_MAP.STATUS_SOURCE = 'OUTFORCE'
    AND UPPER(TRIM(STATUS_MAP.SYSTEM)) = 'LIFE ASIA'

	WHERE PROPHETU_PUL_RIDER_TMP.POLICY_NO IS NULL;

	--store end step to log
	SET @V_END = CURRENT_TIMESTAMP;
	SET @V_SEQNO = @V_SEQNO + 1;
	SET @V_DESCRIPTION = CONCAT('Finish ', @V_FUNCTION_NAME, ' : ', @V_END, ' Duration ', DATEDIFF(MINUTE, @V_START, @V_END));

	INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
	VALUES (@V_END, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

	--IF @@TRANCOUNT > 0
	--	COMMIT TRANSACTION;

END TRY

BEGIN CATCH
	--IF @@TRANCOUNT > 0
	--	ROLLBACK TRANSACTION;

	DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
	DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
	DECLARE @ErrorState AS INT = ERROR_STATE()

	SET @V_SEQNO 	= @V_SEQNO + 1;
	SET @V_START 	= CONVERT(DATETIME,GETDATE());
	SET @V_END 	= CONVERT(DATETIME,GETDATE());
	SET @V_DESCRIPTION	='Error execution for function on ' + @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) + ' with Error Message : ' + ERROR_MESSAGE();

	INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION") VALUES(@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);
	RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
END CATCH;



