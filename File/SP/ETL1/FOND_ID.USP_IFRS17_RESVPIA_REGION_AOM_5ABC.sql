CREATE PROC [FOND_ID].[USP_IFRS17_RESVPIA_REGION_AOM_5ABC] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');


SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_RESVPIA_REGION_AOM_5ABC';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,[DESCRIPTION])
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

BEGIN TRY
DROP TABLE [FOND_ID].[FOND_IFRS17_RESVPIA_REGION_AOM_5ABC];
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

BEGIN TRY
CREATE TABLE [FOND_ID].[FOND_IFRS17_RESVPIA_REGION_AOM_5ABC]
WITH
	(
	  DISTRIBUTION = HASH(CHDRNUM),
	  HEAP
	) AS
SELECT DISTINCT
	SOP.[CHDRNUM]
		  ,SOP.[CRTABLE]
		  ,SOP.[ANBCCD]
		  ,SOP.[SEX]
		  ,SOP.[PCESSTRM]
		  ,SOP.[INSTOT]
		  ,SOP.[SUMINS]
		  ,SOP.[MORTCLS]
		  ,(CASE WHEN (SOP.[HOISSDTE] IS NOT NULL AND SOP.[HOISSDTE] <> '') THEN SOP.[HOISSDTE] ELSE EOP.[HOISSDTE] END) AS [HOISSDTE] -- updated by dyah 09/08/22
		  ,SOP.[CRRCD]
		  ,SOP.[TOPUPAMNT]
		  ,SOP.[WDRAMNT]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TTLFUND] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TTLFUND]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRCF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRCF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PREF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRFF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRFF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRMF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PDMF]
		  ,SOP.[STATCODE]
		  ,SOP.[SLSCNL]
		  ,SOP.[CHGDTE]
		  ,SOP.[CURYRTUP]
		  ,SOP.[TOPUPLAST]
		  ,SOP.[BILCHNL]
		  ,0 AS [CLNTCODE]
		  ,SOP.[CLTPHONE01]
		  ,SOP.[CLTPHONE02]
		  ,SOP.[LIFCNUM]
		  ,SOP.[AGNTNUM]
		  ,SOP.[AGTNAME]
		  ,SOP.[DTEAPP]
		  ,SOP.[DTETRM]
		  ,SOP.[TSALESUNT]
		  ,SOP.[UNITNUM]
		  ,SOP.[UNITNAME]
		  ,SOP.[REGION]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRMP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRMP]
		  ,SOP.[PRODCAT]
		  ,SOP.[TPDCLAIM]
		  ,SOP.[ADDR04CITY]
		  ,SOP.[ADDR05PROV]
		  ,SOP.[SPEF]
		  ,SOP.[SPMF]
		  ,SOP.[SPFF]
		  ,SOP.[SPCF]
		  ,SOP.[SPMP]
		  ,SOP.[SPDF]
		  ,SOP.[SPTTLAMNT]
		  ,SOP.[TOPUPEF]
		  ,SOP.[TOPUPMF]
		  ,SOP.[TOPUPFF]
		  ,SOP.[TOPUPCF]
		  ,SOP.[TOPUPMP]
		  ,SOP.[TOPUPDF]
		  ,SOP.[TTTLTOPUP]
		  ,SOP.[WITHEF]
		  ,SOP.[WITHMF]
		  ,SOP.[WITHFF]
		  ,SOP.[WITHCF]
		  ,SOP.[WITHMP]
		  ,SOP.[WITHDF]
		  ,SOP.[TTLWITHAMT]
		  ,SOP.[LOADINGEXT]
		  ,SOP.[CLTDOB]
		  ,SOP.[MEDPRVIND]
		  ,SOP.[CNTCURR]
		  ,SOP.[ZZSRCE]
		  ,SOP.[UALPCTA]
		  ,SOP.[UALPCTB]
		  ,SOP.[UALPCTC]
		  ,SOP.[UALPCTD]
		  ,SOP.[UALPCTE]
		  ,SOP.[UALPCTF]
		  ,SOP.[CODE]
		  ,SOP.[ZLONGDESC]
		  ,SOP.[ACTVALUE]
		  ,SOP.[SURRDATE]
		  ,SOP.[LSTWDWDATE]
		  ,SOP.[LSTTOPDATE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGC] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRGC]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGC] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PDGC]
		  ,SOP.[SPRGC]
		  ,SOP.[SPDGC]
		  ,SOP.[TOPUPRGC]
		  ,SOP.[TOPUPGDC]
		  ,SOP.[WITHRGC]
		  ,SOP.[WITHDGC]
		  ,SOP.[UALPCTG]
		  ,SOP.[UALPCTH]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PREP]
		  ,SOP.[SPEP]
		  ,SOP.[TOPUPEP]
		  ,SOP.[WITHEP]
		  ,SOP.[UALPCTI]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRIEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRIEF]
		  ,SOP.[SPRIEF]
		  ,SOP.[TUPRIEF]
		  ,SOP.[WDPRIEF]
		  ,SOP.[PRIEFPCT]
		  ,SOP.[REGIONFLG]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRVEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRVEF]
		  ,SOP.[SPRVEF]
		  ,SOP.[TUPRVEF]
		  ,SOP.[WDPRVEF]
		  ,SOP.[PRVEFPCT]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRAEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRAEF]
		  ,SOP.[SPRAEF]
		  ,SOP.[TUPRAEF]
		  ,SOP.[WDPRAEF]
		  ,SOP.[PRAEFPCT]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDIEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PDIEF]
		  ,SOP.[LBIND]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRCF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRCF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPREF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPREF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRFF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRFF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRMF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPDMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPDMF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRMPF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRMPF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRGCEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRGCEF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPDGCEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPDGCEF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPREPF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPREPF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRIE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRIE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRVE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRVE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPRAE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPRAE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRCF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRCF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPREF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPREF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRFF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRFF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRMF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPDMF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPDMF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRMPF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRMPF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRGCEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRGCEF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPDGCEF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPDGCEF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPREPF] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPREPF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRIE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRIE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRVE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRVE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPRAE] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPRAE]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTBASFUND] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOTBASFUND]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOTTOPFUND] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOTTOPFUND]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGV] AS VARCHAR),'') ELSE '' END AS [PDGV]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGM] AS VARCHAR),'') ELSE '' END AS [PDGM]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGV] AS VARCHAR),'') ELSE '' END AS [PRGV]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRGM] AS VARCHAR),'') ELSE '' END AS [PRGM]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PREC] AS VARCHAR),'') ELSE '' END AS [PREC]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PSEC] AS VARCHAR),'') ELSE '' END AS [PSEC]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDMM] AS VARCHAR),'') ELSE '' END AS [PDMM]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDIF] AS VARCHAR),'') ELSE '' END AS [PDIF]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDNV] AS VARCHAR),'') ELSE '' END AS [PDNV]
		  ,SOP.[SPMM]
		  ,SOP.[SPIF]
		  ,SOP.[SPNV]
		  ,SOP.[TOPUPMM]
		  ,SOP.[TOPUPIF]
		  ,SOP.[TOPUPNV]
		  ,SOP.[WITHMM]
		  ,SOP.[WITHIF]
		  ,SOP.[WITHNV]
		  ,SOP.[UALPCTJ]
		  ,SOP.[UALPCTK]
		  ,SOP.[UALPCTL]
		  ,SOP.[BASPDMM]
		  ,SOP.[BASPDIF]
		  ,SOP.[BASPDNV]
		  ,SOP.[TOPPDMM]
		  ,SOP.[TOPPDIF]
		  ,SOP.[TOPPDNV]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDFI] AS VARCHAR),'') ELSE '' END AS [PDFI]
		  ,SOP.[SPFI]
		  ,SOP.[TOPUPFI]
		  ,SOP.[WITHFI]
		  ,SOP.[UALPCTM]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPDFI] AS VARCHAR),'') ELSE '' END AS [BASPDFI]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPDFI] AS VARCHAR),'') ELSE '' END AS [TOPPDFI]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRNV] AS VARCHAR),'') ELSE '' END AS [PRNV]
		  ,SOP.[SPPR]
		  ,SOP.[TOPUPPR]
		  ,SOP.[WITHPR]
		  ,SOP.[UALPCTN]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPDPR] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPDPR]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPDPR] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPDPR]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PDGT] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PDGT]--> Added in v3
		  ,SOP.[SPGT] --> Added in v3
		  ,SOP.[TOPUPGT] --> Added in v3
		  ,SOP.[WITHGT] --> Added in v3
		  ,SOP.[UALPCTO] --> Added in v3
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BASPDGT] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BASPDGT]--> Added in v3
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOPPDGT] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOPPDGT]--> Added in v3
		  -- updated by dyah 09/08/2022
		  ,SOP.[STAT_SECT]
		  ,SOP.[PRMI]
		  ,SOP.[SRMI]
		  ,SOP.[TOPUPRI]
		  ,SOP.[WITHRI]
		  ,SOP.[UALPCTP]
		  ,SOP.[BASPRMI]
		  ,SOP.[TOPPRMI]
		  ,SOP.[PDMI]
		  ,SOP.[SDMI]
		  ,SOP.[TOPUPDI]
		  ,SOP.[WITHDI]
		  ,SOP.[UALPCTQ]
		  ,SOP.[BASPDMI]
		  ,SOP.[TOPPDMI]
		  ,SOP.[FLAGS]
		  -- updated by dyah 08/06/2022
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[SP_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [SP_PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TU_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TU_PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[WITH_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [WITH_PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[PERC_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [PERC_PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[BAS_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [BAS_PRDP]
		  ,CASE WHEN SOP.BACKUP_BATCHDATE = CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) THEN COALESCE(CAST(SOP.[TOP_PRDP] AS VARCHAR),CAST(0 AS VARCHAR)) ELSE CAST(0 AS VARCHAR) END AS [TOP_PRDP]
		 ,CASE 
			WHEN (SOP.[IFRS_ONEROUS_GRP] IS NULL OR SOP.[IFRS_ONEROUS_GRP] = '') THEN COALESCE(EOP.[IFRS_ONEROUS_GRP],'') 
			ELSE COALESCE(SOP.[IFRS_ONEROUS_GRP],'') END AS [IFRS_ONEROUS_GRP]
		,CASE 
			WHEN (SOP.[IFRS_CY_GRP] IS NULL OR SOP.[IFRS_CY_GRP] = '') THEN COALESCE(EOP.[IFRS_CY_GRP],'') 
			ELSE COALESCE(SOP.[IFRS_CY_GRP],'') END AS [IFRS_CY_GRP]
		,CASE 
			WHEN (SOP.[IFRS_PORT_GRP]  IS NULL OR SOP.[IFRS_PORT_GRP]  = '') THEN COALESCE(EOP.[IFRS_PORT_GRP] ,'') 
			ELSE COALESCE(SOP.[IFRS_PORT_GRP] ,'') END AS [IFRS_PORT_GRP] 
		,CASE 
			WHEN (SOP.[IFRS_MEASURE_MODEL]  IS NULL OR SOP.[IFRS_MEASURE_MODEL]  = '') THEN COALESCE(EOP.[IFRS_MEASURE_MODEL] ,'') 
			ELSE COALESCE(SOP.[IFRS_MEASURE_MODEL] ,'') END AS [IFRS_MEASURE_MODEL]
		,CASE 
			WHEN (SOP.[BASIC_ENTRY_YEAR] IS NULL OR SOP.[BASIC_ENTRY_YEAR] = '') THEN COALESCE(EOP.[BASIC_ENTRY_YEAR],'') 
			ELSE COALESCE(SOP.[BASIC_ENTRY_YEAR],'') END AS [BASIC_ENTRY_YEAR]
		,CASE 
			WHEN (SOP.[BASIC_ENTRY_MONTH] IS NULL OR SOP.[BASIC_ENTRY_MONTH] = '') THEN COALESCE(EOP.[BASIC_ENTRY_MONTH],'') 
			ELSE COALESCE(SOP.[BASIC_ENTRY_MONTH],'') END AS [BASIC_ENTRY_MONTH]
		,CASE 
			WHEN (SOP.[IFRS_CB_TERM_M] IS NULL OR SOP.[IFRS_CB_TERM_M] = '') THEN COALESCE(EOP.[IFRS_CB_TERM_M],'') 
			ELSE COALESCE(SOP.[IFRS_CB_TERM_M],'') END AS [IFRS_CB_TERM_M]
		,CASE 
			WHEN (SOP.[MTHS_TO_SALE] IS NULL OR SOP.[MTHS_TO_SALE] = '') THEN COALESCE(EOP.[MTHS_TO_SALE],'') 
			ELSE COALESCE(SOP.[MTHS_TO_SALE],'') END AS [MTHS_TO_SALE]
		,CASE 
			WHEN (SOP.[IFRS_ICG_ID] IS NULL OR SOP.[IFRS_ICG_ID] = '') THEN COALESCE(EOP.[IFRS_ICG_ID],'') 
			ELSE COALESCE(SOP.[IFRS_ICG_ID],'') END AS [IFRS_ICG_ID]
		,CASE 
			WHEN (SOP.[IFRS_ICG_ID_PROPHET] IS NULL OR SOP.[IFRS_ICG_ID_PROPHET] = '') THEN COALESCE(EOP.[IFRS_ICG_ID_PROPHET],'') 
			ELSE COALESCE(SOP.[IFRS_ICG_ID_PROPHET],'') END AS [IFRS_ICG_ID_PROPHET]
		,CASE 
			WHEN (SOP.[SUB_GROUP_ID] IS NULL OR SOP.[SUB_GROUP_ID] = '') THEN COALESCE(EOP.[SUB_GROUP_ID],'') 
			ELSE COALESCE(SOP.[SUB_GROUP_ID],'') END AS [SUB_GROUP_ID]
		,CASE 
			WHEN (SOP.[ENTITY_ID] IS NULL OR SOP.[ENTITY_ID] = '') THEN COALESCE(EOP.[ENTITY_ID],'') 
			ELSE COALESCE(SOP.[ENTITY_ID],'') END AS [ENTITY_ID]
		,CASE 
			WHEN (SOP.[CB_START_DT] IS NULL OR SOP.[CB_START_DT] = '') THEN COALESCE(EOP.[CB_START_DT],'') 
			ELSE COALESCE(SOP.[CB_START_DT],'') END AS [CB_START_DT]
		,CASE 
			WHEN (SOP.[CB_END_DT] IS NULL OR SOP.[CB_END_DT] = '') THEN COALESCE(EOP.[CB_END_DT],'') 
			ELSE COALESCE(SOP.[CB_END_DT],'') END AS [CB_END_DT]
		,CASE 
			WHEN (SOP.[REL_INSURANCE_CONTRACT_GROUP_ID] IS NULL OR SOP.[REL_INSURANCE_CONTRACT_GROUP_ID] = '') THEN COALESCE(EOP.[REL_INSURANCE_CONTRACT_GROUP_ID],'') 
			ELSE COALESCE(SOP.[REL_INSURANCE_CONTRACT_GROUP_ID],'') END AS [REL_INSURANCE_CONTRACT_GROUP_ID]
		,EOP.[STATCODE] AS [STATCODE_EOP]
		  ,CASE WHEN EOP.[CHDRNUM] IS NULL 
				THEN 0
			WHEN COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0) + COALESCE(CAST(EOP.[CURYRTUP] AS FLOAT),0) = 0
				THEN 0
			ELSE
				COALESCE(CAST(EOP.[CURYRTUP] AS FLOAT),0) - (COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0))
			END
		AS [UNDISC_FUND_BALANCE_ADJ],
		CASE WHEN EOP.[CHDRNUM] IS NULL 
			THEN 0
		ELSE
			(COALESCE(CAST(SOP.[WDRAMNT] AS FLOAT),0) - COALESCE(CAST(EOP.[WDRAMNT] AS FLOAT),0)) 
		END AS [PW_AMOUNT], -- updated by dyah 09/08/2022 --040723
		@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID  AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM (
	SELECT * FROM (
		SELECT * , ROW_NUMBER() OVER(PARTITION BY CHDRNUM ORDER BY BACKUP_BATCHDATE ASC) AS ROW_NUMBER
		FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
		WHERE BACKUP_BATCHDATE >= CAST(CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE))-1,'-12-31') AS DATE) 
		AND CONCAT( YEAR(BACKUP_BATCHDATE),SUBSTRING(CAST(BACKUP_BATCHDATE AS CHAR),6,2)) <= CONCAT(YEAR(CAST(@BATCHDATESTR AS DATE)),SUBSTRING(CAST(@BATCHDATESTR AS CHAR),6,2))
	)TMP WHERE TMP.ROW_NUMBER = 1
) AS SOP
LEFT JOIN (
  SELECT *
  FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
  WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
) AS EOP ON SOP.[CHDRNUM] = EOP.[CHDRNUM];

END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
