CREATE PROC [FOND_ID].[USP_IFRS17_TRADITIONAL_ACT_USED] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_TRADITIONAL_ACT_USED';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)
	   
INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,"DESCRIPTION")
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

---0. ENHANCE CURRENT VE
	---0.1. PROPTRDB

BEGIN TRY
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP_V2','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP_V2;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP_V2','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP_V2;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP_2','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP_2;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP_2','U')  IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_TEMP_2;

TRUNCATE TABLE FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID;
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

PRINT '1'	

	SELECT	[CRTABLE] AS [PRODUCT_CD],
			[CRTABLE] AS [BENEFIT_CD],
			*
	INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP_V2]
	FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB]

	SELECT *
	INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
	FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB]

PRINT '2'
	---0.2. PROPTRDR
	SELECT	[CRTABLE] AS [PRODUCT_CD],
			[CRTABLE] AS [BENEFIT_CD],
			*
	INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP_V2]
	FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR]

PRINT '3'

	SELECT	*
	INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP]
	FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR]

PRINT '4'

	---0.2. PROPTRDR
	--STEP 3: DROP COLUMN LIFE AND CONCAT COLUMN LIFE AND COLUMN 1 FOR BENEFIT CODE
	SELECT	A.[PRODUCT_CD],
			(CASE WHEN A.[RIDER_CODE] IS NULL THEN A.[CRTABLE] ELSE CONCAT(A.[CRTABLE],A.[LIFE]) END) AS BENEFIT_CD,
		  A.[CHDRNUM]
		  ,A.[CRTABLE]
		  ,A.[ANBCCD]
		  ,A.[SEX]
		  ,A.[MORTCLS]
		  ,A.[PRMTRM01]
		  ,A.[RSKTRM01]
		  ,A.[PREMI01]
		  ,A.[BILLFREQ]
		  ,A.[SUMINS]
		  ,A.[TOTBNS]
		  ,A.[PTDATE]
		  ,A.[HOISSDTE]
		  ,A.[CRRCD]
		  ,A.[RCESDTE]
		  ,A.[CNTCURR]
		  ,A.[STATCODE]
		  ,A.[CURRFROM]
		  ,A.[ZLINSTPREM]
		  ,A.[CURBON]
		  ,A.[LASTBON]
		  ,A.[SLSCNL]
		  ,A.[BILLCHNL]
		  ,A.[WDRN]
		  ,A.[LSURNAME]
		  ,A.[CLTPHONE01]
		  ,A.[CLTPHONE02]
		  ,A.[LIFCNUM]
		  ,A.[AGNTNUM]
		  ,A.[LSURNAME01]
		  ,A.[DTEAPP]
		  ,A.[DTETRM]
		  ,A.[TSALESUNT]
		  ,A.[REPORTAG]
		  ,A.[LSURNAME02]
		  ,A.[REGION]
		  ,A.[PSTATCODE]
		  ,A.[CLAIMSAR]
		  ,A.[FUND]
		  ,A.[FPAYDATE]
		  ,A.[CLTADDR04]
		  ,A.[CLTADDR05]
		  ,A.[PYMT]
		  ,A.[SRCEBUS]
		  ,A.[REASONCD]
		  ,A.[LONGDESC]
		  ,A.[COWNNUM]
		  ,A.[IFRS_ONEROUS_GRP]
		  ,A.[IFRS_CY_GRP]
		  ,A.[IFRS_PORT_GRP]
		  ,A.[IFRS_MEASURE_MODEL]
		  ,A.[BASIC_ENTRY_YEAR]
		  ,A.[BASIC_ENTRY_MONTH]
		  ,A.[IFRS_CB_TERM_M]
		  ,A.[MTHS_TO_SALE]
		  ,A.[IFRS_ICG_ID]
		  ,A.[IFRS_ICG_ID_PROPHET]
		  ,A.[SUB_GROUP_ID]
		  ,A.[ENTITY_ID]
		  ,A.[CB_START_DT]
		  ,A.[CB_END_DT]
		  ,A.[REL_INSURANCE_CONTRACT_GROUP_ID]
	INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP_2]
	FROM (
SELECT A.*,B.RIDER_CODE FROM 
(
		SELECT	A.*,B.LIFE
		FROM 
		(
		--STEP 1: MAPPING PRODUCT CODE USING NO POLICY
			SELECT	A.*,
					B.[CRTABLE] AS [PRODUCT_CD]
			FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP] AS A
			LEFT JOIN [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] AS B
			ON A.[CHDRNUM]=B.[CHDRNUM]
		-----------------END OF STEP 1----------------------
			) AS A
		LEFT JOIN STAG_ID.STAG_LIFEASIA_LIFEPF AS B
		ON (A.[CHDRNUM] =B.[CHDRNUM] 
		AND A.[LIFCNUM]=B.LIFCNUM)
		WHERE B.VALIDFLAG = 1	
		-------------------------END OF STEP 2------------------------------------
		) AS A
	LEFT JOIN [STAG_ID].[STAG_LIFEASIA_IFRS17_MULTINS_RIDER_CODES] AS B
	ON A.[CRTABLE]=B.[RIDER_CODE]
) AS A

	----------------------END OF STEP 3------------------------------
PRINT '5'

--- 1. CHECK BLANK DATA (NOTIFY USER IF THERE IS ANY)---
INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
SELECT *,'BLANK DATA STATCODE OR SEX' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] -- NONE FOUND
WHERE [STATCODE] = '' OR [SEX] = ''

PRINT '6'


INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDR
SELECT *,'BLANK DATA STATCODE OR SEX' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP] -- NONE FOUND
WHERE [STATCODE] = '' OR [SEX] = ''



PRINT '7'

--- 3. CHECK PREMIUM TERMS (TBC)
	--- 3.1. PCB88
		--- 3.1.1. CHECKS FOR POLICIES WITH ENTRY AGE > 60 YO --
		INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
		SELECT	*,'ENTRY WITH AGE OVER 60 - T1QR,T1PR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
		WHERE [CRTABLE] IN ('T1QR', 'T1PR') AND [ANBCCD] > 60

		-- 3.1.2. CHECKS FOR INVALID PREMIUM TERMS --
    	INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
		SELECT *,'INVALID PREMIUM TERMS' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
		WHERE 
		([CRTABLE] = 'T1QR' AND [PRMTRM] NOT IN (5,10,15)) -- T1QR IS CODE FOR 5,10,15 PAY
		OR
		([CRTABLE] = 'T1PR' AND [PRMTRM] <> 1) -- SAME 2 POLICIES FROM PREVIOUS MONTH

	--- 3.2. PRUWARISAN
		--- 3.2.1 CHECKS FOR INVALID PREMIUM TERMS L1PR --
		INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
		SELECT *,'INVALID PREMIUM TERMS L1PR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] -- NONE FOUND
		WHERE ([CRTABLE] = 'L1PR' AND [PRMTRM] NOT IN (5,10,15)) -- L1PR IS CODE FOR 5,10,15 PAY

		--- 3.2.2 CHECKS FOR POLICIES WITH ENTRY AGE > 70 YO L1PR --
        INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
		SELECT *,'ENTRY AGE OVER 70 - L1PR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
		WHERE	([CRTABLE] = 'L1PR' AND [ANBCCD] > 70) -- NONE FOUND

	--- 3.3. PRUHARVEST LIFE PLAN
		--- 3.3.1 CHECKS FOR INVALID PREMIUM TERMS R2AR --
        INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB		
		SELECT *,'INVALID PREMIUM TERMS R2AR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] -- NONE FOUND
		WHERE	(CRTABLE = 'R2AR' AND [PRMTRM] NOT IN (5,10)) -- R2AR IS CODE FOR 5,10 PAY

		--- 3.3.2 CHECKS FOR POLICIES WITH ENTRY AGE > 50 YO R2AR --
		INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
		SELECT *,'ENTRY AGE OVER 70 - R2AR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] -- NONE FOUND
		WHERE ([CRTABLE] = 'R2AR' AND [ANBCCD] > 50)

	----- ADJUSTING DATA BASED ON PREVIOUSLY AGREED FINDINGS -----
	--- PRESERVE ORIGINAL DATA ---
/*
	SELECT * INTO [VALUATION].[DBO].[PROPTRDB_042021V2]
	FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]

	-- UPDATES ENTRY AGE BASED ON MANUAL CHECK FINDINGS FROM LFA --
	UPDATE [VALUATION].[DBO].[PROPTRDB_042021V2]
	SET [COLUMN 2] = 60
	WHERE [COLUMN 0] IN ('12963864',
						 '12990639',
						 '13299667') -- ADDED APR-21

	-- UPDATES BASED ON LFA --
	UPDATE [VALUATION].[DBO].[PROPTRDB_042021V2]
	 SET [COLUMN 5] = 5 -- 1 POLICY
	 WHERE [COLUMN 0] IN ('13155320')

	 UPDATE [VALUATION].[DBO].[PROPTRDB_042021V2]
	 SET [COLUMN 5] = 10 -- 1 POLICY
	 WHERE [COLUMN 0] IN ('13165963')

	-- CHECKS FOR POLICIES WITH ENTRY AGE > 60 YO --
	SELECT [COLUMN 0], [COLUMN 1], [COLUMN 2] FROM [VALUATION].[DBO].[PROPTRDB_042021V2]
	WHERE ([COLUMN 1] = 'T1QR' AND [COLUMN 2] > 60)

	-- CHECKS FOR INVALID PREMIUM TERMS --
	SELECT [COLUMN 0], [COLUMN 1], [COLUMN 5], [COLUMN 8], [COLUMN 15], [COLUMN 16] FROM [VALUATION].[DBO].[PROPTRDB_042021V2]
	WHERE	([COLUMN 1] = 'T1QR' AND [COLUMN 5] NOT IN (5,10,15)) -- T1QR IS CODE FOR 5,10,15 PAY
			OR
			([COLUMN 1] = 'T1PR' AND [COLUMN 5] <> 1)

*/

PRINT '8'

--- 4. CHECK FOR ANY INVALID HOISSDTE (ALREADY CAPTURED IN INVALID REPORT)
INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
SELECT *,'INVALID HOISSDT PROPTRDB'
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
WHERE [HOISSDTE] like '99999999%' OR [HOISSDTE] IS NULL -- NONE FOUND


INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDR
SELECT *,'INVALID HOISSDT PROPTRDR'
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP]
WHERE [HOISSDTE] like '99999999%' OR [HOISSDTE] IS NULL -- NONE FOUND


--- 5. CHECK FOR PPH+ PLAN (TBC)
INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
SELECT *,'CHECK PPH PLAN'
FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
WHERE [CRTABLE] IN ('H101','H111') AND [PRUSEHAT_SOLUTION_PLAN_TYPE] = '' -- NONE FOUND

--- 6. CHECK FOR WV FLAG (N/A)

--- 7. BASIC ENTRY AGE CHECK
INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB
SELECT *,'ENTRY AGE CHECK PROPTRDB ANBCCD' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]
WHERE CONVERT(FLOAT,[ANBCCD]) < 0 OR CONVERT(FLOAT,[ANBCCD]) > 70


INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDR
SELECT *,'ENTRY AGE CHECK PROPTRDR ANBCCD' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP]
WHERE CONVERT(FLOAT,[ANBCCD]) < 0 OR CONVERT(FLOAT,[ANBCCD]) > 70


--- 8. CHECKING IF THERE ARE NEW PRODUCTS -----
	--- 8.1. PROPTRDB
INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDB	
	SELECT *,'NEW PRODUCT PROPTRDB' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP] WHERE CRTABLE IN (
	SELECT A.* 
	FROM
		(SELECT DISTINCT [CRTABLE] AS [PROD CM] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP]) AS A
	LEFT JOIN
		(SELECT DISTINCT [CRTABLE] AS [PROD LM] FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_20181231) AS B -- Need TO Change table
	ON A.[PROD CM] = B.[PROD LM]
	WHERE B.[PROD LM] IS NULL -- NONE FOUND
)
	--- 8.2. PROPTRDR

INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_INVALID_PROPTRDR	
	SELECT *,'New Product PROPTRDR' FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP] WHERE CRTABLE IN (
	SELECT A.* 
	FROM
		(SELECT DISTINCT [CRTABLE] AS [PROD CM] FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP]) AS A
	LEFT JOIN
		(SELECT DISTINCT [CRTABLE] AS [PROD LM] FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDR_HIS) AS B -- Need To Change Table
	ON A.[PROD CM] = B.[PROD LM]
	WHERE B.[PROD LM] IS NULL -- NONE FOUND
)
PRINT '9'

--- 9. DCS READY INPUT
SELECT	G.[PRODUCT_CD]
		,G.[BENEFIT_CD]
		,G.[CHDRNUM]
		,G.[CRTABLE]
		,G.[ANBCCD]
		,G.[SEX]
		,G.[MORTCLS]
		,G.[PRMTRM]
		,G.[RSKTRM]
		,G.[PREMI]
		,G.[BILLFREQ]
		,G.[SUMINS]
		,G.[TOTBON]
		,G.[PTDATE]
		,G.[HOISSDTE]
		,G.[CRRCD]
		,G.[RCESDTE]
		,G.[CNTCURR]
		,G.[STATCODE]
		,G.[CURRFROM]
		,G.[ZLINSTPREM]
		,G.[BPAYTY]
		,G.[BPAYNY]
		,G.[SLSCNL]
		,G.[BILLCHNL]
		,G.[ZPDFSURR]
		,G.[CLTPHONE01]
		,G.[CLTPHONE02]
		,G.[LIFCNUM]
		,G.[AGNTNUM]
		,G.[DTEAPP]
		,G.[DTETRM]
		,G.[TSALESUNT]
		,G.[REPORTAG]
		,G.[COLUMN_NULL1]
		,G.[COLUMN_ZERO1]
		,G.[FUND]
		,G.[COLUMN_NULL2]
		,G.[CLTADDR04]
		,G.[CLTADDR05]
		,G.[COLUMN_ZERO2]
		,G.[CLTDOB]
		,G.[MEDFLG]
		,G.[PLAN_TRAD]
		,G.[MODE]
		,G.[PRUBP]
		,G.[CHANNEL]
		,G.[SRCEBUS]
		,G.[REASONCD]
		,G.[LONGDESC]
		,CASE WHEN G.[REGION_INDICATOR] = 2 THEN 0 ELSE G.[REGION_INDICATOR] END AS [COLUMN 48]
		,G.[PRUSEHAT_SOLUTION_PLAN_TYPE]
		,G.[SUBSTANDARD_LOADING]
		,G.[IFRS_ONEROUS_GRP]
		,G.[IFRS_CY_GRP]
		,G.[IFRS_PORT_GRP]
		,G.[IFRS_MEASURE_MODEL]
		,G.[BASIC_ENTRY_YEAR]
		,G.[BASIC_ENTRY_MONTH]
		,G.[IFRS_CB_TERM_M]
		,G.[MTHS_TO_SALE]
		,G.[IFRS_ICG_ID]
		,G.[IFRS_ICG_ID_PROPHET]
		,G.[SUB_GROUP_ID]
		,G.[ENTITY_ID]
		,G.[CB_START_DT]
		,G.[CB_END_DT]
		,G.[REL_INSURANCE_CONTRACT_GROUP_ID],
		@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID  AS JOB_RUN_ID,
		@BATCHDATESTR AS BATCHDATE,
		@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED
FROM
(
--TRADITIONAL BASIC
(SELECT A.[PRODUCT_CD]
		,A.[BENEFIT_CD]
		,A.[CHDRNUM]
		,A.[CRTABLE]
		,A.[ANBCCD]
		,A.[SEX]
		,CASE WHEN A.[CRTABLE] = 'L1PR' 
			THEN PRUWARISAN.[SMOKER_STATUS]
			ELSE A.[MORTCLS] END AS [MORTCLS]
		,A.[PRMTRM]
		,A.[RSKTRM]
      ,A.[PREMI]
      ,A.[BILLFREQ]
      ,A.[SUMINS]
      ,A.[TOTBON]
      ,A.[PTDATE]
      ,A.[HOISSDTE]
      ,A.[CRRCD]
      ,A.[RCESDTE]
      ,A.[CNTCURR]
      ,A.[STATCODE]
      ,A.[CURRFROM]
      ,A.[ZLINSTPREM]
      ,A.[BPAYTY]
      ,A.[BPAYNY]
      ,A.[SLSCNL]
      ,A.[BILLCHNL]
      ,A.[ZPDFSURR]
	--,A.[LSURNAME]
      ,A.[CLTPHONE01]
      ,A.[CLTPHONE02]
      ,A.[LIFCNUM]
      ,A.[AGNTNUM]
	--,A.[LSURNAME01]
      ,A.[DTEAPP]
      ,A.[DTETRM]
      ,A.[TSALESUNT]
      ,A.[REPORTAG]
	  ,NULL AS COLUMN_NULL1
	  ,'0' AS COLUMN_ZERO1
      ,CASE WHEN A.[CRTABLE] = B.[CRTABLE] THEN B.[PCA_CLASS] ELSE A.[FUND] END AS [FUND]
	  ,NULL AS COLUMN_NULL2
      ,A.[CLTADDR04]
      ,A.[CLTADDR05]
	  ,'0' AS COLUMN_ZERO2
      ,A.[CLTDOB]
      ,A.[MEDFLG]
      ,C.[PLAN_TRAD]
	  ,C.[MODE]
	  ,C.[PRUBP]
	  ,C.[CHANNEL]
	  ,A.[SRCEBUS]
      ,A.[REASONCD]
      ,A.[LONGDESC]
	  --,A.[COWNNUM]
	  ,A.[REGION_INDICATOR]
	  --,A.[SIO_GIO_FLAG]
	  ,A.[PRUSEHAT_SOLUTION_PLAN_TYPE]
	  ,CONVERT(VARCHAR,A.SUBSTANDARD_LOADING) AS SUBSTANDARD_LOADING
	  ,A.[IFRS_ONEROUS_GRP]
      ,A.[IFRS_CY_GRP]
      ,A.[IFRS_PORT_GRP]
      ,A.[IFRS_MEASURE_MODEL]
      ,A.[BASIC_ENTRY_YEAR]
      ,A.[BASIC_ENTRY_MONTH]
      ,A.[IFRS_CB_TERM_M]
      ,A.[MTHS_TO_SALE]
      ,A.[IFRS_ICG_ID]
      ,A.[IFRS_ICG_ID_PROPHET]
      ,A.[SUB_GROUP_ID]
      ,A.[ENTITY_ID]
      ,A.[CB_START_DT]
      ,A.[CB_END_DT]
      ,A.[REL_INSURANCE_CONTRACT_GROUP_ID]
	  FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_TEMP_V2 AS A
  LEFT JOIN STAG_ID.STAG_PCA_CLASS_TRAD AS B ON A.[CRTABLE] = B.[CRTABLE]
  LEFT JOIN STAG_ID.STAG_PRUWARISAN_SMOKING AS PRUWARISAN ON A.[CHDRNUM] = PRUWARISAN.[POLNUM]
  JOIN STAG_ID.STAG_ALL_PLAN_TRADITIONAL_NEW AS C ON A.[CRTABLE] = C.[CRTABLE]
  )
  UNION ALL
  --TRADITIONAL RIDER
  (SELECT D.[PRODUCT_CD]
	  ,D.[BENEFIT_CD]
	  ,D.[CHDRNUM]
      ,D.[CRTABLE]
      ,D.[ANBCCD]
      ,D.[SEX]
      ,D.[MORTCLS]
      ,D.[PRMTRM01]
      ,D.[RSKTRM01]
      ,D.[PREMI01]
      ,D.[BILLFREQ]
      ,D.[SUMINS]
      ,D.[TOTBNS]
      ,D.[PTDATE]
      ,D.[HOISSDTE]
      ,D.[CRRCD]
      ,D.[RCESDTE]
      ,D.[CNTCURR]
      ,D.[STATCODE]
      ,D.[CURRFROM]
      ,D.[ZLINSTPREM]
      ,D.[CURBON]
      ,D.[LASTBON]
      ,D.[SLSCNL]
      ,D.[BILLCHNL]
      ,D.[WDRN]
	  --,D.[[LSURNAME]
      ,D.[CLTPHONE01]
      ,D.[CLTPHONE02]
      ,D.[LIFCNUM]
      ,D.[AGNTNUM]
	  --,D.[LSURNAME01]
	  ,D.[DTEAPP]
      ,D.[DTETRM]
      ,D.[TSALESUNT]
      ,D.[REPORTAG]
	  --,D.[LSURNAME02]
	  --,D.[REGION]
	  ,CASE WHEN D.[PSTATCODE] = 'WV' THEN '57 00 56 00' ELSE D.[PSTATCODE] END AS COLUMN_36
      ,D.[CLAIMSAR]
      ,CASE WHEN D.[CRTABLE] = E.[CRTABLE] THEN E.[PCA_CLASS] ELSE D.[FUND] END AS COLUMN_38
      ,D.[FPAYDATE]
      ,D.[CLTADDR04]
      ,D.[CLTADDR05]
      ,D.[PYMT]
      ,'19000101' AS COLUMN_43
	  ,'N' AS COLUMN_44
	  ,F.[PLAN_TRAD]
	  ,F.[MODE]
	  ,F.[PRUBP]
	  ,F.[CHANNEL]
	  ,D.[SRCEBUS]
      ,D.[REASONCD]
      ,D.[LONGDESC]
	  ,H.[REGION_INDICATOR]
	  --,'' AS [COLUMN 46]
	  ,'' AS [PRUSEHAT_SOLUTION_PLAN_TYPE]
	  ,'' AS [SUBSTANDARD_LOADING]
	  ,D.[IFRS_ONEROUS_GRP]
	  ,D.[IFRS_CY_GRP]
	  ,D.[IFRS_PORT_GRP]
	  ,D.[IFRS_MEASURE_MODEL]
	  ,D.[BASIC_ENTRY_YEAR]
	  ,D.[BASIC_ENTRY_MONTH]
	  ,D.[IFRS_CB_TERM_M]
	  ,D.[MTHS_TO_SALE]
	  ,D.[IFRS_ICG_ID]
	  ,D.[IFRS_ICG_ID_PROPHET]
	  ,D.[SUB_GROUP_ID]
	  ,D.[ENTITY_ID]
	  ,D.[CB_START_DT]
	  ,D.[CB_END_DT]
	  ,D.[REL_INSURANCE_CONTRACT_GROUP_ID]
  FROM [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDR_TEMP_2] AS D -- UPDATE MONTHLY
  LEFT JOIN STAG_ID.STAG_PCA_CLASS_TRAD	AS E ON D.[CRTABLE] = E.[CRTABLE] -- UPDATE WHEN THERE ARE NEW PRODUCTS
  LEFT JOIN [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_TEMP_V2] AS H ON D.[CHDRNUM] = H.[CHDRNUM] -- UPDATE MONTHLY
  JOIN STAG_ID.STAG_ALL_PLAN_TRADITIONAL_NEW AS F ON D.[CRTABLE] = F.[CRTABLE] -- UPDATE WHEN THERE ARE NEW PRODUCTS
  )
  ) AS G


PRINT '10'
/*
--- 9. CHECK SMOKING STATUS
SELECT DISTINCT(MORTCLS) FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED
WHERE [CRTABLE] = 'L1PR'
*/

--------------------------------------------------------------------
--- BACKUP MPFILES TABLE TO HISTORY TABLE
--------------------------------------------------------------------
-- insert log process
SET @V_SEQNO 	= @V_SEQNO + 1;
SET @V_START 	= convert(datetime,getDATE());
SET @V_DESCRIPTION	= 'BACKUP FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED TO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS: ' + convert(varchar,@V_START,121);
PRINT @V_DESCRIPTION;

DELETE FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) < EOMONTH(DATEADD(MONTH,-12,CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))))
OR CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
SELECT A.*
FROM (
	SELECT PRODUCT_CD,BENEFIT_CD,CHDRNUM,CRTABLE,ANBCCD,SEX,MORTCLS,PRMTRM,RSKTRM,PREMI,BILLFREQ,SUMINS,TOTBON,PTDATE,HOISSDTE,CRRCD,RCESDTE,CNTCURR,STATCODE,CURRFROM,ZLINSTPREM,BPAYTY,BPAYNY,SLSCNL,BILLCHNL,ZPDFSURR,CLTPHONE01,CLTPHONE02,LIFCNUM,AGNTNUM,DTEAPP,DTETRM,TSALESUNT,REPORTAG,COLUMN_NULL1,COLUMN_ZERO1,FUND,COLUMN_NULL2,CLTADDR04,CLTADDR05,COLUMN_ZERO2,CLTDOB,MEDFLG,PLAN_TRAD,MODE,PRUBP,CHANNEL,SRCEBUS,REASONCD,LONGDESC,[COLUMN 48],PRUSEHAT_SOLUTION_PLAN_TYPE,SUBSTANDARD_LOADING,IFRS_ONEROUS_GRP,IFRS_CY_GRP,IFRS_PORT_GRP,IFRS_MEASURE_MODEL,BASIC_ENTRY_YEAR,BASIC_ENTRY_MONTH,IFRS_CB_TERM_M,MTHS_TO_SALE,IFRS_ICG_ID,IFRS_ICG_ID_PROPHET,SUB_GROUP_ID,ENTITY_ID,CB_START_DT,CB_END_DT,REL_INSURANCE_CONTRACT_GROUP_ID, EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE,BATCH_MASTER_ID,BATCH_RUN_ID,JOB_MASTER_ID,JOB_RUN_ID,BATCHDATE,ETL_PROCESS_DATE_TIME
	FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED
)A;

END;  


