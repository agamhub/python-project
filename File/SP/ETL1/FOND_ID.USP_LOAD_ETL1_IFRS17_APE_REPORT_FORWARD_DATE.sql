CREATE PROC [FOND_ID].[USP_LOAD_ETL1_IFRS17_APE_REPORT_FORWARD_DATE] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@P_PRD_ID [integer] AS
BEGIN
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_DURATION		datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = '[USP_LOAD_ETL1_IFRS17_APE_REPORT_FORWARD_DATE]';
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @V_TGL_SUBKURS VARCHAR(20) = 0;
	DECLARE @V_FLAG integer = 0;
	
	--- ABC Framework parameter
	DECLARE @BATCH_MASTER_ID    VARCHAR(20) = 0;
	DECLARE @BATCH_RUN_ID    VARCHAR(20)  = 0;
	DECLARE @JOB_MASTER_ID    VARCHAR(20)  = 0;
	DECLARE @JOB_RUN_ID    VARCHAR(20)  = 0;
	DECLARE @GMT_START_DTTM    VARCHAR(20) = getdate();
	
	BEGIN TRY
		---------------------------------------------------
		--- Setup ABC Framework Parameters
		---------------------------------------------------
		EXEC STAG_ID.USP_GetRunIdReturn
		@JobName = @JOBNAMESTR
		,@BATCH_MASTER_ID  = @BATCH_MASTER_ID OUTPUT
		,@BATCH_RUN_ID   = @BATCH_RUN_ID OUTPUT
		,@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT
		,@JOB_RUN_ID  = @JOB_RUN_ID OUTPUT
		,@GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
		------END GET RUN ID DETAIL FROM ABC------
		
		
		SET @V_START_DATE	= convert(date, cast(@P_PRD_ID as varchar(8))); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());
		
		SET @V_TGL_SUBKURS = FORMAT(convert(date, cast(@P_PRD_ID as varchar(8))),'yyyy-MM-dd');

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		
		IF OBJECT_ID('tempdb.dbo.#TMP_IFRS17_APE_REPORT_FORWARD_DATE', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#TMP_IFRS17_APE_REPORT_FORWARD_DATE;

		
		TRUNCATE TABLE FOND_ID.IFRS17_APE_REPORT_FORWARD_DATE;
		TRUNCATE TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_FORWARD_DATE;
		TRUNCATE TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL_FORWARD_DATE;
		TRUNCATE TABLE FOND_ID.FOND_IFRS17_MPFILES_RESVPIA_FORWARD_DATE;
		TRUNCATE TABLE FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB_FORWARD_DATE;
		
		---------------------------------------------------
		--- Create Temporary Table for APE_REPORT_FORWARD_DATE
		---------------------------------------------------
		-- insert log process
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'CREATE TABLE APE_REPORT_FORWARD_DATE : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
	
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		
		CREATE TABLE tempdb.dbo.#TMP_IFRS17_APE_REPORT_FORWARD_DATE
		WITH
		(
		  DISTRIBUTION = HASH(SUBSYSTEM),
		  HEAP
		)
		AS
		SELECT a.SUBSYSTEM, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN a.NOP
			WHEN a.SUBSYSTEM IS NULL THEN b.NOP
			ELSE a.NOP + b.NOP END AS NOP,
			CASE WHEN a.SUBSYSTEM IS NULL THEN 0
			ELSE a.APE_IDR END AS APE_IDR, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN 0
			ELSE b.APE_USD END AS APE_USD 
		FROM (
			SELECT 'PROPHETU' AS SUBSYSTEM, COUNT(CHDRNUM) as NOP, 
			SUM(API + (BILLFREQ * PRUSVR)) AS APE_IDR
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'IDR'
			GROUP BY CNTCURR
		)a FULL OUTER JOIN (
			SELECT 'PROPHETU' AS SUBSYSTEM, COUNT(CHDRNUM) AS NOP, 
			SUM(API + (BILLFREQ * PRUSVR)) as APE_USD 
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'USD'
			GROUP BY CNTCURR
		)b ON a.SUBSYSTEM = b.SUBSYSTEM

		UNION ALL

		SELECT a.SUBSYSTEM, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN a.NOP
			WHEN a.SUBSYSTEM IS NULL THEN b.NOP
			ELSE a.NOP + b.NOP END AS NOP,
			CASE WHEN a.SUBSYSTEM IS NULL THEN 0
			ELSE a.APE_IDR END AS APE_IDR, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN 0
			ELSE b.APE_USD END AS APE_USD
		FROM (
			SELECT 'PROPHETU_PUL' AS SUBSYSTEM, COUNT(CHDRNUM) as NOP, 
			SUM(API) AS APE_IDR
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'IDR'
			GROUP BY CNTCURR
		)a FULL OUTER JOIN (
			SELECT 'PROPHETU_PUL' AS SUBSYSTEM, COUNT(CHDRNUM) AS NOP, 
			SUM(API) as APE_USD 
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'USD'
			GROUP BY CNTCURR
		)b ON a.SUBSYSTEM = b.SUBSYSTEM

		UNION ALL

		SELECT a.SUBSYSTEM, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN a.NOP
			WHEN a.SUBSYSTEM IS NULL THEN b.NOP
			ELSE a.NOP + b.NOP END AS NOP,
			CASE WHEN a.SUBSYSTEM IS NULL THEN 0
			ELSE a.APE_IDR END AS APE_IDR, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN 0
			ELSE b.APE_USD END AS APE_USD
		FROM (
			SELECT 'RESVPIA' AS SUBSYSTEM, COUNT(CHDRNUM) as NOP, 
			SUM((INSTOT * 0.1)) AS APE_IDR
			FROM FOND_ID.FOND_IFRS17_MPFILES_RESVPIA
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'IDR'
			GROUP BY CNTCURR
		)a FULL OUTER JOIN (
			SELECT 'RESVPIA' AS SUBSYSTEM, COUNT(CHDRNUM) AS NOP, 
			SUM((INSTOT * 0.1))  as APE_USD 
			FROM FOND_ID.FOND_IFRS17_MPFILES_RESVPIA
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF' AND CNTCURR = 'USD'
			GROUP BY CNTCURR
		)b ON a.SUBSYSTEM = b.SUBSYSTEM

		UNION ALL

		SELECT a.SUBSYSTEM, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN a.NOP
			WHEN a.SUBSYSTEM IS NULL THEN b.NOP
			ELSE a.NOP + b.NOP END AS NOP,
			CASE WHEN a.SUBSYSTEM IS NULL THEN 0
			ELSE a.APE_IDR END AS APE_IDR, 
			CASE WHEN b.SUBSYSTEM IS NULL THEN 0
			ELSE b.APE_USD END AS APE_USD
		FROM (
			SELECT 'PROPTRDB' AS SUBSYSTEM, COUNT(CHDRNUM) as NOP, 
			SUM(CASE WHEN BILLFREQ = '00'
			THEN (PREMI * 0.1) 
			ELSE PREMI END) AS APE_IDR
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB
			WHERE HOISSDTE < CRRCD AND (STATCODE = 'IF' OR STATCODE = 'PU') AND CNTCURR = 'IDR'
			GROUP BY CNTCURR
		)a FULL OUTER JOIN (
			SELECT 'PROPTRDB' AS SUBSYSTEM, COUNT(CHDRNUM) AS NOP,
			SUM(CASE WHEN BILLFREQ = '00'
			THEN (PREMI * 0.1) 
			ELSE PREMI END) AS APE_USD
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB
			WHERE HOISSDTE < CRRCD AND (STATCODE = 'IF' OR STATCODE = 'PU') AND CNTCURR = 'USD'
			GROUP BY CNTCURR
		)b ON a.SUBSYSTEM = b.SUBSYSTEM
		;
		
		---------------------------------------------------
		---INSERT INTO APE_REPORT_FORWARD_DATE
		---------------------------------------------------
		-- insert log process
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'CREATE TABLE IFRS17_APE_REPORT_FORWARD_DATE : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
	
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

		INSERT INTO FOND_ID.IFRS17_APE_REPORT_FORWARD_DATE
		SELECT 
		   a.*, 
		   APE_IDR + (APE_USD * COALESCE (AVG_SUBKURS,0)) AS TOTAL_APE, 
		   COALESCE (AVG_SUBKURS,0) AS FX_RATE,
		   @BATCH_MASTER_ID AS BATCH_MASTER_ID,
		   @BATCH_RUN_ID AS BATCH_RUN_ID,
		   @JOB_MASTER_ID AS JOB_MASTER_ID,
		   @JOB_RUN_ID AS JOB_RUN_ID,
		   @BATCHDATESTR AS BATCHDATE,
		   @GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
		FROM tempdb.dbo.#TMP_IFRS17_APE_REPORT_FORWARD_DATE a, STAG_ID.STAG_WS_BIRATE_KURSDAILY_VW b
		WHERE CONVERT(date, TGL_SUBKURS) = @V_TGL_SUBKURS --Date Parameter (exp : '2021-01-31') 
		AND KURSTYPE = 'LOKAL' AND MTS_SUBKURS = 'USD'
		;
		
		
		---------------------------------------------------
		---INSERT INTO MPFILES_FOR_FORWARD_DATE
		---------------------------------------------------
		-- insert log process
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'CREATE TABLE MPFILES_FOR_FORWARD_DATE : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
	
		
		SELECT 
			@V_FLAG = (CASE 
				WHEN SUM(APE_IDR + (APE_USD * FX_RATE)) > 9733298667 THEN 1
				ELSE 0 
			END )
		FROM FOND_ID.IFRS17_APE_REPORT_FORWARD_DATE
		;	
		
		IF @V_FLAG = 1	
		BEGIN
			INSERT INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_FORWARD_DATE]
			SELECT 
				SLSCNL
				, CHDRNUM
				, CNTCURR
				, STATCODE
				, CNTTYPE
				, ANBCCD
				, SEX
				, MORTCLS
				, API
				, BILLFREQ
				, CRRCD
				, PRUSVR
				, SINGP
				, SUMINS
				, CRTABLECC
				, ANBCC
				, RCDCC
				, SUMINCC
				, RCESAGECC
				, CRTABLEAD
				, ANBAD
				, RCDAD
				, MORTCLSAD
				, SUMINAD
				, RCESAGEAD
				, CRTABLEADD
				, ANBADD
				, RCDADD
				, MORTCLSADD
				, SUMINADD
				, RCESAGEADD
				, CRTABLEHB
				, ANBHB
				, RCDHB
				, SUMINHB
				, RCESAGEHB
				, ANBWVR
				, CRTABLEWVR
				, RCDWVR
				, SUMINWVR
				, RCESAGEWVR
				, CRTABLESPO
				, ANBSPO
				, SEXTWO
				, RCDSPO
				, SUMINSPO
				, RCESDTE
				, HOISSDTE
				, TTLFUND
				, PRCF
				, PREF
				, PRFF
				, PRMF
				, PDMF
				, CHGDTE
				, PYRTRM
				, CURYRTUP
				, TOPUPLAST
				, PCESTRM
				, ANBCCP
				, RCDCCP
				, RCESAGECCP
				, SUMINCCP
				, CRTABLECCP
				, ALLOCIND
				, BILCHNL
				, WDRAMNT
				, CLNTNAME
				, LIFCNUM
				, AGNTNUM
				, UNITNUM
				, CRTABLHS
				, ANBHS
				, RCDHS
				, SUMINHS
				, RCESAGEHS
				, CRTABLLT
				, ANBLT
				, RCDLT
				, SUMINLT
				, RCESAGELT
				, CRTABL3LF
				, ANB3LF
				, SEX3LF
				, RCD3LF
				, SUMIN3LF
				, RCESDT3LF
				, PAAFLAG
				, PTDATE
				, WAIVERSTAT
				, CLAIMSAR
				, FPAYDATE
				, PRMP
				, TPDCLAIM
				, ADDR04CITY
				, ADDR05PROV
				, CRTABLECI
				, ANBCI
				, RCDCI
				, SUMINCI
				, RCESDTECI
				, CRTABLEMCC
				, ANBMCC
				, RCDMCC
				, SUMINMCC
				, RCESDTEMCC
				, PRODCDE
				, ANBESCC
				, RCDESCC
				, SUMINESCC
				, RCESDTEESCC
				, CLTBDAY
				, MEDPCLAS
				, ADMINCHG
				, COIDEBT
				, TOTCHGHS
				, TOTTPACOST
				, CODE
				, ZLONGDESC
				, RCESAGESO
				, RCESAGEPW
				, RCESAGEPWX
				, RCESAGECI
				, RCESAGEMC
				, RCESAGEEC
				, LSTTOPDATE
				, COWNNUM
				, CRTABLEJCC
				, ANBJCC
				, RCDJCC
				, SUMINJCC
				, RCESAGEJCC
				, SUMINPMC
				, PRGC
				, PDGC
				, PRUSTATCDE
				, CRTABLESAV
				, AGNTDLCODE
				, UMCODE
				, PREP
				, CLMTYP
				, PRIEF
				, EDUPAR1C
				, EDUP1SUM
				, EDUPAR2C
				, EDUP2SUM
				, CRTABL3LT
				, ANB3LT
				, RCD3LT
				, SUMIN3LT
				, RCESAGE3LT
				, NLGFLAG
				, REGIONFLG
				, PRVEF
				, PRAEF
				, ANBCCB
				, RCDCCB
				, RCESAGECCB
				, SUMINCCB
				, CRTABLECCB
				, PDIEF
				, MINIIND
				, PDGV
				, PDGM
				, CODE_CHC
				, AGE_ENTRY_CHC
				, CRRCD_CHC
				, PLANTYPE_CHC
				, AGE_END_CHC
				, CODE_DISABLE
				, AGE_ENTRY_DISABLE
				, CRRCD_DISABLE
				, SUMINS_DISABLE
				, AGE_END_DISABLE
				, PRGV
				, PRGM
				, TOTAL_FUND_BAV
				, PRCF_BAV
				, PREF_BAV
				, PRFF_BAV
				, PRGC_BAV
				, PRMF_BAV
				, PRMP_BAV
				, PRIE_BAV
				, PRAE_BAV
				, PRVE_BAV
				, PRGM_BAV
				, PRGV_BAV
				, PDFF_BAV
				, PDGC_BAV
				, PDGM_BAV
				, PDGV_BAV
				, PLEF_BAV
				, TOTAL_FUND_TPAV
				, PRCF_TPAV
				, PREF_TPAV
				, PRFF_TPAV
				, PRGC_TPAV
				, PRMF_TPAV
				, PRMP_TPAV
				, PRIE_TPAV
				, PRAE_TPAV
				, PRVE_TPAV
				, PRGM_TPAV
				, PRGV_TPAV
				, PDFF_TPAV
				, PDGC_TPAV
				, PDGM_TPAV
				, PDGV_TPAV
				, PLEF_TPAV
				, TOTAL_UNIT_ACT
				, PRCF_ACT
				, PREF_ACT
				, PRFF_ACT
				, PRGC_ACT
				, PRMF_ACT
				, PRMP_ACT
				, PRIE_ACT
				, PRAE_ACT
				, PRVE_ACT
				, PRGM_ACT
				, PRGV_ACT
				, PDFF_ACT
				, PDGC_ACT
				, PDGM_ACT
				, PDGV_ACT
				, PLEF_ACT
				, TOTAL_UNIT_PRV
				, PRCF_PRV
				, PREF_PRV
				, PRFF_PRV
				, PRGC_PRV
				, PRMF_PRV
				, PRMP_PRV
				, PRIE_PRV
				, PRAE_PRV
				, PRVE_PRV
				, PRGM_PRV
				, PRGV_PRV
				, PDFF_PRV
				, PDGC_PRV
				, PDGM_PRV
				, PDGV_PRV
				, PLEF_PRV
				, BASIC_PREMIUM_PREV
				, STFLAG
				, SIOFLAG
				, BILLCHNL_PRV
				, FUPCODE_FOR_PBC
				, REQUEST_DATE_FOR_PBC
				, PRNV
				, PPHPLUS_PLAN_TYPE
				, PDNV
				, PPHPLUS_CAMPAIGN_FLAG
				, CODE_PRUTOP_CCB61
				, AGE_ENTRY_PRUTOP_CCB61
				, CRRCD_PRUTOP_CCB61
				, CODE_PRUTOP_CCB34
				, AGE_ENTRY_PRUTOP_CCB34
				, CRRCD_PRUTOP_CCB34
				, CODE_PRUTOP_ESCC
				, AGE_ENTRY_PRUTOP_ESCC
				, CRRCD_PRUTOP_ESCC
				, IFRS_ONEROUS_GRP
				, IFRS_CY_GRP
				, IFRS_PORT_GRP
				, IFRS_MEASURE
				, BASIC_ENTRY_YEAR
				, BASIC_ENTRY_MONTH
				, IFRS_CB_TERM_M
				, MTHS_TO_SALE
				, INSURANCE_CONTRACT_GROUP_ID
				, ICG_ID_PROPHET
				, SUB_GROUP_ID
				, ENTITY_ID
				, CB_START_DATE
				, CB_END_DATE
				, REL_INSURANCE_CONTRACT_GROUP_ID
				,@BATCH_MASTER_ID AS BATCH_MASTER_ID
  			    ,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,@BATCHDATESTR AS BATCHDATE
				,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF';
			
			INSERT INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPHETU_PUL_FORWARD_DATE]
			SELECT 
				 [SLSCNL]
				,[CHDRNUM]
				,[CNTCURR]
				,[STATCODE]
				,[CNTTYPE]
				,[ANBCCD]
				,[SEX]
				,[MORTCLS]
				,[API]
				,[BILLFREQ]
				,[CRRCD]
				,[SUMINS]
				,[RCESAGE]
				,[CRTABLECC]
				,[ANBCC]
				,[RCDCC]
				,[PREMICC]
				,[SUMINCC]
				,[RCESAGECC]
				,[CRTABLEAD]
				,[ANBAD]
				,[RCDAD]
				,[MORTCLSAD]
				,[PREMIAD]
				,[SUMINAD]
				,[RCESAGEAD]
				,[CRTABLEADD]
				,[ANBADD]
				,[RCDADD]
				,[MORTCLSADD]
				,[PREMIADD]
				,[SUMINADD]
				,[RCESAGEADD]
				,[CRTABLEHB]
				,[ANBHB]
				,[RCDHB]
				,[PREMIHB]
				,[SUMINHB]
				,[RCESAGEHB]
				,[ANBWVR]
				,[CRTABLEWVR]
				,[RCDWVR]
				,[PREMIWVR]
				,[SUMINWVR]
				,[RCESAGEWVR]
				,[CRTABLESPO]
				,[ANBSPO]
				,[SEXTWO]
				,[RCDSPO]
				,[PREMISPO]
				,[SUMINSPO]
				,[RCESDTE]
				,[HOISSDTE]
				,[CHGDTE]
				,[PYRTRM]
				,[PCESTRM]
				,[ANBCCP]
				,[RCDCCP]
				,[RCESAGECCP]
				,[SUMINCCP]
				,[CRTABLECCP]
				,[BILCHNL]
				,[WDRAMNT]
				,[CLNTNAME]
				,[CLTPHONE01]
				,[CLTPHONE02]
				,[LIFCNUM]
				,[AGNTNUM]
				,[AGTNAME]
				,[DTEAPP]
				,[DTETRM]
				,[TSALESUNT]
				,[UNITNUM]
				,[UNITNAME]
				,[REGION]
				,[CRTABLHS]
				,[ANBHS]
				,[RCDHS]
				,[PREMIHS]
				,[SUMINHS]
				,[RCESAGEHS]
				,[CRTABLLT]
				,[ANBLT]
				,[RCDLT]
				,[PREMILT]
				,[SUMINLT]
				,[RCESAGELT]
				,[CRTABL3LF]
				,[ANB3LF]
				,[SEX3LF]
				,[RCD3LF]
				,[PREMI3LF]
				,[SUMIN3LF]
				,[RCESDT3LF]
				,[PTDATE]
				,[WAIVERSTAT]
				,[CLAIMSAR]
				,[FPAYDATE]
				,[PRODCAT]
				,[CCCLAIM]
				,[CCPCLAIM]
				,[ADDCLAIM]
				,[TPDCLAIM]
				,[ADDR04CITY]
				,[ADDR05PROV]
				,[CRTABLECI]
				,[ANBCI]
				,[RCDCI]
				,[SUMINCI]
				,[RCESDTECI]
				,[CRTABLEMCC]
				,[ANBMCC]
				,[RCDMCC]
				,[SUMINMCC]
				,[RCESDTEMCC]
				,[PRODCDE]
				,[ANBESCC]
				,[RCDESCC]
				,[SUMINESCC]
				,[RCESDTESCC]
				,[BILLCHNLCI]
				,[XTRAMORTML]
				,[XTRAMORTSA]
				,[XTRAMORTAD]
				,[XTRAMACDSA]
				,[XTRAMCCML]
				,[XTRAMCCSA]
				,[XTRAMCCMLS]
				,[XTRAMCCSAS]
				,[XTRAMCCMLT]
				,[XTRAMCCSAT]
				,[CLTBDAY]
				,[MEDPCLAS]
				,[ZCURPRMBAL]
				,[ADMINCHG]
				,[COIDEBT]
				,[ZRTUPFEE]
				,[CODE]
				,[ZLONGDESC]
				,[RCESAGESO]
				,[RCESAGEPW]
				,[RCESAGEPWX]
				,[RCESAGECI]
				,[RCESAGEMC]
				,[RCESAGEEC]
				,[CRTABLEJCC]
				,[ANBJCC]
				,[RCDJCC]
				,[SUMINJCC]
				,[RCESAGEJCC]
				,[COWNNUM]
				,[IFRS_ONEROUS_GRP]
				,[IFRS_CY_GRP]
				,[IFRS_PORT_GRP]
				,[IFRS_MEASURE]
				,[BASIC_ENTRY_YEAR]
				,[BASIC_ENTRY_MONTH]
				,[IFRS_CB_TERM_M]
				,[MTHS_TO_SALE]
				,[INSURANCE_CONTRACT_GROUP_ID]
				,[ICG_ID_PROPHET]
				,[SUB_GROUP_ID]
				,[ENTITY_ID]
				,[CB_START_DATE]
				,[CB_END_DATE]
				,[REL_INSURANCE_CONTRACT_GROUP_ID]
				,@BATCH_MASTER_ID AS BATCH_MASTER_ID
  			    ,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,@BATCHDATESTR AS BATCHDATE
				,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPHETU_PUL
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF';
				
			INSERT INTO [FOND_ID].[FOND_IFRS17_MPFILES_RESVPIA_FORWARD_DATE]
			SELECT 
				[CHDRNUM]
				,[CRTABLE]
				,[ANBCCD]
				,[SEX]
				,[PCESSTRM]
				,[INSTOT]
				,[SUMINS]
				,[MORTCLS]
				,[HOISSDTE]
				,[CRRCD]
				,[TOPUPAMNT]
				,[WDRAMNT]
				,[TTLFUND]
				,[PRCF]
				,[PREF]
				,[PRFF]
				,[PRMF]
				,[PDMF]
				,[STATCODE]
				,[SLSCNL]
				,[CHGDTE]
				,[CURYRTUP]
				,[TOPUPLAST]
				,[BILCHNL]
				,[CLNTNAME]
				,[CLTPHONE01]
				,[CLTPHONE02]
				,[LIFCNUM]
				,[AGNTNUM]
				,[AGTNAME]
				,[DTEAPP]
				,[DTETRM]
				,[TSALESUNT]
				,[UNITNUM]
				,[UNITNAME]
				,[REGION]
				,[PRMP]
				,[PRODCAT]
				,[TPDCLAIM]
				,[ADDR04CITY]
				,[ADDR05PROV]
				,[SPEF]
				,[SPMF]
				,[SPFF]
				,[SPCF]
				,[SPMP]
				,[SPDF]
				,[SPTTLAMNT]
				,[TOPUPEF]
				,[TOPUPMF]
				,[TOPUPFF]
				,[TOPUPCF]
				,[TOPUPMP]
				,[TOPUPDF]
				,[TTTLTOPUP]
				,[WITHEF]
				,[WITHMF]
				,[WITHFF]
				,[WITHCF]
				,[WITHMP]
				,[WITHDF]
				,[TTLWITHAMT]
				,[LOADINGEXT]
				,[CLTDOB]
				,[MEDPRVIND]
				,[CNTCURR]
				,[ZZSRCE]
				,[UALPCTA]
				,[UALPCTB]
				,[UALPCTC]
				,[UALPCTD]
				,[UALPCTE]
				,[UALPCTF]
				,[CODE]
				,[ZLONGDESC]
				,[ACTVALUE]
				,[SURRDATE]
				,[LSTWDWDATE]
				,[LSTTOPDATE]
				,[PRGC]
				,[PDGC]
				,[SPRGC]
				,[SPDGC]
				,[TOPUPRGC]
				,[TOPUPGDC]
				,[WITHRGC]
				,[WITHDGC]
				,[UALPCTG]
				,[UALPCTH]
				,[PREP]
				,[SPEP]
				,[TOPUPEP]
				,[WITHEP]
				,[UALPCTI]
				,[PRIEF]
				,[SPRIEF]
				,[TUPRIEF]
				,[WDPRIEF]
				,[PRIEFPCT]
				,[REGIONFLG]
				,[PRVEF]
				,[SPRVEF]
				,[TUPRVEF]
				,[WDPRVEF]
				,[PRVEFPCT]
				,[PRAEF]
				,[SPRAEF]
				,[TUPRAEF]
				,[WDPRAEF]
				,[PRAEFPCT]
				,[PDIEF]
				,[LBIND]
				,[BASPRCF]
				,[BASPREF]
				,[BASPRFF]
				,[BASPRMF]
				,[BASPDMF]
				,[BASPRMPF]
				,[BASPRGCEF]
				,[BASPDGCEF]
				,[BASPREPF]
				,[BASPRIE]
				,[BASPRVE]
				,[BASPRAE]
				,[TOPPRCF]
				,[TOPPREF]
				,[TOPPRFF]
				,[TOPPRMF]
				,[TOPPDMF]
				,[TOPPRMPF]
				,[TOPPRGCEF]
				,[TOPPDGCEF]
				,[TOPPREPF]
				,[TOPPRIE]
				,[TOPPRVE]
				,[TOPPRAE]
				,[TOTBASFUND]
				,[TOTTOPFUND]
				,[PDGV]
				,[PDGM]
				,[PRGV]
				,[PRGM]
				,[PREC]
				,[PSEC]
				,[PDMM]
				,[PDIF]
				,[PDNV]
				,[SPMM]
				,[SPIF]
				,[SPNV]
				,[TOPUPMM]
				,[TOPUPIF]
				,[TOPUPNV]
				,[WITHMM]
				,[WITHIF]
				,[WITHNV]
				,[UALPCTJ]
				,[UALPCTK]
				,[UALPCTL]
				,[BASPDMM]
				,[BASPDIF]
				,[BASPDNV]
				,[TOPPDMM]
				,[TOPPDIF]
				,[TOPPDNV]
				,[IFRS_ONEROUS_GRP]
				,[IFRS_CY_GRP]
				,[IFRS_PORT_GRP]
				,[IFRS_MEASURE]
				,[BASIC_ENTRY_YEAR]
				,[BASIC_ENTRY_MONTH]
				,[IFRS_CB_TERM_M]
				,[MTHS_TO_SALE]
				,[INSURANCE_CONTRACT_GROUP_ID]
				,[ICG_ID_PROPHET]
				,[SUB_GROUP_ID]
				,[ENTITY_ID]
				,[CURRENCY]
				,[CB_START_DATE]
				,[CB_END_DATE]
				,[REL_INSURANCE_CONTRACT_GROUP_ID]
				,[SUBSYSTEM]
				,[CREATED_DATE]
				,[UPDATED_DATE]
				,@BATCH_MASTER_ID AS BATCH_MASTER_ID
  			    ,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,@BATCHDATESTR AS BATCHDATE
				,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME	
			FROM FOND_ID.FOND_IFRS17_MPFILES_RESVPIA
			WHERE HOISSDTE < CRRCD AND STATCODE = 'IF';
				
			INSERT INTO [FOND_ID].[FOND_IFRS17_MPFILES_PROPTRDB_FORWARD_DATE]
			SELECT 
				[CHDRNUM]
				,[CRTABLE]
				,[ANBCCD]
				,[SEX]
				,[MORTCLS]
				,[PRMTRM]
				,[RSKTRM]
				,[PREMI]
				,[BILLFREQ]
				,[SUMINS]
				,[TOTBON]
				,[PTDATE]
				,[HOISSDTE]
				,[CRRCD]
				,[RCESDTE]
				,[CNTCURR]
				,[STATCODE]
				,[CURRFROM]
				,[ZLINSTPREM]
				,[BPAYTY]
				,[BPAYNY]
				,[SLSCNL]
				,[BILLCHNL]
				,[ZPDFSURR]
				,[LSURNAME]
				,[CLTPHONE01]
				,[CLTPHONE02]
				,[LIFCNUM]
				,[AGNTNUM]
				,[LSURNAME01]
				,[DTEAPP]
				,[DTETRM]
				,[TSALESUNT]
				,[REPORTAG]
				,[LSURNAME02]
				,[REGION]
				,[FUND]
				,[CLTADDR04]
				,[CLTADDR05]
				,[CLTDOB]
				,[MEDFLG]
				,[SRCEBUS]
				,[REASONCD]
				,[LONGDESC]
				,[COWNNUM]
				,[REGION_INDICATOR]
				,[SIO_GIO_FLAG]
				,[PRUSEHAT_SOLUTION_PLAN_TYPE]
				,[SUBSTANDARD_LOADING]
				,[IFRS_ONEROUS_GRP]
				,[IFRS_CY_GRP]
				,[IFRS_PORT_GRP]
				,[IFRS_MEASURE]
				,[BASIC_ENTRY_YEAR]
				,[BASIC_ENTRY_MONTH]
				,[IFRS_CB_TERM_M]
				,[MTHS_TO_SALE]
				,[INSURANCE_CONTRACT_GROUP_ID]
				,[ICG_ID_PROPHET]
				,[SUB_GROUP_ID]
				,[ENTITY_ID]
				,[CB_START_DATE]
				,[CB_END_DATE]
				,[REL_INSURANCE_CONTRACT_GROUP_ID]
				,@BATCH_MASTER_ID AS BATCH_MASTER_ID
  			    ,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,@BATCHDATESTR AS BATCHDATE
				,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
			FROM FOND_ID.FOND_IFRS17_MPFILES_PROPTRDB
			WHERE HOISSDTE < CRRCD AND (STATCODE = 'IF' OR STATCODE = 'PU');

		END
		
		--store end step to log
		SET @V_END = CURRENT_TIMESTAMP;
		SET @V_SEQNO = @V_SEQNO + 1;
		SET @V_DESCRIPTION = CONCAT('Finish ', @V_FUNCTION_NAME, ' : ', @V_END, ' Duration ', DATEDIFF(MINUTE, @V_START, @V_END));

		INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, "DESCRIPTION")
		VALUES (@V_END, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

		
		
	END TRY

	BEGIN CATCH
 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN;
		
		DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;

		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH


END;

