CREATE PROC [FOND_ID].[USP_IFRS17_PROPHETU_REGION_AOM_5D] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');

SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_PROPHETU_REGION_AOM_5D';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,[DESCRIPTION])
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

BEGIN TRY
DROP TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_AOM_5D];
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

BEGIN TRY
CREATE TABLE [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_AOM_5D]
WITH
	(
	  DISTRIBUTION = HASH(CHDRNUM),
	  HEAP
	) AS
SELECT AOM.[SLSCNL]
,AOM.[CHDRNUM]
,AOM.[CNTCURR]
,AOM.[STATCODE]
,AOM.[CNTTYPE]
,AOM.[ANBCCD]
,AOM.[SEX]
,AOM.[MORTCLS]
,COALESCE(CAST(EOP.[API] AS VARCHAR),'') [API]
,COALESCE(CAST(EOP.[BILLFREQ] AS VARCHAR),'') [BILLFREQ]
,AOM.[CRRCD]
,COALESCE(CAST(EOP.[PRUSVR] AS VARCHAR),'') [PRUSVR]
,AOM.[SINGP]
,COALESCE(CAST(EOP.[SUMINS] AS VARCHAR),'') [SUMINS]
,COALESCE(CAST(EOP.[CRTABLECC] AS VARCHAR),'') [CRTABLECC] 
,COALESCE(CAST(EOP.[ANBCC] AS VARCHAR),'') [ANBCC] 
,COALESCE(CAST(EOP.[RCDCC] AS VARCHAR),'') [RCDCC] 
,COALESCE(CAST(EOP.[SUMINCC] AS VARCHAR),'') [SUMINCC] 
,COALESCE(CAST(EOP.[RCESAGECC] AS VARCHAR),'') [RCESAGECC]
,COALESCE(CAST(EOP.[CRTABLEAD] AS VARCHAR),'') [CRTABLEAD]
,COALESCE(CAST(EOP.[ANBAD] AS VARCHAR),'') [ANBAD]
,COALESCE(CAST(EOP.[RCDAD] AS VARCHAR),'') [RCDAD]
,COALESCE(CAST(EOP.[MORTCLSAD] AS VARCHAR),'') [MORTCLSAD] 
,COALESCE(CAST(EOP.[SUMINAD] AS VARCHAR),'') [SUMINAD] 
,COALESCE(CAST(EOP.[RCESAGEAD] AS VARCHAR),'') [RCESAGEAD] 
,COALESCE(CAST(EOP.[CRTABLEADD] AS VARCHAR),'') [CRTABLEADD] 
,COALESCE(CAST(EOP.[ANBADD] AS VARCHAR),'') [ANBADD] 
,COALESCE(CAST(EOP.[RCDADD] AS VARCHAR),'') [RCDADD] 
,COALESCE(CAST(EOP.[MORTCLSADD] AS VARCHAR),'') [MORTCLSADD] 
,COALESCE(CAST(EOP.[SUMINADD] AS VARCHAR),'') [SUMINADD]
,COALESCE(CAST(EOP.[RCESAGEADD] AS VARCHAR),'') [RCESAGEADD] 
,COALESCE(CAST(EOP.[CRTABLEHB] AS VARCHAR),'') [CRTABLEHB] 
,COALESCE(CAST(EOP.[ANBHB] AS VARCHAR),'') [ANBHB] 
,COALESCE(CAST(EOP.[RCDHB] AS VARCHAR),'') [RCDHB] 
,COALESCE(CAST(EOP.[SUMINHB] AS VARCHAR),'') [SUMINHB] 
,COALESCE(CAST(EOP.[RCESAGEHB] AS VARCHAR),'') [RCESAGEHB] 
,COALESCE(CAST(EOP.[ANBWVR] AS VARCHAR),'') [ANBWVR] 
,COALESCE(CAST(EOP.[CRTABLEWVR] AS VARCHAR),'') [CRTABLEWVR] 
,COALESCE(CAST(EOP.[RCDWVR] AS VARCHAR),'') [RCDWVR] 
,COALESCE(CAST(EOP.[SUMINWVR] AS VARCHAR),'') [SUMINWVR] 
,COALESCE(CAST(EOP.[RCESAGEWVR] AS VARCHAR),'') [RCESAGEWVR] 
,COALESCE(CAST(EOP.[CRTABLESPO] AS VARCHAR),'') [CRTABLESPO] 
,COALESCE(CAST(EOP.[ANBSPO] AS VARCHAR),'') [ANBSPO]
,COALESCE(CAST(EOP.[SEXTWO] AS VARCHAR),'')  [SEXTWO]
,COALESCE(CAST(EOP.[RCDSPO] AS VARCHAR),'') [RCDSPO]
,COALESCE(CAST(EOP.[SUMINSPO] AS VARCHAR),'')  [SUMINSPO]
,COALESCE(CAST(EOP.[RCESDTE] AS VARCHAR),'')[RCESDTE]
,AOM.[HOISSDTE]
,AOM.[TTLFUND]
,AOM.[PRCF]
,AOM.[PREF]
,AOM.[PRFF]
,AOM.[PRMF]
,AOM.[PDMF]
,AOM.[CHGDTE]
,AOM.[PYRTRM]
,AOM.[CURYRTUP]
,AOM.[TOPUPLAST]
,AOM.[PCESTRM]
,COALESCE(CAST(EOP.[ANBCCP] AS VARCHAR),'') [ANBCCP]
,COALESCE(CAST(EOP.[RCDCCP] AS VARCHAR),'') [RCDCCP]
,COALESCE(CAST(EOP.[RCESAGECCP] AS VARCHAR),'')  [RCESAGECCP]
,COALESCE(CAST(EOP.[SUMINCCP] AS VARCHAR),'') [SUMINCCP]
,COALESCE(CAST(EOP.[CRTABLECCP] AS VARCHAR),'') [CRTABLECCP]
,AOM.[ALLOCIND]
,AOM.[BILCHNL]
,AOM.[WDRAMNT]
--,AOM.[CLNTNAME] -> EXCLUDED FROM DCS INPUT
,AOM.[LIFCNUM]
,AOM.[AGNTNUM]
,AOM.[UNITNUM]
,COALESCE(CAST(EOP.[CRTABLHS] AS VARCHAR),'') [CRTABLHS]
,COALESCE(CAST(EOP.[ANBHS] AS VARCHAR),'') [ANBHS]
,COALESCE(CAST(EOP.[RCDHS] AS VARCHAR),'')  [RCDHS]
,COALESCE(CAST(EOP.[SUMINHS] AS VARCHAR),'')  [SUMINHS]
,COALESCE(CAST(EOP.[RCESAGEHS] AS VARCHAR),'')  [RCESAGEHS]
,COALESCE(CAST(EOP.[CRTABLLT] AS VARCHAR),'')[CRTABLLT]
,COALESCE(CAST(EOP.[ANBLT] AS VARCHAR),'')  [ANBLT]
,COALESCE(CAST(EOP.[RCDLT] AS VARCHAR),'') [RCDLT]
,COALESCE(CAST(EOP.[SUMINLT] AS VARCHAR),'') [SUMINLT]
,COALESCE(CAST(EOP.[RCESAGELT] AS VARCHAR),'') [RCESAGELT]
,COALESCE(CAST(EOP.[CRTABL3LF] AS VARCHAR),'') [CRTABL3LF]
,COALESCE(CAST(EOP.[ANB3LF] AS VARCHAR),'') [ANB3LF]
,COALESCE(CAST(EOP.[SEX3LF] AS VARCHAR),'') [SEX3LF]
,COALESCE(CAST(EOP.[RCD3LF] AS VARCHAR),'') [RCD3LF]
,COALESCE(CAST(EOP.[SUMIN3LF] AS VARCHAR),'') [SUMIN3LF]
,COALESCE(CAST(EOP.[RCESDT3LF] AS VARCHAR),'') [RCESDT3LF]
,AOM.[PAAFLAG]
,AOM.[PTDATE]
,CASE WHEN EOP.[WAIVERSTAT] IS NULL THEN '' ELSE EOP.[WAIVERSTAT] END AS [WAIVERSTAT] --PTPLAIFRS17-3941
,AOM.[CLAIMSAR]
,AOM.[FPAYDATE]
,AOM.[PRMP]
,AOM.[TPDCLAIM]
,AOM.[ADDR04CITY]
,AOM.[ADDR05PROV]
,COALESCE(CAST(EOP.[CRTABLECI] AS VARCHAR),'') [CRTABLECI]
,COALESCE(CAST(EOP.[ANBCI] AS VARCHAR),'') [ANBCI]
,COALESCE(CAST(EOP.[RCDCI] AS VARCHAR),'')  [RCDCI]
,COALESCE(CAST(EOP.[SUMINCI] AS VARCHAR),'')  [SUMINCI]
,COALESCE(CAST(EOP.[RCESDTECI] AS VARCHAR),'')  [RCESDTECI]
,COALESCE(CAST(EOP.[CRTABLEMCC] AS VARCHAR),'') [CRTABLEMCC]
,COALESCE(CAST(EOP.[ANBMCC] AS VARCHAR),'')[ANBMCC]
,COALESCE(CAST(EOP.[RCDMCC] AS VARCHAR),'')  [RCDMCC]
,COALESCE(CAST(EOP.[SUMINMCC] AS VARCHAR),'') [SUMINMCC]
,COALESCE(CAST(EOP.[RCESDTEMCC] AS VARCHAR),'') [RCESDTEMCC]
,COALESCE(CAST(EOP.[PRODCDE] AS VARCHAR),'')  [PRODCDE]
,COALESCE(CAST(EOP.[ANBESCC] AS VARCHAR),'') [ANBESCC]
,COALESCE(CAST(EOP.[RCDESCC] AS VARCHAR),'') [RCDESCC]
,COALESCE(CAST(EOP.[SUMINESCC] AS VARCHAR),'')  [SUMINESCC]
,COALESCE(CAST(EOP.[RCESDTEESCC] AS VARCHAR),'')  [RCESDTEESCC]
,AOM.[CLTBDAY]
,AOM.[MEDPCLAS]
,AOM.[ADMINCHG]
,AOM.[COIDEBT]
,AOM.[TOTCHGHS]
,AOM.[TOTTPACOST]
,AOM.[CODE]
,AOM.[ZLONGDESC]
,COALESCE(CAST(EOP.[RCESAGESO] AS VARCHAR),'')  [RCESAGESO]
,COALESCE(CAST(EOP.[RCESAGEPW] AS VARCHAR),'')  [RCESAGEPW]
,COALESCE(CAST(EOP.[RCESAGEPWX] AS VARCHAR),'') [RCESAGEPWX]
,COALESCE(CAST(EOP.[RCESAGECI] AS VARCHAR),'')  [RCESAGECI]
,COALESCE(CAST(EOP.[RCESAGEMC] AS VARCHAR),'')  [RCESAGEMC]
,COALESCE(CAST(EOP.[RCESAGEEC] AS VARCHAR),'')  [RCESAGEEC]
,AOM.[LSTTOPDATE]
,AOM.[COWNNUM]
,COALESCE(CAST(EOP.[CRTABLEJCC] AS VARCHAR),'') [CRTABLEJCC]
,COALESCE(CAST(EOP.[ANBJCC] AS VARCHAR),'') [ANBJCC]
,COALESCE(CAST(EOP.[RCDJCC] AS VARCHAR),'') [RCDJCC]
,COALESCE(CAST(EOP.[SUMINJCC] AS VARCHAR),'') [SUMINJCC]
,COALESCE(CAST(EOP.[RCESAGEJCC] AS VARCHAR),'') [RCESAGEJCC]
,COALESCE(CAST(EOP.[SUMINPMC] AS VARCHAR),'') [SUMINPMC]
,AOM.[PRGC]
,AOM.[PDGC]
,COALESCE(CAST(EOP.[PRUSTATCDE] AS VARCHAR),'') [PRUSTATCDE]
,COALESCE(CAST(EOP.[CRTABLESAV] AS VARCHAR),'') [CRTABLESAV]
,AOM.[AGNTDLCODE]
,AOM.[UMCODE]
,AOM.[PREP]
,AOM.[CLMTYP]
,AOM.[PRIEF]
,COALESCE(CAST(EOP.[EDUPAR1C] AS VARCHAR),'') [EDUPAR1C]
,COALESCE(CAST(EOP.[EDUP1SUM] AS VARCHAR),'') [EDUP1SUM]
,COALESCE(CAST(EOP.[EDUPAR2C] AS VARCHAR),'') [EDUPAR2C]
,COALESCE(CAST(EOP.[EDUP2SUM] AS VARCHAR),'') [EDUP2SUM]
,COALESCE(CAST(EOP.[CRTABL3LT] AS VARCHAR),'') [CRTABL3LT]
,COALESCE(CAST(EOP.[ANB3LT] AS VARCHAR),'') [ANB3LT]
,COALESCE(CAST(EOP.[RCD3LT] AS VARCHAR),'') [RCD3LT]
,COALESCE(CAST(EOP.[SUMIN3LT] AS VARCHAR),'')  [SUMIN3LT]
,COALESCE(CAST(EOP.[RCESAGE3LT] AS VARCHAR),'') [RCESAGE3LT]
,AOM.[NLGFLAG]
,AOM.[REGION_IND]
,AOM.[AR_IND]
,AOM.[HNW_IND]
,CASE WHEN EOP.[RI_IND] IS NULL THEN AOM.[RI_IND] ELSE EOP.[RI_IND] END AS [RI_IND] --> Modified in v3
,CASE WHEN EOP.[ADDR] IS NULL THEN AOM.[ADDR] ELSE EOP.[ADDR] END AS [ADDR] --> Modified in v3
,CASE WHEN EOP.[DTHR] IS NULL THEN AOM.[DTHR] ELSE EOP.[DTHR] END AS [DTHR] --> Modified in v3
,CASE WHEN EOP.[RDDS] IS NULL THEN AOM.[RDDS] ELSE EOP.[RDDS] END AS [RDDS] --> Modified in v3
,CASE WHEN EOP.[SAR_WAIV] IS NULL THEN AOM.[SAR_WAIV] ELSE EOP.[SAR_WAIV] END AS [SAR_WAIV] --> Modified in v3
,CASE WHEN EOP.[SAR_WAIV2] IS NULL THEN AOM.[SAR_WAIV2] ELSE EOP.[SAR_WAIV2] END AS [SAR_WAIV2] --> Modified in v3
,CASE WHEN EOP.[SAR_CI] IS NULL THEN AOM.[SAR_CI] ELSE EOP.[SAR_CI] END AS [SAR_CI] --> Modified in v3
,AOM.[PRVEF]
,AOM.[PRAEF]
,COALESCE(CAST(EOP.[ANBCCB] AS VARCHAR),'') [ANBCCB]
,COALESCE(CAST(EOP.[RCDCCB] AS VARCHAR),'') [RCDCCB]
,COALESCE(CAST(EOP.[RCESAGECCB] AS VARCHAR),'') [RCESAGECCB]
,COALESCE(CAST(EOP.[SUMINCCB] AS VARCHAR),'')    [SUMINCCB]
,COALESCE(CAST(EOP.[CRTABLECCB] AS VARCHAR),'') [CRTABLECCB]
,AOM.[PDIEF]
--,AOM.[MINIIND] -> EXCLUDED FROM DCS INPUT
,AOM.[PDGV]
,AOM.[PDGM]
,COALESCE(CAST(EOP.[CODE_CHC] AS VARCHAR),'') [CODE_CHC]
,COALESCE(CAST(EOP.[AGE_ENTRY_CHC] AS VARCHAR),'') [AGE_ENTRY_CHC]
,COALESCE(CAST(EOP.[CRRCD_CHC] AS VARCHAR),'')  [CRRCD_CHC]
,COALESCE(CAST(EOP.[PLANTYPE_CHC] AS VARCHAR),'') [PLANTYPE_CHC]
,COALESCE(CAST(EOP.[AGE_END_CHC] AS VARCHAR),'') [AGE_END_CHC]
,COALESCE(CAST(EOP.[CODE_DISABLE] AS VARCHAR),'') [CODE_DISABLE]
,COALESCE(CAST(EOP.[AGE_ENTRY_DISABLE] AS VARCHAR),'')  [AGE_ENTRY_DISABLE]
,COALESCE(CAST(EOP.[CRRCD_DISABLE] AS VARCHAR),'') [CRRCD_DISABLE]
,COALESCE(CAST(EOP.[SUMINS_DISABLE] AS VARCHAR),'') [SUMINS_DISABLE]
,COALESCE(CAST(EOP.[AGE_END_DISABLE] AS VARCHAR),'') [AGE_END_DISABLE]
,AOM.[PRGV]
,AOM.[PRGM]
,AOM.[TOTAL_FUND_BAV]
,AOM.[PRCF_BAV]
,AOM.[PREF_BAV]
,AOM.[PRFF_BAV]
,AOM.[PRGC_BAV]
,AOM.[PRMF_BAV]
,AOM.[PRMP_BAV]
,AOM.[PRIE_BAV]
,AOM.[PRAE_BAV]
,AOM.[PRVE_BAV]
,AOM.[PRGM_BAV]
,AOM.[PRGV_BAV]
,AOM.[PDFF_BAV]
,AOM.[PDGC_BAV]
,AOM.[PDGM_BAV]
,AOM.[PDGV_BAV]
,AOM.[PLEF_BAV]
,AOM.[TOTAL_FUND_TPAV]
,AOM.[PRCF_TPAV]
,AOM.[PREF_TPAV]
,AOM.[PRFF_TPAV]
,AOM.[PRGC_TPAV]
,AOM.[PRMF_TPAV]
,AOM.[PRMP_TPAV]
,AOM.[PRIE_TPAV]
,AOM.[PRAE_TPAV]
,AOM.[PRVE_TPAV]
,AOM.[PRGM_TPAV]
,AOM.[PRGV_TPAV]
,AOM.[PDFF_TPAV]
,AOM.[PDGC_TPAV]
,AOM.[PDGM_TPAV]
,AOM.[PDGV_TPAV]
,AOM.[PLEF_TPAV]
,AOM.[TOTAL_UNIT_ACT]
,AOM.[PRCF_ACT]
,AOM.[PREF_ACT]
,AOM.[PRFF_ACT]
,AOM.[PRGC_ACT]
,AOM.[PRMF_ACT]
,AOM.[PRMP_ACT]
,AOM.[PRIE_ACT]
,AOM.[PRAE_ACT]
,AOM.[PRVE_ACT]
,AOM.[PRGM_ACT]
,AOM.[PRGV_ACT]
,AOM.[PDFF_ACT]
,AOM.[PDGC_ACT]
,AOM.[PDGM_ACT]
,AOM.[PDGV_ACT]
,AOM.[PLEF_ACT]
,AOM.[TOTAL_UNIT_PRV]
,AOM.[PRCF_PRV]
,AOM.[PREF_PRV]
,AOM.[PRFF_PRV]
,AOM.[PRGC_PRV]
,AOM.[PRMF_PRV]
,AOM.[PRMP_PRV]
,AOM.[PRIE_PRV]
,AOM.[PRAE_PRV]
,AOM.[PRVE_PRV]
,AOM.[PRGM_PRV]
,AOM.[PRGV_PRV]
,AOM.[PDFF_PRV]
,AOM.[PDGC_PRV]
,AOM.[PDGM_PRV]
,AOM.[PDGV_PRV]
,AOM.[PLEF_PRV]
,AOM.[BASIC_PREMIUM_PREV]
,CASE WHEN EOP.[STFLAG] IS NULL THEN AOM.[STFLAG] ELSE EOP.[STFLAG] END AS [STFLAG] --> Modified in v3
,AOM.[SIOFLAG]
,AOM.[BILLCHNL_PRV]
,AOM.[FUPCODE_FOR_PBC]
,AOM.[REQUEST_DATE_FOR_PBC]
,AOM.[PRNV]
,COALESCE(CAST(EOP.[PPHPLUS_PLAN_TYPE] AS VARCHAR),'') [PPHPLUS_PLAN_TYPE]
,AOM.[PDNV]
--,COALESCE(CAST(EOP.[PPHPLUS_CAMPAIGN_FLAG] AS VARCHAR),'') [PPHPLUS_CAMPAIGN_FLAG] END AS [PPHPLUS_CAMPAIGN_FLAG] --> EXCLUDED FROM DCS INPUT
,COALESCE(CAST(EOP.[CODE_PRUTOP_CCB61] AS VARCHAR),'') [CODE_PRUTOP_CCB61]
,COALESCE(CAST(EOP.[AGE_ENTRY_PRUTOP_CCB61] AS VARCHAR),'') [AGE_ENTRY_PRUTOP_CCB61]
,COALESCE(CAST(EOP.[CRRCD_PRUTOP_CCB61] AS VARCHAR),'') [CRRCD_PRUTOP_CCB61]
,COALESCE(CAST(EOP.[CODE_PRUTOP_CCB34] AS VARCHAR),'')[CODE_PRUTOP_CCB34]
,COALESCE(CAST(EOP.[AGE_ENTRY_PRUTOP_CCB34] AS VARCHAR),'')  [AGE_ENTRY_PRUTOP_CCB34]
,COALESCE(CAST(EOP.[CRRCD_PRUTOP_CCB34] AS VARCHAR),'')[CRRCD_PRUTOP_CCB34]
,COALESCE(CAST(EOP.[CODE_PRUTOP_ESCC] AS VARCHAR),'') [CODE_PRUTOP_ESCC]
,COALESCE(CAST(EOP.[AGE_ENTRY_PRUTOP_ESCC] AS VARCHAR),'') [AGE_ENTRY_PRUTOP_ESCC]
,COALESCE(CAST(EOP.[CRRCD_PRUTOP_ESCC] AS VARCHAR),'')[CRRCD_PRUTOP_ESCC]
,AOM.[PDGT] --> Added in v4
,AOM.[PSMA] --> Added in v4
,AOM.[PSMA_BAV] --> Added in v4
,AOM.[PSMA_TPAV] --> Added in v4
,AOM.[PSMA_ACT] --> Added in v4
,AOM.[PSMA_PRV] --> Added in v4
,AOM.[STAT_SECT] --updated by dyah 05/08/2022
-- start DARA 230401
,CASE WHEN EOP.[CICA_ESCC] IS NULL THEN AOM.[CICA_ESCC] ELSE EOP.[CICA_ESCC] END AS [CICA_ESCC]
,CASE WHEN EOP.[C_ESCC] IS NULL THEN AOM.[C_ESCC] ELSE EOP.[C_ESCC] END AS [C_ESCC] 
,CASE WHEN EOP.[CICA_CCB34]  IS NULL THEN AOM.[CICA_CCB34] ELSE EOP.[CICA_CCB34] END AS [CICA_CCB34] 
,CASE WHEN EOP.[CICA_CCB61] IS NULL THEN AOM.[CICA_CCB61] ELSE EOP.[CICA_CCB61] END AS [CICA_CCB61]  
,CASE WHEN EOP.[CCB61] IS NULL THEN AOM.[CCB61] ELSE EOP.[CCB61] END AS [CCB61] 
,AOM.[RCESAGE]
,AOM.[FLAGS]
-- end DARA 230401
,AOM.[PDIF] --PTPLAIFRS17-3961
,AOM.[PRDP] 
,AOM.[PRDP_BAV] 
,AOM.[PRDP_TPAV] 
,AOM.[PRDP_BON] 
,AOM.[PRDP_PRV] 
,AOM.[PRBI] 
,AOM.[WP_FLAG]
,AOM.[CAMP_CODE]
,AOM.[RBP_STATE]
,AOM.[IFRS_ONEROUS_GRP]
,AOM.[IFRS_CY_GRP]
,AOM.[IFRS_PORT_GRP]
,AOM.[IFRS_MEASURE_MODEL]
,AOM.[BASIC_ENTRY_YEAR]
,AOM.[BASIC_ENTRY_MONTH]
,AOM.[IFRS_CB_TERM_M]
,AOM.[MTHS_TO_SALE]
,AOM.[IFRS_ICG_ID]
,AOM.[IFRS_ICG_ID_PROPHET]
,AOM.[SUB_GROUP_ID]
,AOM.[ENTITY_ID]
,AOM.[CB_START_DT]
,AOM.[CB_END_DT]
,AOM.[REL_INSURANCE_CONTRACT_GROUP_ID]
,AOM.[STATCODE_EOP]
,AOM.[UNDISC_FUND_BALANCE_ADJ]
,(CAST(AOM.[WDRAMNT] AS FLOAT) - CAST(ISNULL(EOP.[WDRAMNT],0) AS FLOAT)) AS [PW_AMOUNT],
@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
@BATCH_RUN_ID AS BATCH_RUN_ID,
@JOB_MASTER_ID AS JOB_MASTER_ID,
@JOB_RUN_ID  AS JOB_RUN_ID,
@BATCHDATESTR AS BATCHDATE,
@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM [FOND_ID].[FOND_IFRS17_PROPHETU_REGION_AOM_5ABC] AS AOM
LEFT JOIN (
SELECT * FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
) AS EOP  ON CAST(AOM.[CHDRNUM] AS VARCHAR) = CAST(EOP.[CHDRNUM] AS VARCHAR) ;


END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
