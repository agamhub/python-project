CREATE PROC [FOND_ID].[USP_IFRS17_TRADITIONAL_ACT_USED_AOM_5D] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');

SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_TRADITIONAL_ACT_USED_AOM_5D';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,[DESCRIPTION])
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

BEGIN TRY
DROP TABLE [FOND_ID].[FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_5D];
PRINT 'Table exist, dropping table..'
END TRY
BEGIN CATCH
	PRINT 'Table does not exists..'
END CATCH

BEGIN TRY
CREATE TABLE [FOND_ID].[FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_5D]
WITH
	(
	  DISTRIBUTION = HASH(CHDRNUM),
	  HEAP
	) AS
SELECT DISTINCT AOM.[PRODUCT_CD]
,AOM.[BENEFIT_CD]
,AOM.[CHDRNUM]
,AOM.[CRTABLE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[ANBCCD] ELSE AOM.[ANBCCD] END AS [ANBCCD]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[SEX] ELSE AOM.[SEX] END AS [SEX]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[MORTCLS] ELSE AOM.[MORTCLS] END AS [MORTCLS]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[PRMTRM] ELSE AOM.[PRMTRM] END AS [PRMTRM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[RSKTRM] ELSE AOM.[RSKTRM] END AS [RSKTRM]
,EOP.[PREMI] --> Modified in v3
,EOP.[BILLFREQ] --> Modified in v3
,EOP.[SUMINS] --> Modified in v3
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[TOTBON] ELSE AOM.[TOTBON] END AS [TOTBON]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[PTDATE] ELSE AOM.[PTDATE] END AS [PTDATE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[HOISSDTE] ELSE AOM.[HOISSDTE] END AS [HOISSDTE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CRRCD] ELSE AOM.[CRRCD] END AS [CRRCD]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[RCESDTE] ELSE AOM.[RCESDTE] END AS [RCESDTE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CNTCURR] ELSE AOM.[CNTCURR] END AS [CNTCURR]
--,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[STATCODE] ELSE 
,AOM.[STATCODE] AS [STATCODE] -- UPDATED BY DYAH 31/05/2022
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CURRFROM] ELSE AOM.[CURRFROM] END AS [CURRFROM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[ZLINSTPREM] ELSE AOM.[ZLINSTPREM] END AS [ZLINSTPREM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[BPAYTY] ELSE AOM.[BPAYTY] END AS [BPAYTY]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[BPAYNY] ELSE AOM.[BPAYNY] END AS [BPAYNY]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[SLSCNL] ELSE AOM.[SLSCNL] END AS [SLSCNL]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[BILLCHNL] ELSE AOM.[BILLCHNL] END AS [BILLCHNL]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[ZPDFSURR] ELSE AOM.[ZPDFSURR] END AS [ZPDFSURR]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CLTPHONE01] ELSE AOM.[CLTPHONE01] END AS [CLTPHONE01]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CLTPHONE02] ELSE AOM.[CLTPHONE02] END AS [CLTPHONE02]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[LIFCNUM] ELSE AOM.[LIFCNUM] END AS [LIFCNUM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[AGNTNUM] ELSE AOM.[AGNTNUM] END AS [AGNTNUM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[DTEAPP] ELSE AOM.[DTEAPP] END AS [DTEAPP]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[DTETRM] ELSE AOM.[DTETRM] END AS [DTETRM]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[TSALESUNT] ELSE AOM.[TSALESUNT] END AS [TSALESUNT]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[REPORTAG] ELSE AOM.[REPORTAG] END AS [REPORTAG]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[COLUMN_NULL1] ELSE AOM.[ClaimWVR] END AS [ClaimWVR]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[COLUMN_ZERO1] ELSE AOM.[ClaimWV_RES] END AS [ClaimWV_RES]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[FUND] ELSE AOM.[PCA_CLASS1] END AS [PCA_CLASS1] --altered
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[COLUMN_NULL2] ELSE AOM.[WVR_DATESTART] END AS [WVR_DATESTART]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CLTADDR04] ELSE AOM.[CLTADDR04] END AS [CLTADDR04]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CLTADDR05] ELSE AOM.[CLTADDR05] END AS [CLTADDR05]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[COLUMN_ZERO2] ELSE AOM.[CLAIM_RES] END AS [CLAIM_RES]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CLTDOB] ELSE AOM.[CLTDOB] END AS [CLTDOB]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[MEDFLG] ELSE AOM.[MEDFLG] END AS [MEDFLG]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[PLAN_TRAD] ELSE AOM.[PLAN_TRAD] END AS [PLAN_TRAD]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[MODE] ELSE AOM.[MODE] END AS [MODE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[PRUBP] ELSE AOM.[PRUBP] END AS [PRUBP]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CHANNEL] ELSE AOM.[CHANNEL] END AS [CHANNEL]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[SRCEBUS] ELSE AOM.[SRCEBUS] END AS [SRCEBUS]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[REASONCD] ELSE AOM.[REASONCD] END AS [REASONCD]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[LONGDESC] ELSE AOM.[LONGDESC] END AS [LONGDESC]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[COLUMN 48] ELSE AOM.[REGION_INDICATOR] END AS [REGION_INDICATOR]
,EOP.[PRUSEHAT_SOLUTION_PLAN_TYPE] --updated by Dara 10may2023 CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[PRUSEHAT_SOLUTION_PLAN_TYPE] ELSE AOM.[PRUSEHAT_SOLUTION_PLAN_TYPE] END AS [PRUSEHAT_SOLUTION_PLAN_TYPE]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[SUBSTANDARD_LOADING] ELSE AOM.[SUBSTANDARD_LOADING] END AS [SUBSTANDARD_LOADING]
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[CAMPAIGN_FLAG] ELSE AOM.[CAMPAIGN_FLAG] END AS [CAMPAIGN_FLAG] 
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[TOTCLAIMS] ELSE AOM.[TOTCLAIMS] END AS [TOTCLAIMS] -- updated by dyah 09/08/2022
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[STAT_SECT] ELSE AOM.[STAT_SECT] END AS [STAT_SECT] -- updated by dyah 09/08/2022
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[REN_PREM_IND] ELSE AOM.[REN_PREM_IND] END AS [REN_PREM_IND] -- updated by dyah 09/08/2022
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[FAMPLAN_IND] ELSE AOM.[FAMPLAN_IND] END AS [FAMPLAN_IND] -- updated by dyah 09/08/2022
,AOM.[LOOKUP_CODE]  -- DARA 230401
,AOM.[CV_BALANCE] -- ALDO 202312
,AOM.[E-SUBMISSION_E-POLICY_AND_MAILFLAG]
,AOM.[WP_FLAG]
,AOM.[CAMP_CODE]
,AOM.[RBP_STATE]
,AOM.[IFRS_ONEROUS_GRP] --> Modified in v3
,AOM.[IFRS_CY_GRP] --> Modified in v3
,AOM.[IFRS_PORT_GRP] --> Modified in v3
,AOM.[IFRS_MEASURE_MODEL] --> Modified in v3
,AOM.[BASIC_ENTRY_YEAR] --> Modified in v3
,AOM.[BASIC_ENTRY_MONTH] --> Modified in v3
,AOM.[IFRS_CB_TERM_M] --> Modified in v3
,AOM.[MTHS_TO_SALE] --> Modified in v3
,AOM.[IFRS_ICG_ID] --> Modified in v3
,AOM.[IFRS_ICG_ID_PROPHET] --> Modified in v3
,AOM.[SUB_GROUP_ID] --> Modified in v3
,AOM.[ENTITY_ID] --> Modified in v3
,AOM.[CB_START_DT] --> Modified in v3
,AOM.[CB_END_DT] --> Modified in v3
,AOM.[REL_INSURANCE_CONTRACT_GROUP_ID] --> Modified in v3
,CASE WHEN COALESCE(AOM.[PRODUCT_CD],'DUMMY') <> COALESCE(AOM.[BENEFIT_CD],'DUMMY') THEN EOP.[STATCODE] ELSE AOM.[STATCODE_EOP] END AS [STATCODE_EOP]
,@BATCH_MASTER_ID AS BATCH_MASTER_ID 
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID  AS JOB_RUN_ID
,@BATCHDATESTR AS BATCHDATE
,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_5ABC AS AOM
LEFT JOIN (
	SELECT *
	FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
	WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
) AS EOP ON AOM.CHDRNUM = EOP.CHDRNUM AND AOM.PRODUCT_CD = EOP.PRODUCT_CD AND AOM.BENEFIT_CD = EOP.BENEFIT_CD

UNION  ALL

SELECT DISTINCT
EOP.[PRODUCT_CD]
,EOP.[BENEFIT_CD]
,EOP.[CHDRNUM]
,EOP.[CRTABLE]
,EOP.[ANBCCD]  AS  [ANBCCD]
,EOP.[SEX]  AS  [SEX]
,EOP.[MORTCLS]  AS  [MORTCLS]
,EOP.[PRMTRM]  AS  [PRMTRM]
,EOP.[RSKTRM]  AS  [RSKTRM]
,EOP.[PREMI] --> Modified in v3
,EOP.[BILLFREQ] --> Modified in v3
,EOP.[SUMINS] --> Modified in v3
,EOP.[TOTBON]  AS  [TOTBON]
,EOP.[PTDATE]  AS  [PTDATE]
,EOP.[HOISSDTE]  AS  [HOISSDTE]
,EOP.[CRRCD]  AS  [CRRCD]
,EOP.[RCESDTE]  AS  [RCESDTE]
,EOP.[CNTCURR]  AS  [CNTCURR]
,EOP.[STATCODE]  AS  [STATCODE]
,EOP.[CURRFROM]  AS  [CURRFROM]
,EOP.[ZLINSTPREM]  AS  [ZLINSTPREM]
,EOP.[BPAYTY]  AS  [BPAYTY]
,EOP.[BPAYNY]  AS  [BPAYNY]
,EOP.[SLSCNL]  AS  [SLSCNL]
,EOP.[BILLCHNL]  AS  [BILLCHNL]
,EOP.[ZPDFSURR]  AS  [ZPDFSURR]
,EOP.[CLTPHONE01]  AS  [CLTPHONE01]
,EOP.[CLTPHONE02]  AS  [CLTPHONE02]
,EOP.[LIFCNUM]  AS  [LIFCNUM]
,EOP.[AGNTNUM]  AS  [AGNTNUM]
,EOP.[DTEAPP]  AS  [DTEAPP]
,EOP.[DTETRM]  AS  [DTETRM]
,EOP.[TSALESUNT] AS [TSALESUNT]
,EOP.[REPORTAG] AS [REPORTAG]
,EOP.[COLUMN_NULL1]  AS  [ClaimWVR]
,EOP.[COLUMN_ZERO1]  AS  [ClaimWV_RES]
,EOP.[FUND]  AS [PCA_CLASS1] 
,EOP.[COLUMN_NULL2]  AS  [WVR_DATESTART]
,EOP.[CLTADDR04]  AS  [CLTADDR04]
,EOP.[CLTADDR05]  AS  [CLTADDR05]
,EOP.[COLUMN_ZERO2]  AS  [CLAIM_RES]
,EOP.[CLTDOB]  AS  [CLTDOB]
,EOP.[MEDFLG]  AS  [MEDFLG]
,EOP.[PLAN_TRAD]  AS  [PLAN_TRAD]
,EOP.[MODE]  AS  [MODE]
,EOP.[PRUBP]  AS  [PRUBP]
,EOP.[CHANNEL]  AS  [CHANNEL]
,EOP.[SRCEBUS]  AS  [SRCEBUS]
,EOP.[REASONCD] AS [REASONCD] 
,EOP.[LONGDESC]  AS  [LONGDESC]
,EOP.[COLUMN 48]  AS  [REGION_INDICATOR]
,EOP.[PRUSEHAT_SOLUTION_PLAN_TYPE]  AS  [PRUSEHAT_SOLUTION_PLAN_TYPE]
,EOP.[SUBSTANDARD_LOADING]  AS  [SUBSTANDARD_LOADING]
,EOP.[CAMPAIGN_FLAG] 
,EOP.[TOTCLAIMS] --updated by dyah 09/08/2022
,EOP.[STAT_SECT] --updated by dyah 09/08/2022
,EOP.[REN_PREM_IND] --updated by dyah 09/08/2022
,EOP.[FAMPLAN_IND] --updated by dyah 09/08/2022 
,EOP.[LOOKUP_CODE] -- DARA 230401
,EOP.[CV_BALANCE] -- ALDO 202312
,EOP.[E-SUBMISSION_E-POLICY_AND_MAILFLAG]
,EOP.[WP_FLAG]
,EOP.[CAMP_CODE]
,EOP.[RBP_STATE]
,EOP.[IFRS_ONEROUS_GRP] --> Modified in v3
,EOP.[IFRS_CY_GRP] --> Modified in v3
,EOP.[IFRS_PORT_GRP] --> Modified in v3
,EOP.[IFRS_MEASURE_MODEL] --> Modified in v3
,EOP.[BASIC_ENTRY_YEAR] --> Modified in v3
,EOP.[BASIC_ENTRY_MONTH] --> Modified in v3
,EOP.[IFRS_CB_TERM_M] --> Modified in v3
,EOP.[MTHS_TO_SALE] --> Modified in v3
,EOP.[IFRS_ICG_ID] --> Modified in v3
,EOP.[IFRS_ICG_ID_PROPHET] --> Modified in v3
,EOP.[SUB_GROUP_ID] --> Modified in v3
,EOP.[ENTITY_ID] --> Modified in v3
,EOP.[CB_START_DT] --> Modified in v3
,EOP.[CB_END_DT] --> Modified in v3
,EOP.[REL_INSURANCE_CONTRACT_GROUP_ID] --> Modified in v3
,EOP.[STATCODE] AS [STATCODE_EOP]
,@BATCH_MASTER_ID AS BATCH_MASTER_ID 
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID  AS JOB_RUN_ID
,@BATCHDATESTR AS BATCHDATE
,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM (
SELECT *
	FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
	WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
) AS EOP
LEFT JOIN FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_AOM_5ABC AS AOM ON AOM.CHDRNUM = EOP.CHDRNUM AND AOM.PRODUCT_CD = EOP.PRODUCT_CD AND AOM.BENEFIT_CD = EOP.BENEFIT_CD
WHERE AOM.[CHDRNUM] IS NULL;

END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
