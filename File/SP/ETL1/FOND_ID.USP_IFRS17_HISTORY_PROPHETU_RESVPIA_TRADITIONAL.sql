CREATE PROC [FOND_ID].[USP_IFRS17_HISTORY_PROPHETU_RESVPIA_TRADITIONAL] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	

------set variable----------------
SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_HISTORY_PROPHETU_RESVPIA_TRADITIONAL';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,"DESCRIPTION")
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

---delete insert FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
BEGIN TRY
DELETE FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS
SELECT A.*
FROM (
	SELECT SLSCNL,CHDRNUM,CNTCURR,STATCODE,CNTTYPE,ANBCCD,SEX,MORTCLS,API,BILLFREQ,CRRCD,PRUSVR,SINGP,SUMINS,CRTABLECC,ANBCC,RCDCC,SUMINCC,RCESAGECC,CRTABLEAD,ANBAD,RCDAD,MORTCLSAD,SUMINAD,RCESAGEAD,CRTABLEADD,ANBADD,RCDADD,MORTCLSADD,SUMINADD,RCESAGEADD,CRTABLEHB,ANBHB,RCDHB,SUMINHB,RCESAGEHB,ANBWVR,CRTABLEWVR,RCDWVR,SUMINWVR,RCESAGEWVR,CRTABLESPO,ANBSPO,SEXTWO,RCDSPO,SUMINSPO,RCESDTE,HOISSDTE,TTLFUND,PRCF,PREF,PRFF,PRMF,PDMF,CHGDTE,PYRTRM,CURYRTUP,TOPUPLAST,PCESTRM,ANBCCP,RCDCCP,RCESAGECCP,SUMINCCP,CRTABLECCP,ALLOCIND,BILCHNL,WDRAMNT,LIFCNUM,AGNTNUM,UNITNUM,CRTABLHS,ANBHS,RCDHS,SUMINHS,RCESAGEHS,CRTABLLT,ANBLT,RCDLT,SUMINLT,RCESAGELT,CRTABL3LF,ANB3LF,SEX3LF,RCD3LF,SUMIN3LF,RCESDT3LF,PAAFLAG,PTDATE,WAIVERSTAT,CLAIMSAR,FPAYDATE,PRMP,TPDCLAIM,ADDR04CITY,ADDR05PROV,CRTABLECI,ANBCI,RCDCI,SUMINCI,RCESDTECI,CRTABLEMCC,ANBMCC,RCDMCC,SUMINMCC,RCESDTEMCC,PRODCDE,ANBESCC,RCDESCC,SUMINESCC,RCESDTEESCC,CLTBDAY,MEDPCLAS,ADMINCHG,COIDEBT,TOTCHGHS,TOTTPACOST,CODE,ZLONGDESC,RCESAGESO,RCESAGEPW,RCESAGEPWX,RCESAGECI,RCESAGEMC,RCESAGEEC,LSTTOPDATE,COWNNUM,CRTABLEJCC,ANBJCC,RCDJCC,SUMINJCC,RCESAGEJCC,SUMINPMC,PRGC,PDGC,PRUSTATCDE,CRTABLESAV,AGNTDLCODE,UMCODE,PREP,CLMTYP,PRIEF,EDUPAR1C,EDUP1SUM,EDUPAR2C,EDUP2SUM,CRTABL3LT,ANB3LT,RCD3LT,SUMIN3LT,RCESAGE3LT,NLGFLAG,REGION_IND,AR_IND,HNW_IND,RI_IND,ADDR,DTHR,RDDS,SAR_WAIV,SAR_WAIV2,SAR_CI,PRVEF,PRAEF,ANBCCB,RCDCCB,RCESAGECCB,SUMINCCB,CRTABLECCB,PDIEF,PDGV,PDGM,CODE_CHC,AGE_ENTRY_CHC,CRRCD_CHC,PLANTYPE_CHC,AGE_END_CHC,CODE_DISABLE,AGE_ENTRY_DISABLE,CRRCD_DISABLE,SUMINS_DISABLE,AGE_END_DISABLE,PRGV,PRGM,TOTAL_FUND_BAV,PRCF_BAV,PREF_BAV,PRFF_BAV,PRGC_BAV,PRMF_BAV,PRMP_BAV,PRIE_BAV,PRAE_BAV,PRVE_BAV,PRGM_BAV,PRGV_BAV,PDFF_BAV,PDGC_BAV,PDGM_BAV,PDGV_BAV,PLEF_BAV,TOTAL_FUND_TPAV,PRCF_TPAV,PREF_TPAV,PRFF_TPAV,PRGC_TPAV,PRMF_TPAV,PRMP_TPAV,PRIE_TPAV,PRAE_TPAV,PRVE_TPAV,PRGM_TPAV,PRGV_TPAV,PDFF_TPAV,PDGC_TPAV,PDGM_TPAV,PDGV_TPAV,PLEF_TPAV,TOTAL_UNIT_ACT,PRCF_ACT,PREF_ACT,PRFF_ACT,PRGC_ACT,PRMF_ACT,PRMP_ACT,PRIE_ACT,PRAE_ACT,PRVE_ACT,PRGM_ACT,PRGV_ACT,PDFF_ACT,PDGC_ACT,PDGM_ACT,PDGV_ACT,PLEF_ACT,TOTAL_UNIT_PRV,PRCF_PRV,PREF_PRV,PRFF_PRV,PRGC_PRV,PRMF_PRV,PRMP_PRV,PRIE_PRV,PRAE_PRV,PRVE_PRV,PRGM_PRV,PRGV_PRV,PDFF_PRV,PDGC_PRV,PDGM_PRV,PDGV_PRV,PLEF_PRV,BASIC_PREMIUM_PREV,STFLAG,SIOFLAG,BILLCHNL_PRV,FUPCODE_FOR_PBC,REQUEST_DATE_FOR_PBC,PRNV,PPHPLUS_PLAN_TYPE,PDNV,PPHPLUS_CAMPAIGN_FLAG,CODE_PRUTOP_CCB61,AGE_ENTRY_PRUTOP_CCB61,CRRCD_PRUTOP_CCB61,CODE_PRUTOP_CCB34,AGE_ENTRY_PRUTOP_CCB34,CRRCD_PRUTOP_CCB34,CODE_PRUTOP_ESCC,AGE_ENTRY_PRUTOP_ESCC,CRRCD_PRUTOP_ESCC,IFRS_ONEROUS_GRP,IFRS_CY_GRP,IFRS_PORT_GRP,IFRS_MEASURE_MODEL,BASIC_ENTRY_YEAR,BASIC_ENTRY_MONTH,IFRS_CB_TERM_M,MTHS_TO_SALE,IFRS_ICG_ID,IFRS_ICG_ID_PROPHET,SUB_GROUP_ID,ENTITY_ID,CB_START_DT,CB_END_DT,REL_INSURANCE_CONTRACT_GROUP_ID, 
	EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE,@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
	@BATCH_RUN_ID AS BATCH_RUN_ID,
	@JOB_MASTER_ID AS JOB_MASTER_ID,
	@JOB_RUN_ID  AS JOB_RUN_ID,
	@BATCHDATESTR AS BATCHDATE,
	@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
	FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION
)A;

---delete insert FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
DELETE FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_RESVPIA_REGION_HIS SELECT A.* FROM ( 	SELECT CHDRNUM,CRTABLE,ANBCCD,SEX,PCESSTRM,INSTOT,SUMINS,MORTCLS,HOISSDTE,CRRCD,TOPUPAMNT,WDRAMNT,TTLFUND,PRCF,PREF,PRFF,PRMF,PDMF,STATCODE,SLSCNL,CHGDTE,CURYRTUP,TOPUPLAST,BILCHNL,CLNTCODE,CLTPHONE01,CLTPHONE02,LIFCNUM,AGNTNUM,AGTNAME,DTEAPP,DTETRM,TSALESUNT,UNITNUM,UNITNAME,REGION,PRMP,PRODCAT,TPDCLAIM,ADDR04CITY,ADDR05PROV,SPEF,SPMF,SPFF,SPCF,SPMP,SPDF,SPTTLAMNT,TOPUPEF,TOPUPMF,TOPUPFF,TOPUPCF,TOPUPMP,TOPUPDF,TTTLTOPUP,WITHEF,WITHMF,WITHFF,WITHCF,WITHMP,WITHDF,TTLWITHAMT,LOADINGEXT,CLTDOB,MEDPRVIND,CNTCURR,ZZSRCE,UALPCTA,UALPCTB,UALPCTC,UALPCTD,UALPCTE,UALPCTF,CODE,ZLONGDESC,ACTVALUE,SURRDATE,LSTWDWDATE,LSTTOPDATE,PRGC,PDGC,SPRGC,SPDGC,TOPUPRGC,TOPUPGDC,WITHRGC,WITHDGC,UALPCTG,UALPCTH,PREP,SPEP,TOPUPEP,WITHEP,UALPCTI,PRIEF,SPRIEF,TUPRIEF,WDPRIEF,PRIEFPCT,REGIONFLG,PRVEF,SPRVEF,TUPRVEF,WDPRVEF,PRVEFPCT,PRAEF,SPRAEF,TUPRAEF,WDPRAEF,PRAEFPCT,PDIEF,LBIND,BASPRCF,BASPREF,BASPRFF,BASPRMF,BASPDMF,BASPRMPF,BASPRGCEF,BASPDGCEF,BASPREPF,BASPRIE,BASPRVE,BASPRAE,TOPPRCF,TOPPREF,TOPPRFF,TOPPRMF,TOPPDMF,TOPPRMPF,TOPPRGCEF,TOPPDGCEF,TOPPREPF,TOPPRIE,TOPPRVE,TOPPRAE,TOTBASFUND,TOTTOPFUND,PDGV,PDGM,PRGV,PRGM,PREC,PSEC,PDMM,PDIF,PDNV,SPMM,SPIF,SPNV,TOPUPMM,TOPUPIF,TOPUPNV,WITHMM,WITHIF,WITHNV,UALPCTJ,UALPCTK,UALPCTL,BASPDMM,BASPDIF,BASPDNV,TOPPDMM,TOPPDIF,TOPPDNV,PDFI,SPFI,TOPUPFI,WITHFI,UALPCTM,BASPDFI,TOPPDFI,PRNV,SPPR,TOPUPPR,WITHPR,UALPCTN,BASPDPR,TOPPDPR,PDGT,SPGT,TOPUPGT,WITHGT,UALPCTO,BASPDGT,TOPPDGT,IFRS_ONEROUS_GRP,IFRS_CY_GRP,IFRS_PORT_GRP,IFRS_MEASURE_MODEL,BASIC_ENTRY_YEAR,BASIC_ENTRY_MONTH,IFRS_CB_TERM_M,MTHS_TO_SALE,IFRS_ICG_ID,IFRS_ICG_ID_PROPHET,SUB_GROUP_ID,ENTITY_ID,CURRENCY,CB_START_DT,CB_END_DT,REL_INSURANCE_CONTRACT_GROUP_ID,SUBSYSTEM,CREATED_DATE,UPDATED_DATE,
@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
@BATCH_RUN_ID AS BATCH_RUN_ID,
@JOB_MASTER_ID AS JOB_MASTER_ID,
@JOB_RUN_ID  AS JOB_RUN_ID,
@BATCHDATESTR AS BATCHDATE,
@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME, 
EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE 
FROM FOND_ID.FOND_IFRS17_RESVPIA_REGION )A;

---DELETE FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
DELETE FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
WHERE CAST(BACKUP_BATCHDATE AS DATE) = EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE)));

INSERT INTO FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED_HIS
SELECT A.*
FROM (
	SELECT [PRODUCT_CD],[BENEFIT_CD],[CHDRNUM],[CRTABLE],[ANBCCD],[SEX],[MORTCLS],[PRMTRM],[RSKTRM],[PREMI],[BILLFREQ],[SUMINS],[TOTBON],[PTDATE],[HOISSDTE],[CRRCD],[RCESDTE],[CNTCURR],[STATCODE],[CURRFROM],[ZLINSTPREM],[BPAYTY],[BPAYNY],[SLSCNL],[BILLCHNL],[ZPDFSURR],[CLTPHONE01],[CLTPHONE02],[LIFCNUM],[AGNTNUM],[DTEAPP],[DTETRM],[TSALESUNT],[REPORTAG],[COLUMN_NULL1],[COLUMN_ZERO1],[FUND],[COLUMN_NULL2],[CLTADDR04],[CLTADDR05],[COLUMN_ZERO2],[CLTDOB],[MEDFLG],[PLAN_TRAD],[MODE],[PRUBP],[CHANNEL],[SRCEBUS],[REASONCD],[LONGDESC],[COLUMN 48],[PRUSEHAT_SOLUTION_PLAN_TYPE],[SUBSTANDARD_LOADING],[IFRS_ONEROUS_GRP],[IFRS_CY_GRP],[IFRS_PORT_GRP],[IFRS_MEASURE_MODEL],[BASIC_ENTRY_YEAR],[BASIC_ENTRY_MONTH],[IFRS_CB_TERM_M],[MTHS_TO_SALE],[IFRS_ICG_ID],[IFRS_ICG_ID_PROPHET],[SUB_GROUP_ID],[ENTITY_ID],[CB_START_DT],[CB_END_DT],[REL_INSURANCE_CONTRACT_GROUP_ID],
	EOMONTH(CONVERT(DATE, CONVERT(CHAR(10), @V_START_DATE))) AS BACKUP_BATCHDATE,
	@BATCH_MASTER_ID AS BATCH_MASTER_ID, 
	@BATCH_RUN_ID AS BATCH_RUN_ID,
	@JOB_MASTER_ID AS JOB_MASTER_ID,
	@JOB_RUN_ID  AS JOB_RUN_ID,
	@BATCHDATESTR AS BATCHDATE,
	@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
	FROM FOND_ID.FOND_IFRS17_TRADITIONAL_ACT_USED
)A;

END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
