CREATE PROC [FOND_ID].[USP_IFRS17_PROPHETU_REGION_AOM_MI_RIDER] @BATCHDATESTR [NVARCHAR](10),@JOBNAMESTR [NVARCHAR](2000),@PRD_ID [INTEGER] AS

BEGIN
DECLARE @V_START			DATETIME,
		@V_END				DATETIME,
		@V_DURATION			DATETIME,
		@V_FUNCTION_NAME	VARCHAR(100),
		@V_DESCRIPTION		VARCHAR(100),
		@V_CMD				VARCHAR(100),
		@V_SEQNO			INTEGER,
		@V_PRD_ID			INTEGER,
		@V_CREATED_DATE		DATETIME,
		@V_START_DATE		DATE,
		@V_END_DATE			DATE,
------START GET RUN ID DETAIL FROM ABC------
 @BATCH_MASTER_ID    VARCHAR(20) = 0,
 @BATCH_RUN_ID       VARCHAR(20) = 0,
 @JOB_MASTER_ID      VARCHAR(20) = 0,
 @JOB_RUN_ID         VARCHAR(20) = 0,
 @GMT_START_DTTM     VARCHAR(20) = GETDATE();
 
EXEC STAG_ID.USP_GetRunIdReturn
  @JobName        = @JOBNAMESTR,
  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
------END GET RUN ID DETAIL FROM ABC--------- 	


SET @BATCHDATESTR = CAST(EOMONTH(CAST(CONCAT(SUBSTRING(@BATCHDATESTR,0,5),'-',SUBSTRING(@BATCHDATESTR,5,2),'-01') AS DATE)) AS VARCHAR(10));
SET @PRD_ID = CONCAT(SUBSTRING(CAST(@PRD_ID AS VARCHAR),0,5),SUBSTRING(CAST(@PRD_ID AS VARCHAR),5,2),'01');

SET @V_FUNCTION_NAME = 'FOND_ID.USP_IFRS17_PROPHETU_REGION_AOM_MI_RIDER';
SET @V_SEQNO = 1;
SET @V_START_DATE = CONVERT(DATE, CONVERT(CHAR(10), @PRD_ID));
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('Start ', @V_FUNCTION_NAME, ' : ', @V_START_DATE)


BEGIN TRY

IF OBJECT_ID('tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP;
IF OBJECT_ID('tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP', 'U') IS NOT NULL DROP TABLE tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP;

IF OBJECT_ID('FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER', 'U') IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER;
IF OBJECT_ID('FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER','U') IS NOT NULL DROP TABLE FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER;


---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP
---------------------------------------------------------------------
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

PRINT('JOB IS STARTED WITH BATCHDATESTR=' + @BATCHDATESTR + ' AND PRD_ID=' + CAST(@PRD_ID AS VARCHAR));
PRINT(CONCAT(YEAR(@BATCHDATESTR)-1,'-12-31'));

CREATE TABLE tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP
WITH
(
    DISTRIBUTION = ROUND_ROBIN,
    CLUSTERED COLUMNSTORE INDEX
)
AS
	SELECT * FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS A
	WHERE BACKUP_BATCHDATE = CAST(CONCAT(YEAR(@BATCHDATESTR)-1,'-12-31') AS DATE)
;


---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP
---------------------------------------------------------------------
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

CREATE TABLE tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP
WITH
(
    DISTRIBUTION = ROUND_ROBIN,
    CLUSTERED COLUMNSTORE INDEX
)
AS
SELECT * FROM FOND_ID.FOND_IFRS17_PROPHETU_REGION_HIS A
	WHERE YEAR(BACKUP_BATCHDATE) = YEAR(CAST(@BATCHDATESTR AS DATE)) AND MONTH(BACKUP_BATCHDATE) = MONTH(CAST(@BATCHDATESTR AS DATE))
;

---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER
--- ADDED BY DYAH 20/5/22
---------------------------------------------------------------------
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

CREATE TABLE FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER
WITH
(
  DISTRIBUTION = HASH(CHDRNUM),
  HEAP
)
AS
SELECT
	SOP.[CHDRNUM]
	,(CASE
		WHEN (SOP.[CRTABLECC] = '' OR SOP.[CRTABLECC] IS NULL) AND (EOP.[CRTABLECC] <> '' OR EOP.[CRTABLECC] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLECC] <> '' OR SOP.[CRTABLECC] IS NOT NULL) AND (EOP.[CRTABLECC] <> '' OR EOP.[CRTABLECC] IS NOT NULL) AND SOP.[CRTABLECC] <> EOP.[CRTABLECC] THEN 'CONVERT'
		WHEN (SOP.[CRTABLECC] <> '' OR SOP.[CRTABLECC] IS NOT NULL) AND (EOP.[CRTABLECC] <> '' OR EOP.[CRTABLECC] IS NOT NULL) AND SOP.[CRTABLECC] = EOP.[CRTABLECC] THEN 'SAME'
		WHEN (SOP.[CRTABLECC] <> '' OR SOP.[CRTABLECC] IS NOT NULL) AND ((EOP.[CRTABLECC] = '' OR EOP.[CRTABLECC] IS NULL) OR EOP.[CRTABLECC] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLECC] = '' OR SOP.[CRTABLECC] IS NULL) AND (EOP.[CRTABLECC] = '' OR EOP.[CRTABLECC] IS NULL) THEN ''
	END) AS [CRTABLECC]
	,(CASE
		WHEN (SOP.[CRTABLEAD] = '' OR SOP.[CRTABLEAD] IS NULL) AND (EOP.[CRTABLEAD] <> '' OR EOP.[CRTABLEAD] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLEAD] <> '' OR SOP.[CRTABLEAD] IS NOT NULL) AND (EOP.[CRTABLEAD] <> '' OR EOP.[CRTABLEAD] IS NOT NULL) AND SOP.[CRTABLEAD] <> EOP.[CRTABLEAD] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEAD] <> '' OR SOP.[CRTABLEAD] IS NOT NULL) AND (EOP.[CRTABLEAD] <> '' OR EOP.[CRTABLEAD] IS NOT NULL) AND SOP.[CRTABLEAD] = EOP.[CRTABLEAD] THEN 'SAME'
		WHEN (SOP.[CRTABLEAD] <> '' OR SOP.[CRTABLEAD] IS NOT NULL) AND (EOP.[CRTABLEAD] = '' OR EOP.[CRTABLEAD] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEAD] = '' OR SOP.[CRTABLEAD] IS NULL) AND (EOP.[CRTABLEAD] = '' OR EOP.[CRTABLEAD] IS NULL) THEN ''
	END) AS [CRTABLEAD]
	,(CASE
		WHEN (SOP.[CRTABLEADD] = '' OR SOP.[CRTABLEADD] IS NULL) AND (EOP.[CRTABLEADD] <> '' OR EOP.[CRTABLEADD] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLEADD] <> '' OR SOP.[CRTABLEADD] IS NOT NULL) AND (EOP.[CRTABLEADD] <> '' OR EOP.[CRTABLEADD] IS NOT NULL) AND SOP.[CRTABLEADD] <> EOP.[CRTABLEADD] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEADD] <> '' OR SOP.[CRTABLEADD] IS NOT NULL) AND (EOP.[CRTABLEADD] <> '' OR EOP.[CRTABLEADD] IS NOT NULL) AND SOP.[CRTABLEADD] = EOP.[CRTABLEADD] THEN 'SAME'
		WHEN (SOP.[CRTABLEADD] <> '' OR SOP.[CRTABLEADD] IS NOT NULL) AND (EOP.[CRTABLEADD] = '' OR EOP.[CRTABLEADD] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEADD] = '' OR SOP.[CRTABLEADD] IS NULL) AND (EOP.[CRTABLEADD] = '' OR EOP.[CRTABLEADD] IS NULL) THEN ''
	END) AS [CRTABLEADD]
	,(CASE
		WHEN (SOP.[CRTABLEHB] = '' OR SOP.[CRTABLEHB] IS NULL) AND EOP.[CRTABLEHB] <> '' THEN 'NEW'
		WHEN (SOP.[CRTABLEHB] <> '' OR SOP.[CRTABLEHB] IS NOT NULL) AND EOP.[CRTABLEHB] <> '' AND SOP.[CRTABLEHB] <> EOP.[CRTABLEHB] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEHB] <> '' OR SOP.[CRTABLEHB] IS NOT NULL) AND EOP.[CRTABLEHB] <> '' AND SOP.[CRTABLEHB] = EOP.[CRTABLEHB] THEN 'SAME'
		WHEN (SOP.[CRTABLEHB] <> '' OR SOP.[CRTABLEHB] IS NOT NULL) AND (EOP.[CRTABLEHB] = '' OR EOP.[CRTABLEHB] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEHB] = '' OR SOP.[CRTABLEHB] IS NULL) AND (EOP.[CRTABLEHB] = '' OR EOP.[CRTABLEHB] IS NULL) THEN ''
	END) AS [CRTABLEHB]
	,(CASE
		WHEN (SOP.[CRTABLEWVR] = '' OR SOP.[CRTABLEWVR] IS NULL) AND (EOP.[CRTABLEWVR] <> '' OR EOP.[CRTABLEWVR] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLEWVR] <> '' OR SOP.[CRTABLEWVR] IS NOT NULL) AND (EOP.[CRTABLEWVR] <> '' OR EOP.[CRTABLEWVR] IS NOT NULL) AND SOP.[CRTABLEWVR] <> EOP.[CRTABLEWVR] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEWVR] <> '' OR SOP.[CRTABLEWVR] IS NOT NULL) AND (EOP.[CRTABLEWVR] <> '' OR EOP.[CRTABLEWVR] IS NOT NULL) AND SOP.[CRTABLEWVR] = EOP.[CRTABLEWVR] THEN 'SAME'
		WHEN (SOP.[CRTABLEWVR] <> '' OR SOP.[CRTABLEWVR] IS NOT NULL) AND (EOP.[CRTABLEWVR] = '' OR EOP.[CRTABLEWVR] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEWVR] = '' OR SOP.[CRTABLEWVR] IS NULL) AND (EOP.[CRTABLEWVR] = '' OR EOP.[CRTABLEWVR] IS NULL) THEN ''
	END) AS [CRTABLEWVR]
	,(CASE
		WHEN (SOP.[CRTABLESPO] = '' OR SOP.[CRTABLESPO] IS NULL) AND (EOP.[CRTABLESPO] <> '' OR EOP.[CRTABLESPO] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLESPO] <> '' OR SOP.[CRTABLESPO] IS NOT NULL) AND (EOP.[CRTABLESPO] <> '' OR EOP.[CRTABLESPO] IS NOT NULL) AND SOP.[CRTABLESPO] <> EOP.[CRTABLESPO] THEN 'CONVERT'
		WHEN (SOP.[CRTABLESPO] <> '' OR SOP.[CRTABLESPO] IS NOT NULL) AND (EOP.[CRTABLESPO] <> '' OR EOP.[CRTABLESPO] IS NOT NULL) AND SOP.[CRTABLESPO] = EOP.[CRTABLESPO] THEN 'SAME'
		WHEN (SOP.[CRTABLESPO] <> '' OR SOP.[CRTABLESPO] IS NOT NULL) AND (EOP.[CRTABLESPO] = '' OR EOP.[CRTABLESPO] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLESPO] = '' OR SOP.[CRTABLESPO] IS NULL) AND (EOP.[CRTABLESPO] = '' OR EOP.[CRTABLESPO] IS NULL) THEN ''
	END) AS [CRTABLESPO]
	,(CASE
		WHEN (SOP.[CRTABLECCP] = '' OR SOP.[CRTABLECCP] IS NULL) AND (EOP.[CRTABLECCP] <> '' OR EOP.[CRTABLECCP] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLECCP] <> '' OR SOP.[CRTABLECCP] IS NOT NULL) AND (EOP.[CRTABLECCP] <> '' OR EOP.[CRTABLECCP] IS NOT NULL) AND SOP.[CRTABLECCP] <> EOP.[CRTABLECCP] THEN 'CONVERT'
		WHEN (SOP.[CRTABLECCP] <> '' OR SOP.[CRTABLECCP] IS NOT NULL) AND (EOP.[CRTABLECCP] <> '' OR EOP.[CRTABLECCP] IS NOT NULL) AND SOP.[CRTABLECCP] = EOP.[CRTABLECCP] THEN 'SAME'
		WHEN (SOP.[CRTABLECCP] <> '' OR SOP.[CRTABLECCP] IS NOT NULL) AND (EOP.[CRTABLECCP] = '' OR EOP.[CRTABLECCP] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLECCP] = '' OR SOP.[CRTABLECCP] IS NULL) AND (EOP.[CRTABLECCP] = '' OR EOP.[CRTABLECCP] IS NULL) THEN ''
	END) AS [CRTABLECCP]
	,(CASE
		WHEN (SOP.[CRTABLHS] = '' OR SOP.[CRTABLHS] IS NULL) AND (EOP.[CRTABLHS] <> '' OR EOP.[CRTABLHS] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLHS] <> '' OR SOP.[CRTABLHS] IS NOT NULL) AND (EOP.[CRTABLHS] <> '' OR EOP.[CRTABLHS] IS NOT NULL) AND SOP.[CRTABLHS] <> EOP.[CRTABLHS] THEN 'CONVERT'
		WHEN (SOP.[CRTABLHS] <> '' OR SOP.[CRTABLHS] IS NOT NULL) AND (EOP.[CRTABLHS] <> '' OR EOP.[CRTABLHS] IS NOT NULL) AND SOP.[CRTABLHS] = EOP.[CRTABLHS] THEN 'SAME'
		WHEN (SOP.[CRTABLHS] <> '' OR SOP.[CRTABLHS] IS NOT NULL) AND (EOP.[CRTABLHS] = '' OR EOP.[CRTABLHS] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLHS] = '' OR SOP.[CRTABLHS] IS NULL) AND (EOP.[CRTABLHS] = '' OR EOP.[CRTABLHS] IS NULL) THEN ''
	END) AS [CRTABLHS]
	,(CASE
		WHEN (SOP.[CRTABLLT] = '' OR SOP.[CRTABLLT] IS NULL) AND (EOP.[CRTABLLT] <> '' OR EOP.[CRTABLLT] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLLT] <> '' OR SOP.[CRTABLLT] IS NOT NULL) AND (EOP.[CRTABLLT] <> '' OR EOP.[CRTABLLT] IS NOT NULL) AND SOP.[CRTABLLT] <> EOP.[CRTABLLT] THEN 'CONVERT'
		WHEN (SOP.[CRTABLLT] <> '' OR SOP.[CRTABLLT] IS NOT NULL) AND (EOP.[CRTABLLT] <> '' OR EOP.[CRTABLLT] IS NOT NULL) AND SOP.[CRTABLLT] = EOP.[CRTABLLT] THEN 'SAME'
		WHEN (SOP.[CRTABLLT] <> '' OR SOP.[CRTABLLT] IS NOT NULL) AND (EOP.[CRTABLLT] = '' OR EOP.[CRTABLLT] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLLT] = '' OR SOP.[CRTABLLT] IS NULL) AND (EOP.[CRTABLLT] = '' OR EOP.[CRTABLLT] IS NULL) THEN ''
	END) AS [CRTABLLT]
	,(CASE
		WHEN (SOP.[CRTABL3LF] = '' OR SOP.[CRTABL3LF] IS NULL) AND (EOP.[CRTABL3LF] <> '' OR EOP.[CRTABL3LF] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABL3LF] <> '' OR SOP.[CRTABL3LF] IS NOT NULL) AND (EOP.[CRTABL3LF] <> '' OR EOP.[CRTABL3LF] IS NOT NULL) AND SOP.[CRTABL3LF] <> EOP.[CRTABL3LF] THEN 'CONVERT'
		WHEN (SOP.[CRTABL3LF] <> '' OR SOP.[CRTABL3LF] IS NOT NULL) AND (EOP.[CRTABL3LF] <> '' OR EOP.[CRTABL3LF] IS NOT NULL) AND SOP.[CRTABL3LF] = EOP.[CRTABL3LF] THEN 'SAME'
		WHEN (SOP.[CRTABL3LF] <> '' OR SOP.[CRTABL3LF] IS NOT NULL) AND (EOP.[CRTABL3LF] = '' OR EOP.[CRTABL3LF] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABL3LF] = '' OR SOP.[CRTABL3LF] IS NULL) AND (EOP.[CRTABL3LF] = '' OR EOP.[CRTABL3LF] IS NULL) THEN ''
	END) AS [CRTABL3LF]
	,(CASE
		WHEN (SOP.[CRTABLECI] = '' OR SOP.[CRTABLECI] IS NULL) AND (EOP.[CRTABLECI] <> '' OR EOP.[CRTABLECI] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLECI] <> '' OR SOP.[CRTABLECI] IS NOT NULL) AND (EOP.[CRTABLECI] <> '' OR EOP.[CRTABLECI] IS NOT NULL) AND SOP.[CRTABLECI]<> EOP.[CRTABLECI]THEN 'CONVERT'
		WHEN (SOP.[CRTABLECI] <> '' OR SOP.[CRTABLECI] IS NOT NULL) AND (EOP.[CRTABLECI] <> '' OR EOP.[CRTABLECI] IS NOT NULL) AND SOP.[CRTABLECI]= EOP.[CRTABLECI]THEN 'SAME'
		WHEN (SOP.[CRTABLECI] <> '' OR SOP.[CRTABLECI] IS NOT NULL) AND (EOP.[CRTABLECI] = '' OR EOP.[CRTABLECI] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLECI] = '' OR SOP.[CRTABLECI] IS NULL) AND (EOP.[CRTABLECI]= '' OR EOP.[CRTABLECI] IS NULL) THEN ''
	END) AS [CRTABLECI]
	,(CASE
		WHEN (SOP.[CRTABLEMCC] = '' OR SOP.[CRTABLEMCC] IS NULL) AND (EOP.[CRTABLEMCC] <> '' OR EOP.[CRTABLEMCC] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLEMCC] <> '' OR SOP.[CRTABLEMCC] IS NOT NULL) AND (EOP.[CRTABLEMCC] <> '' OR EOP.[CRTABLEMCC] IS NOT NULL) AND SOP.[CRTABLEMCC] <> EOP.[CRTABLEMCC] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEMCC] <> '' OR SOP.[CRTABLEMCC] IS NOT NULL) AND (EOP.[CRTABLEMCC] <> '' OR EOP.[CRTABLEMCC] IS NOT NULL) AND SOP.[CRTABLEMCC] = EOP.[CRTABLEMCC] THEN 'SAME'
		WHEN (SOP.[CRTABLEMCC] <> '' OR SOP.[CRTABLEMCC] IS NOT NULL) AND (EOP.[CRTABLEMCC] = '' OR EOP.[CRTABLEMCC] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEMCC] = '' OR SOP.[CRTABLEMCC] IS NULL) AND (EOP.[CRTABLEMCC] = '' OR EOP.[CRTABLEMCC] IS NULL) THEN ''
	END) AS [CRTABLEMCC]
	,(CASE
		WHEN (SOP.[PRODCDE] = '' OR SOP.[PRODCDE] IS NULL) AND (EOP.[PRODCDE] <> '' OR EOP.[PRODCDE] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[PRODCDE] <> '' OR SOP.[PRODCDE] IS NOT NULL) AND (EOP.[PRODCDE] <> '' OR EOP.[PRODCDE] IS NOT NULL) AND SOP.[PRODCDE] <> EOP.[PRODCDE] THEN 'CONVERT'
		WHEN (SOP.[PRODCDE] <> '' OR SOP.[PRODCDE] IS NOT NULL) AND (EOP.[PRODCDE] <> '' OR EOP.[PRODCDE] IS NOT NULL) AND SOP.[PRODCDE] = EOP.[PRODCDE] THEN 'SAME'
		WHEN (SOP.[PRODCDE] <> '' OR SOP.[PRODCDE] IS NOT NULL) AND (EOP.[PRODCDE] = '' OR EOP.[PRODCDE] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[PRODCDE] = '' OR SOP.[PRODCDE] IS NULL) AND (EOP.[PRODCDE] = '' OR EOP.[PRODCDE] IS NULL) THEN ''
	END) AS [PRODCDE]
	,(CASE
		WHEN (SOP.[CRTABLEJCC] = '' OR SOP.[CRTABLEJCC] IS NULL) AND (EOP.[CRTABLEJCC] <> '' OR EOP.[CRTABLEJCC] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLEJCC] <> '' OR SOP.[CRTABLEJCC] IS NOT NULL) AND (EOP.[CRTABLEJCC] <> '' OR EOP.[CRTABLEJCC] IS NOT NULL) AND SOP.[CRTABLEJCC] <> EOP.[CRTABLEJCC] THEN 'CONVERT'
		WHEN (SOP.[CRTABLEJCC] <> '' OR SOP.[CRTABLEJCC] IS NOT NULL) AND (EOP.[CRTABLEJCC] <> '' OR EOP.[CRTABLEJCC] IS NOT NULL) AND SOP.[CRTABLEJCC] = EOP.[CRTABLEJCC] THEN 'SAME'
		WHEN (SOP.[CRTABLEJCC] <> '' OR SOP.[CRTABLEJCC] IS NOT NULL) AND (EOP.[CRTABLEJCC] = '' OR EOP.[CRTABLEJCC] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLEJCC] = '' OR SOP.[CRTABLEJCC] IS NULL) AND (EOP.[CRTABLEJCC] = '' OR EOP.[CRTABLEJCC] IS NULL) THEN ''
	END) AS [CRTABLEJCC]
	,(CASE
		WHEN (SOP.[EDUPAR1C] = '' OR SOP.[EDUPAR1C] IS NULL) AND (EOP.[EDUPAR1C] <> '' OR EOP.[EDUPAR1C] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[EDUPAR1C] <> '' OR SOP.[EDUPAR1C] IS NOT NULL) AND (EOP.[EDUPAR1C] <> '' OR EOP.[EDUPAR1C] IS NOT NULL) AND SOP.[EDUPAR1C] <> EOP.[EDUPAR1C] THEN 'CONVERT'
		WHEN (SOP.[EDUPAR1C] <> '' OR SOP.[EDUPAR1C] IS NOT NULL) AND (EOP.[EDUPAR1C] <> '' OR EOP.[EDUPAR1C] IS NOT NULL) AND SOP.[EDUPAR1C] = EOP.[EDUPAR1C] THEN 'SAME'
		WHEN (SOP.[EDUPAR1C] <> '' OR SOP.[EDUPAR1C] IS NOT NULL) AND (EOP.[EDUPAR1C] = '' OR EOP.[EDUPAR1C] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[EDUPAR1C] = '' OR SOP.[EDUPAR1C] IS NULL) AND (EOP.[EDUPAR1C] = '' OR EOP.[EDUPAR1C] IS NULL) THEN ''
	END) AS [EDUPAR1C]
	,(CASE
		WHEN (SOP.[EDUPAR2C] = '' OR SOP.[EDUPAR2C] IS NULL) AND (EOP.[EDUPAR2C] <> '' OR EOP.[EDUPAR2C] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[EDUPAR2C] <> '' OR SOP.[EDUPAR2C] IS NOT NULL) AND (EOP.[EDUPAR2C] <> '' OR EOP.[EDUPAR2C] IS NOT NULL) AND SOP.[EDUPAR2C] <> EOP.[EDUPAR2C] THEN 'CONVERT'
		WHEN (SOP.[EDUPAR2C] <> '' OR SOP.[EDUPAR2C] IS NOT NULL) AND (EOP.[EDUPAR2C] <> '' OR EOP.[EDUPAR2C] IS NOT NULL) AND SOP.[EDUPAR2C] = EOP.[EDUPAR2C] THEN 'SAME'
		WHEN (SOP.[EDUPAR2C] <> '' OR SOP.[EDUPAR2C] IS NOT NULL) AND (EOP.[EDUPAR2C] = '' OR EOP.[EDUPAR2C] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[EDUPAR2C] = '' OR SOP.[EDUPAR2C] IS NULL) AND (EOP.[EDUPAR2C] = '' OR EOP.[EDUPAR2C] IS NULL) THEN ''
	END) AS [EDUPAR2C]
	,(CASE
		WHEN (SOP.[CRTABL3LT] = '' OR SOP.[CRTABL3LT] IS NULL) AND (EOP.[CRTABL3LT] <> '' OR EOP.[CRTABL3LT] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABL3LT] <> '' OR SOP.[CRTABL3LT] IS NOT NULL) AND (EOP.[CRTABL3LT] <> '' OR EOP.[CRTABL3LT] IS NOT NULL) AND SOP.[CRTABL3LT] <> EOP.[CRTABL3LT] THEN 'CONVERT'
		WHEN (SOP.[CRTABL3LT] <> '' OR SOP.[CRTABL3LT] IS NOT NULL) AND (EOP.[CRTABL3LT] <> '' OR EOP.[CRTABL3LT] IS NOT NULL) AND SOP.[CRTABL3LT] = EOP.[CRTABL3LT] THEN 'SAME'
		WHEN (SOP.[CRTABL3LT] <> '' OR SOP.[CRTABL3LT] IS NOT NULL) AND (EOP.[CRTABL3LT] = '' OR EOP.[CRTABL3LT] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABL3LT] = '' OR SOP.[CRTABL3LT] IS NULL) AND (EOP.[CRTABL3LT] = '' OR EOP.[CRTABL3LT] IS NULL) THEN ''
	END) AS [CRTABL3LT]
	,(CASE
		WHEN (SOP.[CRTABLECCB] = '' OR SOP.[CRTABLECCB] IS NULL) AND (EOP.[CRTABLECCB] <> '' OR EOP.[CRTABLECCB] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CRTABLECCB] <> '' OR SOP.[CRTABLECCB] IS NOT NULL) AND (EOP.[CRTABLECCB] <> '' OR EOP.[CRTABLECCB] IS NOT NULL) AND SOP.[CRTABLECCB] <> EOP.[CRTABLECCB] THEN 'CONVERT'
		WHEN (SOP.[CRTABLECCB] <> '' OR SOP.[CRTABLECCB] IS NOT NULL) AND (EOP.[CRTABLECCB] <> '' OR EOP.[CRTABLECCB] IS NOT NULL) AND SOP.[CRTABLECCB] = EOP.[CRTABLECCB] THEN 'SAME'
		WHEN (SOP.[CRTABLECCB] <> '' OR SOP.[CRTABLECCB] IS NOT NULL) AND (EOP.[CRTABLECCB] = '' OR EOP.[CRTABLECCB] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CRTABLECCB] = '' OR SOP.[CRTABLECCB] IS NULL) AND (EOP.[CRTABLECCB] = '' OR EOP.[CRTABLECCB] IS NULL) THEN ''
	END) AS [CRTABLECCB]
	,(CASE
		WHEN (SOP.[CODE_CHC] = '' OR SOP.[CODE_CHC] IS NULL) AND (EOP.[CODE_CHC] <> '' OR EOP.[CODE_CHC] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CODE_CHC] <> '' OR SOP.[CODE_CHC] IS NOT NULL) AND (EOP.[CODE_CHC] <> '' OR EOP.[CODE_CHC] IS NOT NULL) AND SOP.[CODE_CHC] <> EOP.[CODE_CHC] THEN 'CONVERT'
		WHEN (SOP.[CODE_CHC] <> '' OR SOP.[CODE_CHC] IS NOT NULL) AND (EOP.[CODE_CHC] <> '' OR EOP.[CODE_CHC] IS NOT NULL) AND SOP.[CODE_CHC] = EOP.[CODE_CHC] THEN 'SAME'
		WHEN (SOP.[CODE_CHC] <> '' OR SOP.[CODE_CHC] IS NOT NULL) AND (EOP.[CODE_CHC] = '' OR EOP.[CODE_CHC] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CODE_CHC] = '' OR SOP.[CODE_CHC] IS NULL) AND (EOP.[CODE_CHC] = '' OR EOP.[CODE_CHC] IS NULL) THEN ''
	END) AS [CODE_CHC]
	,(CASE
		WHEN (SOP.[CODE_DISABLE] = '' OR SOP.[CODE_DISABLE] IS NULL) AND (EOP.[CODE_DISABLE] <> '' OR EOP.[CODE_DISABLE] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CODE_DISABLE] <> '' OR SOP.[CODE_DISABLE] IS NOT NULL) AND (EOP.[CODE_DISABLE] <> '' OR EOP.[CODE_DISABLE] IS NOT NULL) AND SOP.[CODE_DISABLE] <> EOP.[CODE_DISABLE] THEN 'CONVERT'
		WHEN (SOP.[CODE_DISABLE] <> '' OR SOP.[CODE_DISABLE] IS NOT NULL) AND (EOP.[CODE_DISABLE] <> '' OR EOP.[CODE_DISABLE] IS NOT NULL) AND SOP.[CODE_DISABLE] = EOP.[CODE_DISABLE] THEN 'SAME'
		WHEN (SOP.[CODE_DISABLE] <> '' OR SOP.[CODE_DISABLE] IS NOT NULL) AND (EOP.[CODE_DISABLE] = '' OR EOP.[CODE_DISABLE] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CODE_DISABLE] = '' OR SOP.[CODE_DISABLE] IS NULL) AND (EOP.[CODE_DISABLE] = '' OR EOP.[CODE_DISABLE] IS NULL) THEN ''
	END) AS [CODE_DISABLE]
	,(CASE
		WHEN (SOP.[PPHPLUS_PLAN_TYPE] = '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] <> '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[PPHPLUS_PLAN_TYPE] <> '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] <> '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) AND SOP.[PPHPLUS_PLAN_TYPE] <> EOP.[PPHPLUS_PLAN_TYPE] THEN 'CONVERT'
		WHEN (SOP.[PPHPLUS_PLAN_TYPE] <> '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] <> '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) AND SOP.[PPHPLUS_PLAN_TYPE] = EOP.[PPHPLUS_PLAN_TYPE] THEN 'SAME'
		WHEN (SOP.[PPHPLUS_PLAN_TYPE] <> '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] = '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[PPHPLUS_PLAN_TYPE] = '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] = '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NULL) THEN ''
	END) AS [PPHPLUS_PLAN_TYPE]
	,(CASE
		WHEN (SOP.[CODE_PRUTOP_CCB61] = '' OR SOP.[CODE_PRUTOP_CCB61] IS NULL) AND (EOP.[CODE_PRUTOP_CCB61] <> '' OR EOP.[CODE_PRUTOP_CCB61] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CODE_PRUTOP_CCB61] <> '' OR SOP.[CODE_PRUTOP_CCB61] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB61] <> '' OR EOP.[CODE_PRUTOP_CCB61] IS NOT NULL) AND SOP.[CODE_PRUTOP_CCB61] <> EOP.[CODE_PRUTOP_CCB61] THEN 'CONVERT'
		WHEN (SOP.[CODE_PRUTOP_CCB61] <> '' OR SOP.[CODE_PRUTOP_CCB61] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB61] <> '' OR EOP.[CODE_PRUTOP_CCB61] IS NOT NULL) AND SOP.[CODE_PRUTOP_CCB61] = EOP.[CODE_PRUTOP_CCB61] THEN 'SAME'
		WHEN (SOP.[CODE_PRUTOP_CCB61] <> '' OR SOP.[CODE_PRUTOP_CCB61] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB61] = '' OR EOP.[CODE_PRUTOP_CCB61] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CODE_PRUTOP_CCB61] = '' OR SOP.[CODE_PRUTOP_CCB61] IS NULL) AND (EOP.[CODE_PRUTOP_CCB61] = '' OR EOP.[CODE_PRUTOP_CCB61] IS NULL) THEN ''
	END) AS [CODE_PRUTOP_CCB61]
	,(CASE
		WHEN (SOP.[CODE_PRUTOP_CCB34] = '' OR SOP.[CODE_PRUTOP_CCB34] IS NULL) AND (EOP.[CODE_PRUTOP_CCB34] <> '' OR EOP.[CODE_PRUTOP_CCB34] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CODE_PRUTOP_CCB34] <> '' OR SOP.[CODE_PRUTOP_CCB34] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB34] <> '' OR EOP.[CODE_PRUTOP_CCB34] IS NOT NULL) AND SOP.[CODE_PRUTOP_CCB34] <> EOP.[CODE_PRUTOP_CCB34] THEN 'CONVERT'
		WHEN (SOP.[CODE_PRUTOP_CCB34] <> '' OR SOP.[CODE_PRUTOP_CCB34] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB34] <> '' OR EOP.[CODE_PRUTOP_CCB34] IS NOT NULL) AND SOP.[CODE_PRUTOP_CCB34] = EOP.[CODE_PRUTOP_CCB34] THEN 'SAME'
		WHEN (SOP.[CODE_PRUTOP_CCB34] <> '' OR SOP.[CODE_PRUTOP_CCB34] IS NOT NULL) AND (EOP.[CODE_PRUTOP_CCB34] = '' OR EOP.[CODE_PRUTOP_CCB34] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CODE_PRUTOP_CCB34] = '' OR SOP.[CODE_PRUTOP_CCB34] IS NULL) AND (EOP.[CODE_PRUTOP_CCB34] = '' OR EOP.[CODE_PRUTOP_CCB34] IS NULL) THEN ''
	END) AS [CODE_PRUTOP_CCB34]
	,(CASE
		WHEN (SOP.[CODE_PRUTOP_ESCC] = '' OR SOP.[CODE_PRUTOP_ESCC] IS NULL) AND (EOP.[CODE_PRUTOP_ESCC] <> '' OR EOP.[CODE_PRUTOP_ESCC] IS NOT NULL) THEN 'NEW'
		WHEN (SOP.[CODE_PRUTOP_ESCC] <> '' OR SOP.[CODE_PRUTOP_ESCC] IS NOT NULL) AND (EOP.[CODE_PRUTOP_ESCC] <> '' OR EOP.[CODE_PRUTOP_ESCC] IS NOT NULL) AND SOP.[CODE_PRUTOP_ESCC] <> EOP.[CODE_PRUTOP_ESCC] THEN 'CONVERT'
		WHEN (SOP.[CODE_PRUTOP_ESCC] <> '' OR SOP.[CODE_PRUTOP_ESCC] IS NOT NULL) AND (EOP.[CODE_PRUTOP_ESCC] <> '' OR EOP.[CODE_PRUTOP_ESCC] IS NOT NULL) AND SOP.[CODE_PRUTOP_ESCC] = EOP.[CODE_PRUTOP_ESCC] THEN 'SAME'
		WHEN (SOP.[CODE_PRUTOP_ESCC] <> '' OR SOP.[CODE_PRUTOP_ESCC] IS NOT NULL) AND (EOP.[CODE_PRUTOP_ESCC] = '' OR EOP.[CODE_PRUTOP_ESCC] IS NULL) THEN 'OUTFORCE'
		WHEN (SOP.[CODE_PRUTOP_ESCC] = '' OR SOP.[CODE_PRUTOP_ESCC] IS NULL) AND (EOP.[CODE_PRUTOP_ESCC] = '' OR EOP.[CODE_PRUTOP_ESCC] IS NULL) THEN ''
	END) AS [CODE_PRUTOP_ESCC]
	,(CASE 
		WHEN ((SOP.[CRTABLECC] = '' OR SOP.[CRTABLECC] IS NULL) AND (EOP.[CRTABLECC] <> '' OR EOP.[CRTABLECC] IS NOT NULL)) 
		OR ((SOP.[CRTABLEAD] = '' OR SOP.[CRTABLEAD] IS NULL) AND (EOP.[CRTABLEAD] <> '' OR EOP.[CRTABLEAD] IS NOT NULL)) --Table_1.[CRTABLEAD] = 'New'
		OR ((SOP.[CRTABLEADD] = '' OR SOP.[CRTABLEADD] IS NULL) AND (EOP.[CRTABLEADD] <> '' OR EOP.[CRTABLEADD] IS NOT NULL)) --Table_1.[CRTABLEADD] = 'New'
		OR ((SOP.[CRTABLEHB] = '' OR SOP.[CRTABLEHB] IS NULL) AND (EOP.[CRTABLEHB] <> '' OR EOP.[CRTABLEHB] IS NOT NULL)) --Table_1.[CRTABLEHB] = 'New'
		OR ((SOP.[CRTABLEWVR] = '' OR SOP.[CRTABLEWVR] IS NULL) AND (EOP.[CRTABLEWVR] <> '' OR EOP.[CRTABLEWVR] IS NOT NULL)) --Table_1.[CRTABLEWVR] = 'New'
		OR ((SOP.[CRTABLESPO] = '' OR SOP.[CRTABLESPO] IS NULL) AND (EOP.[CRTABLESPO] <> '' OR EOP.[CRTABLESPO] IS NOT NULL)) --Table_1.[CRTABLESPO] = 'New'
		OR ((SOP.[CRTABLECCP] = '' OR SOP.[CRTABLECCP] IS NULL) AND (EOP.[CRTABLECCP] <> '' OR EOP.[CRTABLECCP] IS NOT NULL)) --Table_1.[CRTABLECCP] = 'New'
		OR ((SOP.[CRTABLHS] = '' OR SOP.[CRTABLHS] IS NULL) AND (EOP.[CRTABLHS] <> '' OR EOP.[CRTABLHS] IS NOT NULL)) --Table_1.[CRTABLHS] = 'New'
		OR ((SOP.[CRTABLLT] = '' OR SOP.[CRTABLLT] IS NULL) AND (EOP.[CRTABLLT] <> '' OR EOP.[CRTABLLT]  IS NOT NULL)) --Table_1.[CRTABLLT] = 'New'
		OR ((SOP.[CRTABL3LF] = '' OR SOP.[CRTABL3LF] IS NULL) AND (EOP.[CRTABL3LF] <> '' OR EOP.[CRTABL3LF] IS NOT NULL)) --Table_1.[CRTABL3LF] = 'New'
		OR ((SOP.[CRTABLECI] = '' OR SOP.[CRTABLECI] IS NULL) AND (EOP.[CRTABLECI] <> '' OR EOP.[CRTABLECI] IS NOT NULL)) --Table_1.[CRTABLECI] = 'New'
		OR ((SOP.[CRTABLEMCC] = '' OR SOP.[CRTABLEMCC] IS NULL) AND (EOP.[CRTABLEMCC] <> '' OR EOP.[CRTABLEMCC] IS NOT NULL)) --Table_1.[CRTABLEMCC] = 'New'
		OR ((SOP.[PRODCDE] = '' OR SOP.[PRODCDE] IS NULL) AND (EOP.[PRODCDE] <> '' OR EOP.[PRODCDE] IS NOT NULL)) --Table_1.[PRODCDE] = 'New'
		OR ((SOP.[CRTABLEJCC] = '' OR SOP.[CRTABLEJCC] IS NULL) AND (EOP.[CRTABLEJCC] <> '' OR EOP.[CRTABLEJCC] IS NOT NULL)) --Table_1.[CRTABLEJCC] = 'New'
		OR ((SOP.[EDUPAR1C] = '' OR SOP.[EDUPAR1C] IS NULL) AND (EOP.[EDUPAR1C] <> '' OR EOP.[EDUPAR1C] IS NOT NULL)) --Table_1.[EDUPAR1C] = 'New'
		OR ((SOP.[EDUPAR2C] = '' OR SOP.[EDUPAR2C] IS NULL) AND (EOP.[EDUPAR2C] <> '' OR EOP.[EDUPAR2C] IS NOT NULL)) --Table_1.[EDUPAR2C] = 'New'
		OR ((SOP.[CRTABL3LT] = '' OR  SOP.[CRTABL3LT] IS NULL) AND (EOP.[CRTABL3LT] <> '' OR EOP.[CRTABL3LT] IS NOT NULL)) --Table_1.[CRTABL3LT] = 'New'
		OR ((SOP.[CRTABLECCB] = '' OR SOP.[CRTABLECCB] IS NULL) AND (EOP.[CRTABLECCB] <> '' OR EOP.[CRTABLECCB] IS NOT NULL)) --Table_1.[CRTABLECCB] = 'New'
		OR ((SOP.[CODE_CHC] = '' OR SOP.[CODE_CHC] IS NULL) AND (EOP.[CODE_CHC] <> '' OR EOP.[CODE_CHC] IS NOT NULL)) --Table_1.[CODE_CHC] = 'New'
		OR ((SOP.[CODE_DISABLE] = '' OR SOP.[CODE_DISABLE] IS NULL) AND (EOP.[CODE_DISABLE] <> '' OR EOP.[CODE_DISABLE] IS NOT NULL)) --Table_1.[CODE_DISABLE] = 'New'
		OR ((SOP.[CODE_PRUTOP_CCB61] = '' OR SOP.[CODE_PRUTOP_CCB61] IS NULL) AND (EOP.[CODE_PRUTOP_CCB61] <> '' OR EOP.[CODE_PRUTOP_CCB61] IS NOT NULL)) --Table_1.[CODE_PRUTOP_CCB61] = 'New'
		OR ((SOP.[CODE_PRUTOP_CCB34] = '' OR SOP.[CODE_PRUTOP_CCB34] IS NULL) AND (EOP.[CODE_PRUTOP_CCB34] <> '' OR EOP.[CODE_PRUTOP_CCB34] IS NOT NULL)) --Table_1.[CODE_PRUTOP_CCB34] = 'New'
		OR ((SOP.[CODE_PRUTOP_ESCC] = '' OR SOP.[CODE_PRUTOP_ESCC] IS NULL) AND (EOP.[CODE_PRUTOP_ESCC] <> '' OR EOP.[CODE_PRUTOP_ESCC] IS NOT NULL)) --Table_1.[CODE_PRUTOP_ESCC] = 'New'
		OR ((SOP.[PPHPLUS_PLAN_TYPE] = '' OR SOP.[PPHPLUS_PLAN_TYPE] IS NULL) AND (EOP.[PPHPLUS_PLAN_TYPE] <> '' OR EOP.[PPHPLUS_PLAN_TYPE] IS NOT NULL)) 
		THEN 'Y'
		ELSE 'N' END) AS [NEW_INDICATOR]
FROM
	tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP AS SOP
LEFT JOIN tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP EOP AS EOP 
ON	SOP.[CHDRNUM] = EOP.[CHDRNUM]
WHERE
	EOP.[CHDRNUM] IS NOT NULL
	AND (COALESCE(SOP.[CRTABLECC],'') <> COALESCE(EOP.[CRTABLECC],'') 
			OR COALESCE(SOP.[CRTABLEAD],'') <> COALESCE(EOP.[CRTABLEAD],'') 
			OR COALESCE(SOP.[CRTABLEADD],'') <> COALESCE(EOP.[CRTABLEADD],'') 
			OR COALESCE(SOP.[CRTABLEHB],'') <> COALESCE(EOP.[CRTABLEHB],'') 
			OR COALESCE(SOP.[CRTABLEWVR],'') <> COALESCE(EOP.[CRTABLEWVR],'') 
			OR COALESCE(SOP.[CRTABLESPO],'') <> COALESCE(EOP.[CRTABLESPO],'')
			OR COALESCE(SOP.[CRTABLECCP],'') <> COALESCE(EOP.[CRTABLECCP],'') 
			OR COALESCE(SOP.[CRTABLHS],'') <> COALESCE(EOP.[CRTABLHS],'') 
			OR COALESCE(SOP.[CRTABLLT],'') <> COALESCE(EOP.[CRTABLLT],'') 
			OR COALESCE(SOP.[CRTABL3LF],'') <> COALESCE(EOP.[CRTABL3LF],'') 
			OR COALESCE(SOP.[CRTABLECI],'') <> COALESCE(EOP.[CRTABLECI],'') 
			OR COALESCE(SOP.[CRTABLEMCC],'') <> COALESCE(EOP.[CRTABLEMCC],'') 
			OR COALESCE(SOP.[PRODCDE],'') <> COALESCE(EOP.[PRODCDE],'') 
			OR COALESCE(SOP.[EDUPAR1C],'') <> COALESCE(EOP.[EDUPAR1C],'') 
			OR COALESCE(SOP.[EDUPAR2C],'') <> COALESCE(EOP.[EDUPAR2C],'') 
			OR COALESCE(SOP.[CRTABLEJCC],'') <> COALESCE(EOP.[CRTABLEJCC],'') 
			OR COALESCE(SOP.[CODE_CHC],'') <> COALESCE(EOP.[CODE_CHC],'') 
			OR COALESCE(SOP.[CODE_DISABLE],'') <> COALESCE(EOP.[CODE_DISABLE],'') 
			OR COALESCE(SOP.[CRTABL3LT],'') <> COALESCE(EOP.[CRTABL3LT],'') 
			OR COALESCE(SOP.[CRTABLECCB],'') <> COALESCE(EOP.[CRTABLECCB],'') 
			OR COALESCE(SOP.[CODE_PRUTOP_CCB61],'') <> COALESCE(EOP.[CODE_PRUTOP_CCB61],'') 
			OR COALESCE(SOP.[CODE_PRUTOP_CCB34],'') <> COALESCE(EOP.[CODE_PRUTOP_CCB34],'') 
			OR COALESCE(SOP.[CODE_PRUTOP_ESCC],'') <> COALESCE(EOP.[CODE_PRUTOP_ESCC],'') 
			OR COALESCE(SOP.[PPHPLUS_PLAN_TYPE],'') <> COALESCE(EOP.[PPHPLUS_PLAN_TYPE],''))
;

---------------------------------------------------------------------
--- CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER
---------------------------------------------------------------------

SET @V_SEQNO = @V_SEQNO + 1;
SET @V_START = CURRENT_TIMESTAMP;
SET @V_DESCRIPTION = CONCAT('CREATE TABLE FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER : ', @V_START);

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_START, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);

CREATE TABLE FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER
WITH
(
  DISTRIBUTION = HASH(CHDRNUM),
  HEAP
)
AS
SELECT SOP.[SLSCNL]
,SOP.[CHDRNUM]
,SOP.[CNTCURR]
,SOP.[STATCODE]
,SOP.[CNTTYPE]
,SOP.[ANBCCD]
,SOP.[SEX]
,SOP.[MORTCLS]
,SOP.[API]
,SOP.[BILLFREQ]
,SOP.[CRRCD]
,SOP.[PRUSVR]
,SOP.[SINGP]
,SOP.[SUMINS]
,SOP.[CRTABLECC]
,SOP.[ANBCC]
,SOP.[RCDCC]
,SOP.[SUMINCC]
,SOP.[RCESAGECC]
,SOP.[CRTABLEAD]
,SOP.[ANBAD]
,SOP.[RCDAD]
,SOP.[MORTCLSAD]
,SOP.[SUMINAD]
,SOP.[RCESAGEAD]
,SOP.[CRTABLEADD]
,SOP.[ANBADD]
,SOP.[RCDADD]
,SOP.[MORTCLSADD]
,SOP.[SUMINADD]
,SOP.[RCESAGEADD]
,SOP.[CRTABLEHB]
,SOP.[ANBHB]
,SOP.[RCDHB]
,SOP.[SUMINHB]
,SOP.[RCESAGEHB]
,SOP.[ANBWVR]
,SOP.[CRTABLEWVR]
,SOP.[RCDWVR]
,SOP.[SUMINWVR]
,SOP.[RCESAGEWVR]
,SOP.[CRTABLESPO]
,SOP.[ANBSPO]
,SOP.[SEXTWO]
,SOP.[RCDSPO]
,SOP.[SUMINSPO]
,SOP.[RCESDTE]
,SOP.[HOISSDTE]
,SOP.[TTLFUND]
,SOP.[PRCF]
,SOP.[PREF]
,SOP.[PRFF]
,SOP.[PRMF]
,SOP.[PDMF]
,SOP.[CHGDTE]
,SOP.[PYRTRM]
,SOP.[CURYRTUP]
,SOP.[TOPUPLAST]
,SOP.[PCESTRM]
,SOP.[ANBCCP]
,SOP.[RCDCCP]
,SOP.[RCESAGECCP]
,SOP.[SUMINCCP]
,SOP.[CRTABLECCP]
,SOP.[ALLOCIND]
,SOP.[BILCHNL]
,SOP.[WDRAMNT]
,SOP.[LIFCNUM]
,SOP.[AGNTNUM]
,SOP.[UNITNUM]
,SOP.[CRTABLHS]
,SOP.[ANBHS]
,SOP.[RCDHS]
,SOP.[SUMINHS]
,SOP.[RCESAGEHS]
,SOP.[CRTABLLT]
,SOP.[ANBLT]
,SOP.[RCDLT]
,SOP.[SUMINLT]
,SOP.[RCESAGELT]
,SOP.[CRTABL3LF]
,SOP.[ANB3LF]
,SOP.[SEX3LF]
,SOP.[RCD3LF]
,SOP.[SUMIN3LF]
,SOP.[RCESDT3LF]
,SOP.[PAAFLAG]
,SOP.[PTDATE]
,SOP.[WAIVERSTAT]
,SOP.[CLAIMSAR]
,SOP.[FPAYDATE]
,SOP.[PRMP]
,SOP.[TPDCLAIM]
,SOP.[ADDR04CITY]
,SOP.[ADDR05PROV]
,SOP.[CRTABLECI]
,SOP.[ANBCI]
,SOP.[RCDCI]
,SOP.[SUMINCI]
,SOP.[RCESDTECI]
,SOP.[CRTABLEMCC]
,SOP.[ANBMCC]
,SOP.[RCDMCC]
,SOP.[SUMINMCC]
,SOP.[RCESDTEMCC]
,SOP.[PRODCDE]
,SOP.[ANBESCC]
,SOP.[RCDESCC]
,SOP.[SUMINESCC]
,SOP.[RCESDTEESCC]
,SOP.[CLTBDAY]
,SOP.[MEDPCLAS]
,SOP.[ADMINCHG]
,SOP.[COIDEBT]
,SOP.[TOTCHGHS]
,SOP.[TOTTPACOST]
,SOP.[CODE]
,SOP.[ZLONGDESC]
,SOP.[RCESAGESO]
,SOP.[RCESAGEPW]
,SOP.[RCESAGEPWX]
,SOP.[RCESAGECI]
,SOP.[RCESAGEMC]
,SOP.[RCESAGEEC]
,SOP.[LSTTOPDATE]
,SOP.[COWNNUM]
,SOP.[CRTABLEJCC]
,SOP.[ANBJCC]
,SOP.[RCDJCC]
,SOP.[SUMINJCC]
,SOP.[RCESAGEJCC]
,SOP.[SUMINPMC]
,SOP.[PRGC]
,SOP.[PDGC]
,SOP.[PRUSTATCDE]
,SOP.[CRTABLESAV]
,SOP.[AGNTDLCODE]
,SOP.[UMCODE]
,SOP.[PREP]
,SOP.[CLMTYP]
,SOP.[PRIEF]
,SOP.[EDUPAR1C]
,SOP.[EDUP1SUM]
,SOP.[EDUPAR2C]
,SOP.[EDUP2SUM]
,SOP.[CRTABL3LT]
,SOP.[ANB3LT]
,SOP.[RCD3LT]
,SOP.[SUMIN3LT]
,SOP.[RCESAGE3LT]
,SOP.[NLGFLAG]
,SOP.[REGION_IND]
,SOP.[AR_IND]
,SOP.[HNW_IND]
,SOP.[RI_IND]
,SOP.[ADDR]
,SOP.[DTHR]
,SOP.[RDDS]
,SOP.[SAR_WAIV]
,SOP.[SAR_WAIV2]
,SOP.[SAR_CI]
,SOP.[PRVEF]
,SOP.[PRAEF]
,SOP.[ANBCCB]
,SOP.[RCDCCB]
,SOP.[RCESAGECCB]
,SOP.[SUMINCCB]
,SOP.[CRTABLECCB]
,SOP.[PDIEF]
,SOP.[PDGV]
,SOP.[PDGM]
,SOP.[CODE_CHC]
,SOP.[AGE_ENTRY_CHC]
,SOP.[CRRCD_CHC]
,SOP.[PLANTYPE_CHC]
,SOP.[AGE_END_CHC]
,SOP.[CODE_DISABLE]
,SOP.[AGE_ENTRY_DISABLE]
,SOP.[CRRCD_DISABLE]
,SOP.[SUMINS_DISABLE]
,SOP.[AGE_END_DISABLE]
,SOP.[PRGV]
,SOP.[PRGM]
,SOP.[TOTAL_FUND_BAV]
,SOP.[PRCF_BAV]
,SOP.[PREF_BAV]
,SOP.[PRFF_BAV]
,SOP.[PRGC_BAV]
,SOP.[PRMF_BAV]
,SOP.[PRMP_BAV]
,SOP.[PRIE_BAV]
,SOP.[PRAE_BAV]
,SOP.[PRVE_BAV]
,SOP.[PRGM_BAV]
,SOP.[PRGV_BAV]
,SOP.[PDFF_BAV]
,SOP.[PDGC_BAV]
,SOP.[PDGM_BAV]
,SOP.[PDGV_BAV]
,SOP.[PLEF_BAV]
,SOP.[TOTAL_FUND_TPAV]
,SOP.[PRCF_TPAV]
,SOP.[PREF_TPAV]
,SOP.[PRFF_TPAV]
,SOP.[PRGC_TPAV]
,SOP.[PRMF_TPAV]
,SOP.[PRMP_TPAV]
,SOP.[PRIE_TPAV]
,SOP.[PRAE_TPAV]
,SOP.[PRVE_TPAV]
,SOP.[PRGM_TPAV]
,SOP.[PRGV_TPAV]
,SOP.[PDFF_TPAV]
,SOP.[PDGC_TPAV]
,SOP.[PDGM_TPAV]
,SOP.[PDGV_TPAV]
,SOP.[PLEF_TPAV]
,SOP.[TOTAL_UNIT_ACT]
,SOP.[PRCF_ACT]
,SOP.[PREF_ACT]
,SOP.[PRFF_ACT]
,SOP.[PRGC_ACT]
,SOP.[PRMF_ACT]
,SOP.[PRMP_ACT]
,SOP.[PRIE_ACT]
,SOP.[PRAE_ACT]
,SOP.[PRVE_ACT]
,SOP.[PRGM_ACT]
,SOP.[PRGV_ACT]
,SOP.[PDFF_ACT]
,SOP.[PDGC_ACT]
,SOP.[PDGM_ACT]
,SOP.[PDGV_ACT]
,SOP.[PLEF_ACT]
,SOP.[TOTAL_UNIT_PRV]
,SOP.[PRCF_PRV]
,SOP.[PREF_PRV]
,SOP.[PRFF_PRV]
,SOP.[PRGC_PRV]
,SOP.[PRMF_PRV]
,SOP.[PRMP_PRV]
,SOP.[PRIE_PRV]
,SOP.[PRAE_PRV]
,SOP.[PRVE_PRV]
,SOP.[PRGM_PRV]
,SOP.[PRGV_PRV]
,SOP.[PDFF_PRV]
,SOP.[PDGC_PRV]
,SOP.[PDGM_PRV]
,SOP.[PDGV_PRV]
,SOP.[PLEF_PRV]
,SOP.[BASIC_PREMIUM_PREV]
,SOP.[STFLAG]
,SOP.[SIOFLAG]
,SOP.[BILLCHNL_PRV]
,SOP.[FUPCODE_FOR_PBC]
,SOP.[REQUEST_DATE_FOR_PBC]
,SOP.[PRNV]
,SOP.[PPHPLUS_PLAN_TYPE]
,SOP.[PDNV]
,SOP.[CODE_PRUTOP_CCB61]
,SOP.[AGE_ENTRY_PRUTOP_CCB61]
,SOP.[CRRCD_PRUTOP_CCB61]
,SOP.[CODE_PRUTOP_CCB34]
,SOP.[AGE_ENTRY_PRUTOP_CCB34]
,SOP.[CRRCD_PRUTOP_CCB34]
,SOP.[CODE_PRUTOP_ESCC]
,SOP.[AGE_ENTRY_PRUTOP_ESCC]
,SOP.[CRRCD_PRUTOP_ESCC]
,SOP.[PDGT] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_BAV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_TPAV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_ACT] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_PRV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[STAT_SECT] -- added by dyah 08/08/2022
-- start DARA 230401
,SOP.[CICA_ESCC]
,SOP.[C_ESCC]
,SOP.[CICA_CCB34]
,SOP.[CICA_CCB61]
,SOP.[CCB61]
,SOP.[RCESAGE]
,SOP.[FLAGS]
-- end DARA 230401
,SOP.[PDIF] --PTPLAIFRS17-3961
,SOP.[PRDP] 
,SOP.[PRDP_BAV] 
,SOP.[PRDP_TPAV] 
,SOP.[PRDP_BON] 
,SOP.[PRDP_PRV] 
,SOP.[PRBI] 
,SOP.[WP_FLAG]
,SOP.[CAMP_CODE]
,SOP.[RBP_STATE]
,SOP.[IFRS_ONEROUS_GRP]
,SOP.[IFRS_CY_GRP]
,SOP.[IFRS_PORT_GRP]
,SOP.[IFRS_MEASURE_MODEL]
,SOP.[BASIC_ENTRY_YEAR]
,SOP.[BASIC_ENTRY_MONTH]
,SOP.[IFRS_CB_TERM_M]
,SOP.[MTHS_TO_SALE]
,SOP.[IFRS_ICG_ID]
,SOP.[IFRS_ICG_ID_PROPHET]
,SOP.[SUB_GROUP_ID]
,SOP.[ENTITY_ID]
,SOP.[CB_START_DT]
,SOP.[CB_END_DT]
,SOP.[REL_INSURANCE_CONTRACT_GROUP_ID]
,'-1' AS [RID_ST_IND]
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID  AS JOB_RUN_ID
,@BATCHDATESTR AS BATCHDATE
,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP SOP
LEFT JOIN FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER IND
ON SOP.[CHDRNUM] = IND.[CHDRNUM]
WHERE IND.[CHDRNUM] IS NOT NULL AND IND.[NEW_INDICATOR] = 'Y'

UNION ALL

SELECT SOP.[SLSCNL]
,SOP.[CHDRNUM]
,SOP.[CNTCURR]
,SOP.[STATCODE]
,SOP.[CNTTYPE]
,SOP.[ANBCCD]
,SOP.[SEX]
,SOP.[MORTCLS]
,EOP.[API]--EOP
,EOP.[BILLFREQ]--EOP
,SOP.[CRRCD]
,EOP.[PRUSVR]--EOP
,SOP.[SINGP]
,EOP.[SUMINS]--EOP
,(CASE WHEN IND.[CRTABLECC] = 'OUTFORCE' THEN SOP.[CRTABLECC] ELSE EOP.[CRTABLECC] END) AS [CRTABLECC]
,(CASE WHEN IND.[CRTABLECC] = 'OUTFORCE' THEN SOP.[ANBCC] ELSE EOP.[ANBCC] END) AS [ANBCC] 
,(CASE WHEN IND.[CRTABLECC] = 'OUTFORCE' THEN SOP.[RCDCC] ELSE EOP.[RCDCC] END) AS [RCDCC]
,(CASE WHEN IND.[CRTABLECC] = 'OUTFORCE' THEN SOP.[SUMINCC] ELSE EOP.[SUMINCC] END) AS [SUMINCC] 
,(CASE WHEN IND.[CRTABLECC] = 'OUTFORCE' THEN SOP.[RCESAGECC] ELSE EOP.[RCESAGECC] END) AS [RCESAGECC] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[CRTABLEAD] ELSE EOP.[CRTABLEAD] END) AS [CRTABLEAD] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[ANBAD] ELSE EOP.[ANBAD] END) AS [ANBAD] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[RCDAD] ELSE EOP.[RCDAD] END) AS [RCDAD] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[MORTCLSAD] ELSE EOP.[MORTCLSAD] END) AS [MORTCLSAD] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[SUMINAD] ELSE EOP.[SUMINAD] END) AS [SUMINAD] 
,(CASE WHEN IND.[CRTABLEAD] = 'OUTFORCE' THEN SOP.[RCESAGEAD] ELSE EOP.[RCESAGEAD] END) AS [RCESAGEAD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[CRTABLEADD]ELSE EOP.[CRTABLEADD]END) AS [CRTABLEADD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[ANBADD]ELSE EOP.[ANBADD]END) AS [ANBADD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[RCDADD]ELSE EOP.[RCDADD]END) AS [RCDADD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[MORTCLSADD]ELSE EOP.[MORTCLSADD]END) AS [MORTCLSADD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[SUMINADD]ELSE EOP.[SUMINADD]END) AS [SUMINADD] 
,(CASE WHEN IND.[CRTABLEADD]= 'OUTFORCE' THEN SOP.[RCESAGEADD]ELSE EOP.[RCESAGEADD]END) AS [RCESAGEADD] 
,(CASE WHEN IND.[CRTABLEHB]= 'OUTFORCE' THEN SOP.[CRTABLEHB]ELSE EOP.[CRTABLEHB]END) AS [CRTABLEHB] 
,(CASE WHEN IND.[CRTABLEHB]= 'OUTFORCE' THEN SOP.[ANBHB]ELSE EOP.[ANBHB]END) AS [ANBHB] 
,(CASE WHEN IND.[CRTABLEHB]= 'OUTFORCE' THEN SOP.[RCDHB]ELSE EOP.[RCDHB]END) AS [RCDHB] 
,(CASE WHEN IND.[CRTABLEHB]= 'OUTFORCE' THEN SOP.[SUMINHB]ELSE EOP.[SUMINHB]END) AS [SUMINHB] 
,(CASE WHEN IND.[CRTABLEHB]= 'OUTFORCE' THEN SOP.[RCESAGEHB]ELSE EOP.[RCESAGEHB]END) AS [RCESAGEHB] 
,(CASE WHEN IND.[CRTABLEWVR]= 'OUTFORCE' THEN SOP.[ANBWVR]ELSE EOP.[ANBWVR]END) AS [ANBWVR] 
,(CASE WHEN IND.[CRTABLEWVR]= 'OUTFORCE' THEN SOP.[CRTABLEWVR]ELSE EOP.[CRTABLEWVR]END) AS [CRTABLEWVR] 
,(CASE WHEN IND.[CRTABLEWVR]= 'OUTFORCE' THEN SOP.[RCDWVR]ELSE EOP.[RCDWVR]END) AS [RCDWVR] 
,(CASE WHEN IND.[CRTABLEWVR]= 'OUTFORCE' THEN SOP.[SUMINWVR]ELSE EOP.[SUMINWVR]END) AS [SUMINWVR] 
,(CASE WHEN IND.[CRTABLEWVR]= 'OUTFORCE' THEN SOP.[RCESAGEWVR]ELSE EOP.[RCESAGEWVR]END) AS [RCESAGEWVR] 
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[CRTABLESPO]ELSE EOP.[CRTABLESPO]END) AS [CRTABLESPO] 
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[ANBSPO]ELSE EOP.[ANBSPO]END) AS [ANBSPO] 
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[SEXTWO]ELSE EOP.[SEXTWO]END) AS [SEXTWO] 
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[RCDSPO]ELSE EOP.[RCDSPO]END) AS [RCDSPO] 
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[SUMINSPO]ELSE EOP.[SUMINSPO]END) AS [SUMINSPO] 
,SOP.[RCESDTE]
,(CASE WHEN (SOP.[HOISSDTE] IS NOT NULL AND SOP.[HOISSDTE] <> '') THEN SOP.[HOISSDTE] ELSE EOP.[HOISSDTE] END) AS [HOISSDTE]
,SOP.[TTLFUND]
,SOP.[PRCF]
,SOP.[PREF]
,SOP.[PRFF]
,SOP.[PRMF]
,SOP.[PDMF]
,SOP.[CHGDTE]
,SOP.[PYRTRM]
,SOP.[CURYRTUP]
,SOP.[TOPUPLAST]
,SOP.[PCESTRM]
,(CASE WHEN IND.[CRTABLECCP]= 'OUTFORCE' THEN SOP.[ANBCCP]ELSE EOP.[ANBCCP]END) AS [ANBCCP] 
,(CASE WHEN IND.[CRTABLECCP]= 'OUTFORCE' THEN SOP.[RCDCCP]ELSE EOP.[RCDCCP]END) AS [RCDCCP] 
,(CASE WHEN IND.[CRTABLECCP]= 'OUTFORCE' THEN SOP.[RCESAGECCP]ELSE EOP.[RCESAGECCP]END) AS [RCESAGECCP] 
,(CASE WHEN IND.[CRTABLECCP]= 'OUTFORCE' THEN SOP.[SUMINCCP]ELSE EOP.[SUMINCCP]END) AS [SUMINCCP] 
,(CASE WHEN IND.[CRTABLECCP]= 'OUTFORCE' THEN SOP.[CRTABLECCP]ELSE EOP.[CRTABLECCP]END) AS [CRTABLECCP] 
,SOP.[ALLOCIND]
,SOP.[BILCHNL]
,SOP.[WDRAMNT]
,SOP.[LIFCNUM]
,SOP.[AGNTNUM]
,SOP.[UNITNUM]
,(CASE WHEN IND.[CRTABLHS]= 'OUTFORCE' THEN SOP.[CRTABLHS]ELSE EOP.[CRTABLHS]END) AS [CRTABLHS] 
,(CASE WHEN IND.[CRTABLHS]= 'OUTFORCE' THEN SOP.[ANBHS]ELSE EOP.[ANBHS]END) AS [ANBHS] 
,(CASE WHEN IND.[CRTABLHS]= 'OUTFORCE' THEN SOP.[RCDHS]ELSE EOP.[RCDHS]END) AS [RCDHS] 
,(CASE WHEN IND.[CRTABLHS]= 'OUTFORCE' THEN SOP.[SUMINHS]ELSE EOP.[SUMINHS]END) AS [SUMINHS] 
,(CASE WHEN IND.[CRTABLHS]= 'OUTFORCE' THEN SOP.[RCESAGEHS]ELSE EOP.[RCESAGEHS]END) AS [RCESAGEHS] 
,(CASE WHEN IND.[CRTABLLT]= 'OUTFORCE' THEN SOP.[CRTABLLT]ELSE EOP.[CRTABLLT]END) AS [CRTABLLT] 
,(CASE WHEN IND.[CRTABLLT]= 'OUTFORCE' THEN SOP.[ANBLT]ELSE EOP.[ANBLT]END) AS [ANBLT] 
,(CASE WHEN IND.[CRTABLLT]= 'OUTFORCE' THEN SOP.[RCDLT]ELSE EOP.[RCDLT]END) AS [RCDLT] 
,(CASE WHEN IND.[CRTABLLT]= 'OUTFORCE' THEN SOP.[SUMINLT]ELSE EOP.[SUMINLT]END) AS [SUMINLT] 
,(CASE WHEN IND.[CRTABLLT]= 'OUTFORCE' THEN SOP.[RCESAGELT]ELSE EOP.[RCESAGELT]END) AS [RCESAGELT] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[CRTABL3LF]ELSE EOP.[CRTABL3LF]END) AS [CRTABL3LF] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[ANB3LF]ELSE EOP.[ANB3LF]END) AS [ANB3LF] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[SEX3LF]ELSE EOP.[SEX3LF]END) AS [SEX3LF] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[RCD3LF]ELSE EOP.[RCD3LF]END) AS [RCD3LF] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[SUMIN3LF]ELSE EOP.[SUMIN3LF]END) AS [SUMIN3LF] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[RCESDT3LF]ELSE EOP.[RCESDT3LF]END) AS [RCESDT3LF] 
,SOP.[PAAFLAG]
,SOP.[PTDATE]
,SOP.[WAIVERSTAT]
,SOP.[CLAIMSAR]
,SOP.[FPAYDATE]
,SOP.[PRMP]
,SOP.[TPDCLAIM]
,SOP.[ADDR04CITY]
,SOP.[ADDR05PROV]
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[CRTABLECI]ELSE EOP.[CRTABLECI]END) AS [CRTABLECI] 
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[ANBCI]ELSE EOP.[ANBCI]END) AS [ANBCI] 
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[RCDCI]ELSE EOP.[RCDCI]END) AS [RCDCI] 
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[SUMINCI]ELSE EOP.[SUMINCI]END) AS [SUMINCI] 
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[RCESDTECI]ELSE EOP.[RCESDTECI]END) AS [RCESDTECI] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[CRTABLEMCC]ELSE EOP.[CRTABLEMCC]END) AS [CRTABLEMCC] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[ANBMCC]ELSE EOP.[ANBMCC]END) AS [ANBMCC] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[RCDMCC]ELSE EOP.[RCDMCC]END) AS [RCDMCC] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[SUMINMCC]ELSE EOP.[SUMINMCC]END) AS [SUMINMCC] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[RCESDTEMCC]ELSE EOP.[RCESDTEMCC]END) AS [RCESDTEMCC] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[PRODCDE]ELSE EOP.[PRODCDE]END) AS [PRODCDE] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[ANBESCC]ELSE EOP.[ANBESCC]END) AS [ANBESCC] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[RCDESCC]ELSE EOP.[RCDESCC]END) AS [RCDESCC] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[SUMINESCC]ELSE EOP.[SUMINESCC]END) AS [SUMINESCC] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[RCESDTEESCC]ELSE EOP.[RCESDTEESCC]END) AS [RCESDTEESCC] 
,SOP.[CLTBDAY]
,SOP.[MEDPCLAS]
,SOP.[ADMINCHG]
,SOP.[COIDEBT]
,SOP.[TOTCHGHS]
,SOP.[TOTTPACOST]
,SOP.[CODE]
,SOP.[ZLONGDESC]
,(CASE WHEN IND.[CRTABLESPO]= 'OUTFORCE' THEN SOP.[RCESAGESO]ELSE EOP.[RCESAGESO]END) AS [RCESAGESO] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[RCESAGEPW]ELSE EOP.[RCESAGEPW]END) AS [RCESAGEPW] 
,(CASE WHEN IND.[CRTABL3LF]= 'OUTFORCE' THEN SOP.[RCESAGEPWX]ELSE EOP.[RCESAGEPWX]END) AS [RCESAGEPWX] 
,(CASE WHEN IND.[CRTABLECI]= 'OUTFORCE' THEN SOP.[RCESAGECI]ELSE EOP.[RCESAGECI]END) AS [RCESAGECI] 
,(CASE WHEN IND.[CRTABLEMCC]= 'OUTFORCE' THEN SOP.[RCESAGEMC]ELSE EOP.[RCESAGEMC]END) AS [RCESAGEMC] 
,(CASE WHEN IND.[PRODCDE]= 'OUTFORCE' THEN SOP.[RCESAGEEC]ELSE EOP.[RCESAGEEC]END) AS [RCESAGEEC] 
,SOP.[LSTTOPDATE]
,SOP.[COWNNUM]
,(CASE WHEN IND.[CRTABLEJCC]= 'OUTFORCE' THEN SOP.[CRTABLEJCC]ELSE EOP.[CRTABLEJCC]END) AS [CRTABLEJCC] 
,(CASE WHEN IND.[CRTABLEJCC]= 'OUTFORCE' THEN SOP.[ANBJCC]ELSE EOP.[ANBJCC]END) AS [ANBJCC] 
,(CASE WHEN IND.[CRTABLEJCC]= 'OUTFORCE' THEN SOP.[RCDJCC]ELSE EOP.[RCDJCC]END) AS [RCDJCC] 
,(CASE WHEN IND.[CRTABLEJCC]= 'OUTFORCE' THEN SOP.[SUMINJCC]ELSE EOP.[SUMINJCC]END) AS [SUMINJCC] 
,(CASE WHEN IND.[CRTABLEJCC]= 'OUTFORCE' THEN SOP.[RCESAGEJCC]ELSE EOP.[RCESAGEJCC]END) AS [RCESAGEJCC] 
,EOP.[SUMINPMC]--EOP
,SOP.[PRGC]
,SOP.[PDGC]
,SOP.[PRUSTATCDE]
,SOP.[CRTABLESAV]
,SOP.[AGNTDLCODE]
,SOP.[UMCODE]
,SOP.[PREP]
,SOP.[CLMTYP]
,SOP.[PRIEF]
,(CASE WHEN IND.[EDUPAR1C]= 'OUTFORCE' THEN SOP.[EDUPAR1C]ELSE EOP.[EDUPAR1C]END) AS [EDUPAR1C] 
,(CASE WHEN IND.[EDUPAR1C]= 'OUTFORCE' THEN SOP.[EDUP1SUM]ELSE EOP.[EDUP1SUM]END) AS [EDUP1SUM] 
,(CASE WHEN IND.[EDUPAR2C]= 'OUTFORCE' THEN SOP.[EDUPAR2C]ELSE EOP.[EDUPAR2C]END) AS [EDUPAR2C] 
,(CASE WHEN IND.[EDUPAR2C]= 'OUTFORCE' THEN SOP.[EDUP2SUM]ELSE EOP.[EDUP2SUM]END) AS [EDUP2SUM] 
,(CASE WHEN IND.[CRTABL3LT]= 'OUTFORCE' THEN SOP.[CRTABL3LT]ELSE EOP.[CRTABL3LT]END) AS [CRTABL3LT] 
,(CASE WHEN IND.[CRTABL3LT]= 'OUTFORCE' THEN SOP.[ANB3LT]ELSE EOP.[ANB3LT]END) AS [ANB3LT] 
,(CASE WHEN IND.[CRTABL3LT]= 'OUTFORCE' THEN SOP.[RCD3LT]ELSE EOP.[RCD3LT]END) AS [RCD3LT] 
,(CASE WHEN IND.[CRTABL3LT]= 'OUTFORCE' THEN SOP.[SUMIN3LT]ELSE EOP.[SUMIN3LT]END) AS [SUMIN3LT] 
,(CASE WHEN IND.[CRTABL3LT]= 'OUTFORCE' THEN SOP.[RCESAGE3LT]ELSE EOP.[RCESAGE3LT]END) AS [RCESAGE3LT] 
,SOP.[NLGFLAG]
,SOP.[REGION_IND]
,SOP.[AR_IND]
,SOP.[HNW_IND]
,SOP.[RI_IND]
,SOP.[ADDR]
,SOP.[DTHR]
,SOP.[RDDS]
,SOP.[SAR_WAIV]
,SOP.[SAR_WAIV2]
,SOP.[SAR_CI]
,SOP.[PRVEF]
,SOP.[PRAEF]
,(CASE WHEN IND.[CRTABLECCB]= 'OUTFORCE' THEN SOP.[ANBCCB]ELSE EOP.[ANBCCB]END) AS [ANBCCB] 
,(CASE WHEN IND.[CRTABLECCB]= 'OUTFORCE' THEN SOP.[RCDCCB]ELSE EOP.[RCDCCB]END) AS [RCDCCB] 
,(CASE WHEN IND.[CRTABLECCB]= 'OUTFORCE' THEN SOP.[RCESAGECCB]ELSE EOP.[RCESAGECCB]END) AS [RCESAGECCB] 
,(CASE WHEN IND.[CRTABLECCB]= 'OUTFORCE' THEN SOP.[SUMINCCB]ELSE EOP.[SUMINCCB]END) AS [SUMINCCB] 
,(CASE WHEN IND.[CRTABLECCB]= 'OUTFORCE' THEN SOP.[CRTABLECCB]ELSE EOP.[CRTABLECCB]END) AS [CRTABLECCB] 
,SOP.[PDIEF]
,SOP.[PDGV]
,SOP.[PDGM]
,(CASE WHEN IND.[CODE_CHC]= 'OUTFORCE' THEN SOP.[CODE_CHC]ELSE EOP.[CODE_CHC]END) AS [CODE_CHC] 
,(CASE WHEN IND.[CODE_CHC]= 'OUTFORCE' THEN SOP.[AGE_ENTRY_CHC]ELSE EOP.[AGE_ENTRY_CHC]END) AS [AGE_ENTRY_CHC] 
,(CASE WHEN IND.[CODE_CHC]= 'OUTFORCE' THEN SOP.[CRRCD_CHC]ELSE EOP.[CRRCD_CHC]END) AS [CRRCD_CHC] 
,(CASE WHEN IND.[CODE_CHC]= 'OUTFORCE' THEN SOP.[PLANTYPE_CHC]ELSE EOP.[PLANTYPE_CHC]END) AS [PLANTYPE_CHC] 
,(CASE WHEN IND.[CODE_CHC]= 'OUTFORCE' THEN SOP.[AGE_END_CHC]ELSE EOP.[AGE_END_CHC]END) AS [AGE_END_CHC] 
,(CASE WHEN IND.[CODE_DISABLE]= 'OUTFORCE' THEN SOP.[CODE_DISABLE]ELSE EOP.[CODE_DISABLE]END) AS [CODE_DISABLE] 
,(CASE WHEN IND.[CODE_DISABLE]= 'OUTFORCE' THEN SOP.[AGE_ENTRY_DISABLE]ELSE EOP.[AGE_ENTRY_DISABLE]END) AS [AGE_ENTRY_DISABLE] 
,(CASE WHEN IND.[CODE_DISABLE]= 'OUTFORCE' THEN SOP.[CRRCD_DISABLE]ELSE EOP.[CRRCD_DISABLE]END) AS [CRRCD_DISABLE] 
,(CASE WHEN IND.[CODE_DISABLE]= 'OUTFORCE' THEN SOP.[SUMINS_DISABLE]ELSE EOP.[SUMINS_DISABLE]END) AS [SUMINS_DISABLE] 
,(CASE WHEN IND.[CODE_DISABLE]= 'OUTFORCE' THEN SOP.[AGE_END_DISABLE]ELSE EOP.[AGE_END_DISABLE]END) AS [AGE_END_DISABLE] 
,SOP.[PRGV]
,SOP.[PRGM]
,SOP.[TOTAL_FUND_BAV]
,SOP.[PRCF_BAV]
,SOP.[PREF_BAV]
,SOP.[PRFF_BAV]
,SOP.[PRGC_BAV]
,SOP.[PRMF_BAV]
,SOP.[PRMP_BAV]
,SOP.[PRIE_BAV]
,SOP.[PRAE_BAV]
,SOP.[PRVE_BAV]
,SOP.[PRGM_BAV]
,SOP.[PRGV_BAV]
,SOP.[PDFF_BAV]
,SOP.[PDGC_BAV]
,SOP.[PDGM_BAV]
,SOP.[PDGV_BAV]
,SOP.[PLEF_BAV]
,SOP.[TOTAL_FUND_TPAV]
,SOP.[PRCF_TPAV]
,SOP.[PREF_TPAV]
,SOP.[PRFF_TPAV]
,SOP.[PRGC_TPAV]
,SOP.[PRMF_TPAV]
,SOP.[PRMP_TPAV]
,SOP.[PRIE_TPAV]
,SOP.[PRAE_TPAV]
,SOP.[PRVE_TPAV]
,SOP.[PRGM_TPAV]
,SOP.[PRGV_TPAV]
,SOP.[PDFF_TPAV]
,SOP.[PDGC_TPAV]
,SOP.[PDGM_TPAV]
,SOP.[PDGV_TPAV]
,SOP.[PLEF_TPAV]
,SOP.[TOTAL_UNIT_ACT]
,SOP.[PRCF_ACT]
,SOP.[PREF_ACT]
,SOP.[PRFF_ACT]
,SOP.[PRGC_ACT]
,SOP.[PRMF_ACT]
,SOP.[PRMP_ACT]
,SOP.[PRIE_ACT]
,SOP.[PRAE_ACT]
,SOP.[PRVE_ACT]
,SOP.[PRGM_ACT]
,SOP.[PRGV_ACT]
,SOP.[PDFF_ACT]
,SOP.[PDGC_ACT]
,SOP.[PDGM_ACT]
,SOP.[PDGV_ACT]
,SOP.[PLEF_ACT]
,SOP.[TOTAL_UNIT_PRV]
,SOP.[PRCF_PRV]
,SOP.[PREF_PRV]
,SOP.[PRFF_PRV]
,SOP.[PRGC_PRV]
,SOP.[PRMF_PRV]
,SOP.[PRMP_PRV]
,SOP.[PRIE_PRV]
,SOP.[PRAE_PRV]
,SOP.[PRVE_PRV]
,SOP.[PRGM_PRV]
,SOP.[PRGV_PRV]
,SOP.[PDFF_PRV]
,SOP.[PDGC_PRV]
,SOP.[PDGM_PRV]
,SOP.[PDGV_PRV]
,SOP.[PLEF_PRV]
,SOP.[BASIC_PREMIUM_PREV]
,SOP.[STFLAG]
,SOP.[SIOFLAG]
,SOP.[BILLCHNL_PRV]
,SOP.[FUPCODE_FOR_PBC]
,SOP.[REQUEST_DATE_FOR_PBC]
,SOP.[PRNV]
,(CASE WHEN IND.[PPHPLUS_PLAN_TYPE]= 'OUTFORCE' THEN SOP.[PPHPLUS_PLAN_TYPE]ELSE EOP.[PPHPLUS_PLAN_TYPE]END) AS [PPHPLUS_PLAN_TYPE] 
,SOP.[PDNV]
,(CASE WHEN IND.[CODE_PRUTOP_CCB61]= 'OUTFORCE' THEN SOP.[CODE_PRUTOP_CCB61]ELSE EOP.[CODE_PRUTOP_CCB61]END) AS [CODE_PRUTOP_CCB61] 
,(CASE WHEN IND.[CODE_PRUTOP_CCB61]= 'OUTFORCE' THEN SOP.[AGE_ENTRY_PRUTOP_CCB61]ELSE EOP.[AGE_ENTRY_PRUTOP_CCB61]END) AS [AGE_ENTRY_PRUTOP_CCB61] 
,(CASE WHEN IND.[CODE_PRUTOP_CCB61]= 'OUTFORCE' THEN SOP.[CRRCD_PRUTOP_CCB61]ELSE EOP.[CRRCD_PRUTOP_CCB61]END) AS [CRRCD_PRUTOP_CCB61] 
,(CASE WHEN IND.[CODE_PRUTOP_CCB34]= 'OUTFORCE' THEN SOP.[CODE_PRUTOP_CCB34]ELSE EOP.[CODE_PRUTOP_CCB34]END) AS [CODE_PRUTOP_CCB34] 
,(CASE WHEN IND.[CODE_PRUTOP_CCB34]= 'OUTFORCE' THEN SOP.[AGE_ENTRY_PRUTOP_CCB34]ELSE EOP.[AGE_ENTRY_PRUTOP_CCB34]END) AS [AGE_ENTRY_PRUTOP_CCB34] 
,(CASE WHEN IND.[CODE_PRUTOP_CCB34]= 'OUTFORCE' THEN SOP.[CRRCD_PRUTOP_CCB34]ELSE EOP.[CRRCD_PRUTOP_CCB34]END) AS [CRRCD_PRUTOP_CCB34] 
,(CASE WHEN IND.[CODE_PRUTOP_ESCC]= 'OUTFORCE' THEN SOP.[CODE_PRUTOP_ESCC]ELSE EOP.[CODE_PRUTOP_ESCC]END) AS [CODE_PRUTOP_ESCC] 
,(CASE WHEN IND.[CODE_PRUTOP_ESCC]= 'OUTFORCE' THEN SOP.[AGE_ENTRY_PRUTOP_ESCC]ELSE EOP.[AGE_ENTRY_PRUTOP_ESCC]END) AS [AGE_ENTRY_PRUTOP_ESCC] 
,(CASE WHEN IND.[CODE_PRUTOP_ESCC]= 'OUTFORCE' THEN SOP.[CRRCD_PRUTOP_ESCC] ELSE EOP.[CRRCD_PRUTOP_ESCC] END) AS [CRRCD_PRUTOP_ESCC]
,SOP.[PDGT] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_BAV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_TPAV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_ACT] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[PSMA_PRV] --Add June 2021 (EOP) new column (Added in v3)
,SOP.[STAT_SECT] -- added by dyah 08/08/2022
-- start DARA 230401
,SOP.[CICA_ESCC]
,SOP.[C_ESCC]
,SOP.[CICA_CCB34]
,SOP.[CICA_CCB61]
,SOP.[CCB61]
,SOP.[RCESAGE]
,SOP.[FLAGS]
-- end DARA 230401
,SOP.[PDIF] --PTPLAIFRS17-3961
,SOP.[PRDP] 
,SOP.[PRDP_BAV] 
,SOP.[PRDP_TPAV] 
,SOP.[PRDP_BON] 
,SOP.[PRDP_PRV] 
,SOP.[PRBI] 
,SOP.[WP_FLAG]
,SOP.[CAMP_CODE]
,SOP.[RBP_STATE]
,SOP.[IFRS_ONEROUS_GRP]
,SOP.[IFRS_CY_GRP]
,SOP.[IFRS_PORT_GRP]
,SOP.[IFRS_MEASURE_MODEL]
,SOP.[BASIC_ENTRY_YEAR]
,SOP.[BASIC_ENTRY_MONTH]
,SOP.[IFRS_CB_TERM_M]
,SOP.[MTHS_TO_SALE]
,SOP.[IFRS_ICG_ID]
,SOP.[IFRS_ICG_ID_PROPHET]
,SOP.[SUB_GROUP_ID]
,SOP.[ENTITY_ID]
,SOP.[CB_START_DT]
,SOP.[CB_END_DT]
,SOP.[REL_INSURANCE_CONTRACT_GROUP_ID]
,1 AS [RID_ST_IND]
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID  AS JOB_RUN_ID
,@BATCHDATESTR AS BATCHDATE
,@GMT_START_DTTM AS ETL_PROCESS_DATE_TIME
FROM 
tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_SOP SOP 
LEFT JOIN FOND_ID.FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_INDICATOR_HEADER IND
ON SOP.[CHDRNUM] = IND.[CHDRNUM]
LEFT JOIN tempdb.dbo.#FOND_IFRS17_PROPHETU_REGION_AOM_MI_RIDER_EOP EOP
ON SOP.[CHDRNUM] = EOP.[CHDRNUM] 
WHERE IND.[CHDRNUM] IS NOT NULL AND IND.[NEW_INDICATOR] = 'Y'
;

SET @V_END = CURRENT_TIMESTAMP;
SET @V_SEQNO = @V_SEQNO + 1;
SET @V_DESCRIPTION = CONCAT('Finish ', @V_FUNCTION_NAME, ' : ', @V_END, ' Duration ', DATEDIFF(MINUTE, @V_START, @V_END));

INSERT INTO STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE, FUNC_NAME, SEQNO, [DESCRIPTION])
VALUES (@V_END, @V_FUNCTION_NAME, @V_SEQNO, @V_DESCRIPTION);


END TRY
	BEGIN CATCH
	    DECLARE @ErrorMessage AS NVARCHAR(1000) = ERROR_MESSAGE()
		DECLARE @ErrorSeverity AS INT = ERROR_SEVERITY()
		DECLARE @ErrorState AS INT = ERROR_STATE()

 		--IF @@TRANCOUNT > 0  
		--	ROLLBACK TRAN; 
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		INSERT into STAG_ID.STAG_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		RAISERROR(@ErrorMessage,@ErrorSeverity,@ErrorState)
	
	END CATCH

END
