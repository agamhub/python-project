CREATE PROC [FOND_ID].[USP_TESTING_IFRS17_EXEC_TEST_V2] @I_ETL_STREAM [VARCHAR](100),@I_TEST_SYSTEM [VARCHAR](100),@I_VAR_REPLACE [VARCHAR](8000),@I_BATCH_NAME [VARCHAR](100),@I_JOB_NAME [VARCHAR](100),@I_TEST_TYPE [VARCHAR](100),@I_SR_NO [VARCHAR](50),@I_REPORT_NAME [VARCHAR](100),@I_REPORT_DESCRIPTION [VARCHAR](500),@I_RUN_ID [VARCHAR](50) AS
BEGIN TRY
	DECLARE @NBR_STATEMENTS INT , 
			@I INT = 1,
			@CLAUSE1 VARCHAR(200) = '',
			@CLAUSE2 VARCHAR(200) = '',
			@CLAUSE3 VARCHAR(200) = '',
			@CLAUSE4 VARCHAR(200) = '',
			@CMD VARCHAR(4000);

	-- Drop temporary table		
	IF OBJECT_ID('tempdb.dbo.#T_TABLE_V2', 'U') IS NOT NULL DROP TABLE #T_TABLE_V2;
	
	-- Parameter check for NOT NULL columns
	IF (@I_ETL_STREAM IS NULL OR @I_TEST_SYSTEM IS NULL OR @I_REPORT_NAME IS NULL) THROW 51000, 'Please input Parameter ETL_STREAM, TEST_SYSTEM, and REPORT_NAME.', 1;  
	
	-- Set up scope for test run
	IF (@I_BATCH_NAME IS NOT NULL AND @I_BATCH_NAME <> '') SET @CLAUSE1 = ' AND UPPER(BATCH_NAME) = UPPER('''+@I_BATCH_NAME+''')'
	IF (@I_JOB_NAME IS NOT NULL  AND @I_JOB_NAME <> '') SET @CLAUSE2 = ' AND UPPER(JOB_NAME) = UPPER('''+@I_JOB_NAME+''')'
	IF (@I_TEST_TYPE IS NOT NULL  AND @I_TEST_TYPE <> '') SET @CLAUSE3 = ' AND UPPER(TEST_TYPE) = UPPER('''+@I_TEST_TYPE+''')'
	IF (@I_SR_NO IS NOT NULL  AND @I_SR_NO <> '') SET @CLAUSE4 = ' AND SR_NO = '''+CAST(@I_SR_NO AS VARCHAR)+''''
	

	SET @CMD = ( SELECT 'CREATE TABLE #T_TABLE_V2 
		WITH
		(
		DISTRIBUTION = HASH(SR_NO),
		HEAP
		) AS
		SELECT 
			ETL_STREAM,
			TEST_SYSTEM,
			BATCH_NAME,
			JOB_NAME,
			TEST_TYPE,
			SR_NO,	
			DESC_SCENARIO,
			PACKAGE_NAME,
			TEST_TABLE,
			IS_NULLABLE,
			TESTING_SCRIPT,
			TEST_STEPS,
			EXPECTED_RESULT,
			ROW_NUMBER() OVER(ORDER BY SR_NO ASC) AS ROWID
		FROM 
			FOND_ID.FOND_TESTING_IFRS17_TESTCASE_LIST_V2
		WHERE 
			UPPER(ETL_STREAM) = UPPER('''+@I_ETL_STREAM+''') 
			AND STATUS_FLAG=''ACTIVE''
			AND UPPER(TEST_SYSTEM) = UPPER('''+@I_TEST_SYSTEM+''') '+@CLAUSE1+ @CLAUSE2 + @CLAUSE3+ @CLAUSE4 );
	EXEC (@CMD);
	--PRINT @CMD;
	
	-- Check test case existence
	SET @NBR_STATEMENTS = (SELECT COUNT(*) FROM #T_TABLE_V2) ;
	IF (@NBR_STATEMENTS < 1) THROW 51001, 'Test case not found, please check input parameter!', 1;  
	
	
	-- Run test cases
	WHILE   @I <= @NBR_STATEMENTS
	BEGIN
		DECLARE @RESULT_STR VARCHAR(100) ,
				@STATUS_STR VARCHAR(100)='PASSED',
				@MESSAGE_STR VARCHAR(100) = '',
				@TEST_CMD VARCHAR(MAX) = ( SELECT TESTING_SCRIPT FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@BATCH_NAME VARCHAR(500) = ( SELECT BATCH_NAME FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@JOB_NAME VARCHAR(500) = ( SELECT JOB_NAME FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@TEST_TYPE VARCHAR(500) = ( SELECT TEST_TYPE FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@SR_NO VARCHAR(50) = ( SELECT SR_NO FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@DESC_SCENARIO VARCHAR(8000) = ( SELECT DESC_SCENARIO FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@PACKAGE_NAME VARCHAR(200) = ( SELECT PACKAGE_NAME FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@TEST_TABLE VARCHAR(200) = ( SELECT TEST_TABLE FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@IS_NULLABLE VARCHAR(50) = ( SELECT IS_NULLABLE FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@TEST_STEPS VARCHAR(8000) = ( SELECT TEST_STEPS FROM #T_TABLE_V2 WHERE ROWID=@I ),
				@EXPECTED_RESULT VARCHAR(500) = ( SELECT EXPECTED_RESULT FROM #T_TABLE_V2 WHERE ROWID=@I)
				;
		
		PRINT 'ROW ID -> ' + CAST(@I as VARCHAR) ;
		PRINT 'SR_NO -> ' + CAST(@SR_NO as VARCHAR) ;

		-- Invalid query
		IF UPPER(@TEST_CMD) NOT LIKE '%SELECT%' 
			INSERT INTO FOND_ID.FOND_TESTING_IFRS17_TESTCASE_REPORT_V2 
			SELECT
				@I_REPORT_NAME
				,@I_REPORT_DESCRIPTION
				,@I_RUN_ID
				,@I_ETL_STREAM
				,@I_TEST_SYSTEM
				,@BATCH_NAME
				,@JOB_NAME
				,@TEST_TYPE
				,@SR_NO
				,@DESC_SCENARIO
				,@PACKAGE_NAME
				,@TEST_TABLE
				,@IS_NULLABLE
				,@TEST_CMD
				,@TEST_STEPS
				,@EXPECTED_RESULT
				,'N/A'
				,'N/A'
				,CURRENT_TIMESTAMP
				,'Missing select statement'
				,CURRENT_TIMESTAMP; 
		ELSE
			BEGIN
				IF OBJECT_ID('tempdb.dbo.#CNT_TABLE_V2', 'U') IS NOT NULL DROP TABLE #CNT_TABLE_V2;
				CREATE TABLE #CNT_TABLE_V2
				(  
					RESULT VARCHAR(200)
				)  
				WITH  
				(   
					DISTRIBUTION = HASH (RESULT),  
					CLUSTERED COLUMNSTORE INDEX
				);  
				
				-- Replace period
				--IF (@I_PERIOD IS NOT NULL AND @I_PERIOD <> '') 
					--SET @TEST_CMD=(SELECT REPLACE(@TEST_CMD,'@PERIOD',@I_PERIOD));
				
				-- Replace variables
				IF (@I_VAR_REPLACE IS NOT NULL AND TRIM(@I_VAR_REPLACE) <> '')
					BEGIN
						IF OBJECT_ID('tempdb.dbo.#VAR_TABLE_V2', 'U') IS NOT NULL DROP TABLE #VAR_TABLE_V2;
						CREATE TABLE #VAR_TABLE_V2 					
						WITH ( DISTRIBUTION = ROUND_ROBIN ) AS
						SELECT ROW_NUMBER() OVER(ORDER BY value) AS ROWID, TRIM(value) as value FROM STRING_SPLIT(@I_VAR_REPLACE,'|');

						DECLARE @NBR_VARS INT = (SELECT COUNT(1) FROM #VAR_TABLE_V2), @J INT = 1;
						WHILE @J <= @NBR_VARS
						BEGIN
							DECLARE @VAR_VALUE VARCHAR(100) = ( SELECT value FROM #VAR_TABLE_V2 WHERE ROWID=@J);
							SET @TEST_CMD=
								(SELECT 
									REPLACE(@TEST_CMD
										,SUBSTRING(@VAR_VALUE,1,CHARINDEX('=',@VAR_VALUE,1)-1)
										,SUBSTRING(@VAR_VALUE,CHARINDEX('=',@VAR_VALUE,1)+1,LEN(@VAR_VALUE)-CHARINDEX('=',@VAR_VALUE,1))));
							SET @J +=1;
						END;
					END;


				DECLARE @TEST_CMD_RUN VARCHAR(MAX) = ( select 'INSERT INTO #CNT_TABLE_V2 '+ @TEST_CMD )
				BEGIN TRY
					EXEC (@TEST_CMD_RUN);
				END TRY	
				-- Invalid query
				BEGIN CATCH
					INSERT INTO FOND_ID.FOND_TESTING_IFRS17_TESTCASE_REPORT_V2 
					SELECT
						@I_REPORT_NAME
						,@I_REPORT_DESCRIPTION
						,@I_RUN_ID
						,@I_ETL_STREAM
						,@I_TEST_SYSTEM
						,@BATCH_NAME
						,@JOB_NAME
						,@TEST_TYPE
						,@SR_NO
						,@DESC_SCENARIO
						,@PACKAGE_NAME
						,@TEST_TABLE
						,@IS_NULLABLE
						,@TEST_CMD
						,@TEST_STEPS
						,@EXPECTED_RESULT
						,'QUERYFAILEDEXECUTION'
						,'FAILED'
						,CURRENT_TIMESTAMP
						,ERROR_MESSAGE()
						,CURRENT_TIMESTAMP; 
				END CATCH;

				SET @RESULT_STR = ( select * from #CNT_TABLE_V2 ) ;
				PRINT 'RESULT_STR : ' + @RESULT_STR;
				
				IF @RESULT_STR <> @EXPECTED_RESULT OR  @RESULT_STR IS NULL SET @STATUS_STR='FAILED';
				IF @RESULT_STR <> @EXPECTED_RESULT SET @MESSAGE_STR='Test result does not meet the expected result.';
				
				PRINT 'MESSAGE_STR : ' + @MESSAGE_STR;
				PRINT 'STATUS_STR : ' + @STATUS_STR;
				
				--test result does not meet the expected result
				IF @RESULT_STR IS NOT NULL
					INSERT INTO FOND_ID.FOND_TESTING_IFRS17_TESTCASE_REPORT_V2
					SELECT
						@I_REPORT_NAME
						,@I_REPORT_DESCRIPTION
						,@I_RUN_ID
						,@I_ETL_STREAM
						,@I_TEST_SYSTEM
						,@BATCH_NAME
						,@JOB_NAME
						,@TEST_TYPE
						,@SR_NO
						,@DESC_SCENARIO
						,@PACKAGE_NAME
						,@TEST_TABLE
						,@IS_NULLABLE
						,@TEST_CMD
						,@TEST_STEPS
						,@EXPECTED_RESULT
						,@RESULT_STR
						,@STATUS_STR
						,CURRENT_TIMESTAMP
						,@MESSAGE_STR
						,CURRENT_TIMESTAMP;
			END;
		SET @I +=1;
	END
	
END TRY

BEGIN CATCH
 -- SELECT
	--ERROR_PROCEDURE() AS ErrorProcedure,
	--ERROR_NUMBER() AS ErrorNumber,
	--ERROR_STATE() AS ErrorState,
	--ERROR_SEVERITY() AS ErrorSeverity,
	----ERROR_LINE() AS ErrorLine,
	--ERROR_MESSAGE() AS ErrorMessage;
	DECLARE @errmsg AS NVARCHAR(MAX)
	SELECT @errmsg = ERROR_MESSAGE() 
	RAISERROR(@errmsg,18,1)
END CATCH;
