CREATE PROC [FOND_ID].[USP_LOAD_ETL5_RI_CAT_PERMIUM_PRE_ALLOCATED] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	--DECLARE @batch [nvarchar](30);
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.FOND_ETL5_RI_CAT_PREMIUM';
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'RI_CAT_PRE_ALLCT';
 
	------START GET RUN ID DETAIL FROM ABC------
	DECLARE 
	@BATCH_MASTER_ID  VARCHAR(20) = 0,
	@BATCH_RUN_ID    VARCHAR(20) = 0,
	@JOB_MASTER_ID   VARCHAR(20) = 0,
	@JOB_RUN_ID     VARCHAR(20) = 0,
	@GMT_START_DTTM   VARCHAR(19) = CONVERT(DATETIME2, GETDATE());

	EXEC STAG_ID.USP_GetRunIdReturn
	@JobName     = @JOBNAMESTR,
	@BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	@BATCH_RUN_ID  = @BATCH_RUN_ID OUTPUT,
	@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT,
	@JOB_RUN_ID   = @JOB_RUN_ID OUTPUT,
	@GMT_START_DTTM = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC------

BEGIN TRY
	SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
	PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
	SET @V_START 	= convert(datetime,getDATE());
	
	SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
	PRINT	@V_DESCRIPTION;
	SET @V_SEQNO		= @V_SEQNO + 1;
	
	INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
	---------------------------- DROP TEMPORARY TABLE ------------------------------
	IF OBJECT_ID('tempdb..#ICG') IS NOT NULL
	BEGIN
		DROP TABLE #ICG
	END;
	IF OBJECT_ID('tempdb..#ICG_1') IS NOT NULL
	BEGIN
		DROP TABLE #ICG_1
	END;
	IF OBJECT_ID('tempdb..#RI_CAT_PREMIUM_CONFIG') IS NOT NULL
	BEGIN
		DROP TABLE #RI_CAT_PREMIUM_CONFIG
	END;
	IF OBJECT_ID('tempdb..#RI_PREM_ALLOCATED') IS NOT NULL
	BEGIN
		DROP TABLE #RI_PREM_ALLOCATED
	END;
	IF OBJECT_ID('tempdb..#FOND_ETL5_RI_CAT_PREM') IS NOT NULL
	BEGIN
		DROP TABLE #FOND_ETL5_RI_CAT_PREM
	END;
	IF OBJECT_ID('tempdb..#FOND_ETL5_RI_CAT_PREM_FINAL') IS NOT NULL
	BEGIN
		DROP TABLE #FOND_ETL5_RI_CAT_PREM_FINAL
	END;
	IF OBJECT_ID('tempdb..#FINANCE_CONFIG') IS NOT NULL
	BEGIN
		DROP TABLE #FINANCE_CONFIG
	END;
	IF OBJECT_ID('tempdb..#IBNR_CONVENT') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_CONVENT
	END;
	IF OBJECT_ID('tempdb..#IBNR_SHAR') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_SHAR
	END;	
	IF OBJECT_ID('tempdb..#IBNR') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR
	END;	
	IF OBJECT_ID('tempdb..#IBNR_PRE_ALLOCATED_DR') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_PRE_ALLOCATED_DR
	END;
	IF OBJECT_ID('tempdb..#IBNR_PRE_ALLOCATED_CR') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_PRE_ALLOCATED_CR
	END;
	IF OBJECT_ID('tempdb..#IBNR_PRE_ALLOCATED_FINAL') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_PRE_ALLOCATED_FINAL
	END;

	SET @V_SEQNO 	= @V_SEQNO + 1;
	SET @V_START 	= convert(datetime,getDATE());
	SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE RI_CAT_PERMIUM_FINAL : ' + convert(varchar,@V_START,121);
	PRINT @V_DESCRIPTION;
	
	INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 
	
	exec [FOND_ID].[USP_LOAD_ETL5_RI_CAT_LOADTOSTAG] @batch, @JOBNAMESTR;
	
	
	---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------	
	-- Get all data from ICG_ID based on POLICY_NO
	select 
		left(convert(varchar(20),BATCH_FROM_DT,112),6) BATCHDATE, 
		A.POLICY_NO, 
		RI_ICG_ID AS INSURANCE_CONTRACT_GROUP_ID,
		TREATY_ID,
		SUBSTRING(INSURANCE_CONTRACT_GROUP_ID,7,3) CONV_SHAR
	into #ICG
	from (
		select *,
			row_number() over (PARTITION by INSURANCE_CONTRACT_GROUP_ID,RI_ICG_ID order by EFF_FROM_DT DESC ) rn 
		FROM FCORE_ID.FOND_RI_ICG_STORE_UC 
		WHERE BENEFIT_CD=PRODUCT_CD 
		AND TREATY_ID like '%a%' 
		AND CURR_IND='Y'
		AND RI_ICG_ID like '%PRNONPXLCON%'
	) A 
	WHERE rn=1 
	AND LEFT(CONVERT(VARCHAR(20),BATCH_FROM_DT,112),6) = SUBSTRING(CAST(@batch AS VARCHAR),1,4)+SUBSTRING(CAST(@batch AS VARCHAR),5,2) ;

	SELECT 
		A.POLICYNUMBER as POLICY_NUMBER
		,CASE WHEN A.RISKTYPE IN ('ADBA', 'ADBR','PACR','XPA1','ZPA1','ADBS', 'PACS') THEN 'ADBR'
			WHEN A.RISKTYPE IN ('DTHA', 'DTHR','DTHG','DTGI','DTHS', 'DTLS') THEN 'DTHR'
			WHEN A.RISKTYPE IN ('ETPD', 'TPDA', 'TPDR', 'RTPD') THEN 'TPDR'
			WHEN A.RISKTYPE IN ('ADDR', 'RDDS', 'DDGI','ADDS', 'RDSS') THEN 'RDDS'
			WHEN A.RISKTYPE IN ('DTCK','DTCI') THEN RISKTYPE
			ELSE '' END RISK_TYPE
		,A.RETENTION SA_RETAINED
		,A.CONV_SYAR CONV_SHAR 
		,B.INSURANCE_CONTRACT_GROUP_ID
		,B.CONV_SHAR ICG_CONV_SHAR
		,CASE WHEN A.RISKTYPE IN ('ADBA', 'ADBR','PACR','XPA1','ZPA1','ADBS', 'PACS') THEN 'Accident Death'
			WHEN A.RISKTYPE IN ('DTHA', 'DTHR','DTHG','DTGI','DTHS', 'DTLS','DTCK','DTCI') THEN 'Death'
			WHEN A.RISKTYPE IN ('ETPD', 'TPDA', 'TPDR', 'RTPD') THEN 'TPD'
			ELSE '' END RISK_DESC
	INTO #ICG_1
	FROM STAG_ID.STAG_ETL5_RI_CAT_PRE_ALLOCATED A
	LEFT JOIN #ICG B ON A.POLICYNUMBER = B.POLICY_NO
	WHERE B.INSURANCE_CONTRACT_GROUP_ID is not null;

	SELECT 
		SUBSTRING(CAST(@batch AS VARCHAR),1,4)+'0'+SUBSTRING(CAST(@batch AS VARCHAR),5,2) PERIOD,
		A.CATEGORY,
		A.REINSURER,
		A.RI_CAT_PREMIUM,
		B.RI_CAT_PREMIUM_CAT,
		CAST(CAST(CAST(A.RI_CAT_PREMIUM AS NUMERIC)/CAST(B.RI_CAT_PREMIUM_CAT AS NUMERIC)*100 AS NUMERIC) AS VARCHAR)+'%' AS [%_SHARE]
	INTO #RI_CAT_PREMIUM_CONFIG
	FROM STAG_ID.STAG_CONFIG_STAG_ETL5_RI_CAT_PREMIUM_CONFIG A
	LEFT JOIN (
		SELECT 
			BATCHDATE, CATEGORY, SUM(RI_CAT_PREMIUM) RI_CAT_PREMIUM_CAT 
		FROM STAG_ID.STAG_CONFIG_STAG_ETL5_RI_CAT_PREMIUM_CONFIG
		where BATCHDATE =left(@batch,6)
		GROUP BY BATCHDATE,CATEGORY 
	) B ON A.CATEGORY = B.CATEGORY AND A.BATCHDATE = B.BATCHDATE
	where A.BATCHDATE =left(@batch,6);


	-- DROP TABLE #RI_PREM_ALLOCATED
	SELECT 
		A.*,
		B.SA_RETAINED SA_RETAINED_CAT,
		CAST(CAST(A.SA_RETAINED AS NUMERIC(28,16))/CAST(B.SA_RETAINED AS NUMERIC(28,16)) AS NUMERIC(28,16)) SA_ICG_SA_CAT,
		ROUND(CAST(CAST(A.SA_RETAINED AS NUMERIC)/CAST(B.SA_RETAINED AS NUMERIC) AS NUMERIC(28,16))*RI_CAT_PREMIUM_CAT,2) RI_PREM_ALLOCATED 
	INTO #RI_PREM_ALLOCATED
	FROM (
		SELECT DISTINCT A.RISK_DESC,A.CATEGORY CONV_SHAR,A.ICG_ID,A.SA_RETAINED,B.RI_CAT_PREMIUM_CAT 
		FROM (
			SELECT A.*,CASE WHEN ICG_CONV_SHAR = 'CON' THEN 'Conventional' ELSE 'Syariah' END CATEGORY 
			FROM (
				SELECT 
					ICG_CONV_SHAR,
					RISK_DESC,
					INSURANCE_CONTRACT_GROUP_ID ICG_ID
					,SUM(CAST(SA_RETAINED AS NUMERIC)) SA_RETAINED
				FROM #ICG_1
				WHERE RISK_DESC IS NOT NULL AND RISK_DESC != ''  AND INSURANCE_CONTRACT_GROUP_ID IS NOT NULL
				GROUP BY ICG_CONV_SHAR,RISK_DESC,INSURANCE_CONTRACT_GROUP_ID
			) A 
		) A
		LEFT JOIN #RI_CAT_PREMIUM_CONFIG B ON A.CATEGORY = B.CATEGORY
	) A 
	LEFT JOIN (
		SELECT 
			ICG_CONV_SHAR,
			CASE WHEN ICG_CONV_SHAR = 'CON' THEN 'Conventional' ELSE 'Syariah' END CATEGORY,
			SUM(CAST(SA_RETAINED AS NUMERIC)) SA_RETAINED
		FROM #ICG_1
		WHERE RISK_DESC IS NOT NULL AND RISK_DESC != ''  AND INSURANCE_CONTRACT_GROUP_ID IS NOT NULL
		GROUP BY ICG_CONV_SHAR,CASE WHEN ICG_CONV_SHAR = 'CON' THEN 'Conventional' ELSE 'Syariah' END
	) B ON A.CONV_SHAR = B.CATEGORY ;

	SELECT DISTINCT 
		A.RISK_DESC, 
		A.CONV_SHAR, 
		A.ICG_ID, 
		A.RI_PREM_ALLOCATED, 
		B.REINSURER,
		B.PERCENTAGE,
		A.RI_PREM_ALLOCATED*B.PERCENTAGE WEIGHTED_PREMIUM 
	INTO #FOND_ETL5_RI_CAT_PREM
	FROM #RI_PREM_ALLOCATED A
	LEFT JOIN (
		SELECT 
			CATEGORY,REINSURER,CAST((A.RI_CAT_PREMIUM/A.RI_CAT_PREMIUM_CAT) AS float) PERCENTAGE 
		FROM #RI_CAT_PREMIUM_CONFIG A
	) B ON A.CONV_SHAR = B.CATEGORY
	WHERE A.CONV_SHAR IN ('Conventional', 'Syariah');

	SELECT 
	DISTINCT 
		RISK_DESC,
		CONV_SHAR,
		ICG_ID,
		CASE WHEN CONV_SHAR = 'Conventional' AND REINSURER = 'Reindo' THEN WEIGHTED_PREMIUM ELSE 0 END AS WEIGHTED_PREM_REINDO_CONV,
		CASE WHEN CONV_SHAR = 'Conventional' AND REINSURER = 'Marein' THEN WEIGHTED_PREMIUM ELSE 0 END AS WEIGHTED_PREM_MAREIN_CONV,
		CASE WHEN CONV_SHAR = 'Conventional' AND REINSURER = 'RGA' THEN WEIGHTED_PREMIUM ELSE 0 END AS WEIGHTED_PREM_RGA_CONV
		,CASE WHEN CONV_SHAR = 'Syariah' AND REINSURER = 'Reindo' THEN WEIGHTED_PREMIUM ELSE 0 END AS WEIGHTED_PREM_REINDO_SHAR
		,CASE WHEN CONV_SHAR = 'Syariah' AND REINSURER = 'RGA' THEN WEIGHTED_PREMIUM ELSE 0 END WEIGHTED_PREM_RGA_SHAR
	INTO #FOND_ETL5_RI_CAT_PREM_FINAL
	FROM #FOND_ETL5_RI_CAT_PREM
	WHERE CONV_SHAR IN ('Conventional','Syariah') AND REINSURER in('Reindo','Marein','RGA');

	--CREATE TEMP TABLE #FINANCE_CONFIG
	SELECT
	  SQ_FINANCE_CONFIG.SUN_CD, 
	  SQ_FINANCE_CONFIG.NEW_COA,
	  SQ_FINANCE_CONFIG.CASHFLOW_TYPE_L2
	INTO #FINANCE_CONFIG
	FROM (
		SELECT
		  ALL_CONFIG.SUN_CD,
		  CASE WHEN DUPL.SUN_CD IS NOT NULL AND SUNGL4.SUN_CD IS NOT NULL THEN SUNGL4.NEW_COA ELSE ALL_CONFIG.NEW_COA END AS NEW_COA,
		  CASE WHEN DUPL.SUN_CD IS NOT NULL AND SUNGL4.SUN_CD IS NOT NULL THEN SUNGL4.CASHFLOW_TYPE_L2 ELSE ALL_CONFIG.CASHFLOW_TYPE_L2 END AS CASHFLOW_TYPE_L2
		FROM STAG_ID.STAG_CONFIG_ABST_FINANCE_CONFIG  AS ALL_CONFIG
		LEFT JOIN (SELECT BATCHDATE, SUN_CD FROM STAG_ID.STAG_CONFIG_ABST_FINANCE_CONFIG where ACTION<>'D' GROUP BY BATCHDATE, SUN_CD HAVING COUNT(*) > 1) AS DUPL ON ALL_CONFIG.BATCHDATE = DUPL.BATCHDATE AND ALL_CONFIG.SUN_CD = DUPL.SUN_CD
		LEFT JOIN (SELECT BATCHDATE, SUN_CD, NEW_COA, CASHFLOW_TYPE_L2 FROM STAG_ID.STAG_CONFIG_ABST_FINANCE_CONFIG WHERE PAS_NAME = 'SUNGL4' and ACTION<>'D' GROUP BY BATCHDATE, SUN_CD,    NEW_COA,  CASHFLOW_TYPE_L2) AS SUNGL4 ON ALL_CONFIG.BATCHDATE = SUNGL4.BATCHDATE AND ALL_CONFIG.SUN_CD = SUNGL4.SUN_CD
		WHERE ALL_CONFIG.BATCHDATE = LEFT(@batch, 6) and ALL_CONFIG.ACTION<>'D'
	) AS SQ_FINANCE_CONFIG
	GROUP BY SQ_FINANCE_CONFIG.SUN_CD, SQ_FINANCE_CONFIG.NEW_COA, SQ_FINANCE_CONFIG.CASHFLOW_TYPE_L2;

	SELECT 
		SUBSTRING(CAST(@batch AS VARCHAR),1,4)+SUBSTRING(CAST(@batch AS VARCHAR),5,2) AS ACCT_PERIOD
		,EOMONTH(CAST(@batch AS VARCHAR)) AS TRANS_DATE
		,'IDR' AS ORG_CCY
		,'IDR' AS RPT_CCY
		,A.AMT_ORIG_CCY
		,A.AMT_RPT_CCY
		,A.ICG_ID
		,'' AS POL_NO
		,'' AS BENF_CD
		,'' AS PROD_CD
		,'' AS TREATY_ID
		,'' AS TREATY_IDENTIFIER
		,A.FUND_CD
		,'' AS CHANNEL_CD
		,A.TXN_TYPE
		,'IAI' AS ENTITY_ID
		,A.ACCT_CD
		,B.NEW_COA NEW_COA
		,B.CASHFLOW_TYPE_L2 CASHFLOW_TYPE_L2
		,A.D_C
		,'' AS JRNAL_NO
		,'' AS ANAL_T0
		,'' AS ANAL_T1
		,'' AS ANAL_T2
		,'' AS ANAL_T3
		,'' AS ANAL_T4
		,'' AS ANAL_T5
		,'' AS ANAL_T6
		,'' AS ANAL_T7
		,'' AS ANAL_T8
		,'ADJ' AS JRNAL_TYPE 
	INTO #IBNR_CONVENT	
	FROM (
	SELECT DISTINCT
		ICG_ID
		, WEIGHTED_PREM_REINDO_CONV AMT_ORIG_CCY
		, WEIGHTED_PREM_REINDO_CONV AMT_RPT_CCY
		,'0000000' FUND_CD
		,'WEIGHTED_PREM_REINDO_CONV' TXN_TYPE
		,'4152310101' ACCT_CD
		,CASE WHEN WEIGHTED_PREM_REINDO_CONV < 0 THEN 'CR' ELSE 'DR' END AS D_C
	FROM #FOND_ETL5_RI_CAT_PREM_FINAL WHERE CONV_SHAR = 'Conventional' 
	UNION ALL
	SELECT DISTINCT
		ICG_ID
		, WEIGHTED_PREM_MAREIN_CONV AMT_ORIG_CCY
		, WEIGHTED_PREM_MAREIN_CONV AMT_RPT_CCY
		,'0000000' FUND_CD
		,'WEIGHTED_PREM_MAREIN_CONV' TXN_TYPE
		,'4152310101' ACCT_CD
		,CASE WHEN WEIGHTED_PREM_MAREIN_CONV < 0 THEN 'CR' ELSE 'DR' END AS D_C
	FROM #FOND_ETL5_RI_CAT_PREM_FINAL WHERE CONV_SHAR = 'Conventional' 
	UNION ALL
	SELECT DISTINCT
		ICG_ID
		, WEIGHTED_PREM_RGA_CONV AMT_ORIG_CCY
		, WEIGHTED_PREM_RGA_CONV AMT_RPT_CCY
		,'0000000' FUND_CD
		,'WEIGHTED_PREM_RGA_CONV' TXN_TYPE
		,'4152310101' ACCT_CD
		,CASE WHEN WEIGHTED_PREM_RGA_CONV < 0 THEN 'CR' ELSE 'DR' END AS D_C
	FROM #FOND_ETL5_RI_CAT_PREM_FINAL WHERE CONV_SHAR = 'Conventional' 
	)A 
	LEFT JOIN #FINANCE_CONFIG AS B ON A.ACCT_CD = B.SUN_CD;


	SELECT 
		SUBSTRING(CAST(@batch AS VARCHAR),1,4)+SUBSTRING(CAST(@batch AS VARCHAR),5,2) AS ACCT_PERIOD,
		EOMONTH(CAST(@batch AS VARCHAR)) AS TRANS_DATE,
		'IDR' AS ORG_CCY,
		'IDR' AS RPT_CCY,
		A.AMT_ORIG_CCY,
		A.AMT_RPT_CCY,
		A.ICG_ID,
		'' AS POL_NO,
		'' AS BENF_CD,
		'' AS PROD_CD,
		'' AS TREATY_ID,
		'' AS TREATY_IDENTIFIER,
		A.FUND_CD,
		'' AS CHANNEL_CD,
		A.TXN_TYPE,
		'IAI' AS ENTITY_ID,
		A.ACCT_CD,
		B.NEW_COA NEW_COA,
		B.CASHFLOW_TYPE_L2 CASHFLOW_TYPE_L2,
		A.D_C,
		'' AS JRNAL_NO,
		'' AS ANAL_T0,
		'' AS ANAL_T1,
		'' AS ANAL_T2,
		'' AS ANAL_T3,
		'' AS ANAL_T4,
		'' AS ANAL_T5,
		'' AS ANAL_T6,
		'' AS ANAL_T7,
		'' AS ANAL_T8,
		'ADJ' AS JRNAL_TYPE
	INTO #IBNR_SHAR		
	FROM (		
	SELECT DISTINCT
		ICG_ID
		, WEIGHTED_PREM_REINDO_SHAR AMT_ORIG_CCY
		, WEIGHTED_PREM_REINDO_SHAR AMT_RPT_CCY
		,'ITYT000' FUND_CD
		,'WEIGHTED_PREM_REINDO_SHAR' TXN_TYPE
		,'4152310101' ACCT_CD
		,CASE WHEN WEIGHTED_PREM_REINDO_SHAR < 0 THEN 'CR' ELSE 'DR' END AS D_C
	FROM #FOND_ETL5_RI_CAT_PREM_FINAL WHERE CONV_SHAR = 'Syariah'
	UNION ALL
	SELECT DISTINCT
		ICG_ID
		, WEIGHTED_PREM_RGA_SHAR AMT_ORIG_CCY
		, WEIGHTED_PREM_RGA_SHAR AMT_RPT_CCY
		,'ITYT000' FUND_CD
		,'WEIGHTED_PREM_RGA_SHAR' TXN_TYPE
		,'4152310101' ACCT_CD
		,CASE WHEN WEIGHTED_PREM_RGA_SHAR < 0 THEN 'CR' ELSE 'DR' END AS D_C
	FROM #FOND_ETL5_RI_CAT_PREM_FINAL WHERE CONV_SHAR = 'Syariah'
	)A 
	LEFT JOIN #FINANCE_CONFIG AS B ON A.ACCT_CD = B.SUN_CD;

	SELECT DISTINCT 
		ACCT_PERIOD,
		TRANS_DATE,
		ORG_CCY,
		RPT_CCY,
		AMT_ORIG_CCY,
		AMT_RPT_CCY,
		ICG_ID,
		POL_NO,
		BENF_CD,
		PROD_CD,
		B.TREATY_ID as TREATY_ID,
		TREATY_IDENTIFIER,
		FUND_CD,
		CHANNEL_CD,
		TXN_TYPE,
		ENTITY_ID,
		ACCT_CD,
		NEW_COA,
		CASHFLOW_TYPE_L2,
		D_C,
		JRNAL_NO,
		ANAL_T0,
		ANAL_T1,
		ANAL_T2,
		ANAL_T3,
		ANAL_T4,
		ANAL_T5,
		ANAL_T6,
		ANAL_T7,
		ANAL_T8,
		JRNAL_TYPE
	INTO #IBNR
	FROM (
	SELECT * FROM #IBNR_CONVENT
	UNION
	SELECT * FROM #IBNR_SHAR) A
	left join (select distinct TREATY_ID,INSURANCE_CONTRACT_GROUP_ID,row_number() over (partition by INSURANCE_CONTRACT_GROUP_ID order by INSURANCE_CONTRACT_GROUP_ID) rn from #ICG ) B on A.ICG_ID=B.INSURANCE_CONTRACT_GROUP_ID
	where B.rn=1 ;

	SELECT A.* 
	INTO #IBNR_PRE_ALLOCATED_DR
	FROM (
	SELECT 
		ACCT_PERIOD,TRANS_DATE,ORG_CCY,RPT_CCY,AMT_ORIG_CCY,AMT_RPT_CCY,ICG_ID,POL_NO,BENF_CD,PROD_CD
		,TREATY_ID,TREATY_IDENTIFIER,FUND_CD,CHANNEL_CD,TXN_TYPE,ENTITY_ID
		,ACCT_CD,NEW_COA,CASHFLOW_TYPE_L2
		,D_C,JRNAL_NO,ANAL_T0,ANAL_T1,ANAL_T2,ANAL_T3,ANAL_T4,ANAL_T5,ANAL_T6,ANAL_T7
		,ANAL_T8,JRNAL_TYPE 
	FROM #IBNR
	WHERE D_C = 'DR' 
	AND AMT_ORIG_CCY != 0
	AND TXN_TYPE IN ('WEIGHTED_PREM_MAREIN_CONV','WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_REINDO_SHAR','WEIGHTED_PREM_RGA_SHAR')
	UNION
	SELECT 
		A.ACCT_PERIOD,A.TRANS_DATE,A.ORG_CCY,A.RPT_CCY,A.AMT_ORIG_CCY *-1 AMT_ORIG_CCY,A.AMT_RPT_CCY *-1 AMT_RPT_CCY
		,A.ICG_ID,A.POL_NO,A.BENF_CD,A.PROD_CD
		,A.TREATY_ID,A.TREATY_IDENTIFIER,A.FUND_CD,A.CHANNEL_CD,A.TXN_TYPE,A.ENTITY_ID
		,A.ACCT_CD_NEW AS ACCT_CD
		,B.NEW_COA NEW_COA, B.CASHFLOW_TYPE_L2 CASHFLOW_TYPE_L2
		,'CR 'D_C,A.JRNAL_NO,A.ANAL_T0,A.ANAL_T1,A.ANAL_T2,A.ANAL_T3,A.ANAL_T4,A.ANAL_T5,A.ANAL_T6,A.ANAL_T7
		,A.ANAL_T8,A.JRNAL_TYPE
	FROM (
		SELECT *,
			CASE WHEN TXN_TYPE = 'WEIGHTED_PREM_MAREIN_CONV' THEN '3321900001' 
			WHEN TXN_TYPE IN ('WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_REINDO_SHAR') THEN '3322500001'
			WHEN TXN_TYPE IN ('WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_RGA_SHAR') THEN '3322700001'
			END AS ACCT_CD_NEW 
		FROM #IBNR 
		WHERE D_C = 'DR' 
		AND AMT_ORIG_CCY != 0
		AND TXN_TYPE IN ('WEIGHTED_PREM_MAREIN_CONV','WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_REINDO_SHAR','WEIGHTED_PREM_RGA_SHAR')
	) A
	LEFT JOIN #FINANCE_CONFIG B ON A.ACCT_CD_NEW = B.SUN_CD
	) A ;

	SELECT A.* 
	INTO #IBNR_PRE_ALLOCATED_CR
	FROM (
	SELECT 
		ACCT_PERIOD,TRANS_DATE,ORG_CCY,RPT_CCY,AMT_ORIG_CCY,AMT_RPT_CCY,ICG_ID,POL_NO,BENF_CD,PROD_CD
		,TREATY_ID,TREATY_IDENTIFIER,FUND_CD,CHANNEL_CD,TXN_TYPE,ENTITY_ID
		,ACCT_CD,NEW_COA,CASHFLOW_TYPE_L2
		,D_C,JRNAL_NO,ANAL_T0,ANAL_T1,ANAL_T2,ANAL_T3,ANAL_T4,ANAL_T5,ANAL_T6,ANAL_T7
		,ANAL_T8,JRNAL_TYPE 
	FROM #IBNR
	WHERE D_C = 'CR' 
	AND AMT_ORIG_CCY != 0
	AND TXN_TYPE IN ('WEIGHTED_PREM_MAREIN_CONV','WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_REINDO_SHAR','WEIGHTED_PREM_RGA_SHAR')
	UNION
	SELECT 
		A.ACCT_PERIOD,A.TRANS_DATE,A.ORG_CCY,A.RPT_CCY,A.AMT_ORIG_CCY *-1 AMT_ORIG_CCY,A.AMT_RPT_CCY *-1 AMT_RPT_CCY
		,A.ICG_ID,A.POL_NO,A.BENF_CD,A.PROD_CD
		,A.TREATY_ID,A.TREATY_IDENTIFIER,A.FUND_CD,A.CHANNEL_CD,A.TXN_TYPE,A.ENTITY_ID
		,A.ACCT_CD_NEW AS ACCT_CD
		,B.NEW_COA NEW_COA, B.CASHFLOW_TYPE_L2 CASHFLOW_TYPE_L2
		,'DR 'D_C,A.JRNAL_NO,A.ANAL_T0,A.ANAL_T1,A.ANAL_T2,A.ANAL_T3,A.ANAL_T4,A.ANAL_T5,A.ANAL_T6,A.ANAL_T7
		,A.ANAL_T8,A.JRNAL_TYPE
	FROM (
		SELECT *,
			CASE WHEN TXN_TYPE = 'WEIGHTED_PREM_MAREIN_CONV' THEN '3321900001' 
			WHEN TXN_TYPE IN ('WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_REINDO_SHAR') THEN '3322500001'
			WHEN TXN_TYPE IN ('WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_RGA_SHAR') THEN '3322700001'
			END AS ACCT_CD_NEW 
		FROM #IBNR 
		WHERE D_C = 'CR' 
		AND AMT_ORIG_CCY != 0
		AND TXN_TYPE IN ('WEIGHTED_PREM_MAREIN_CONV','WEIGHTED_PREM_REINDO_CONV','WEIGHTED_PREM_RGA_CONV','WEIGHTED_PREM_REINDO_SHAR','WEIGHTED_PREM_RGA_SHAR')
	) A
	LEFT JOIN #FINANCE_CONFIG B ON A.ACCT_CD_NEW = B.SUN_CD
	) A ;

	SELECT A.* 
	INTO #IBNR_PRE_ALLOCATED_FINAL
	FROM (
		SELECT * FROM #IBNR_PRE_ALLOCATED_DR
		UNION ALL
		SELECT * FROM #IBNR_PRE_ALLOCATED_CR
		UNION ALL
		SELECT DISTINCT * FROM #IBNR WHERE AMT_ORIG_CCY = 0
	) A ;

	---------------------------- TO Handle rerun process ------------------------------
	BEGIN TRANSACTION;
	SET @V_SEQNO 	= @V_SEQNO + 1;
	SET @V_START 	= convert(datetime,getDATE());
	SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_ETL5_IBNR_PRE_ALLOCATED] : ' + convert(varchar,@V_START,121);
	PRINT @V_DESCRIPTION;
	
	INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 
	
	DELETE FROM FOND_ID.FOND_ETL5_RI_CAT_PREMIUM 
	WHERE BATCHDATE =  SUBSTRING(CAST(@batch AS VARCHAR),1,4)+SUBSTRING(CAST(@batch AS VARCHAR),5,2)
	
	---------------------------- TO Handle rerun process ------------------------------
	SET @V_SEQNO 	= @V_SEQNO + 1;
	SET @V_START 	= convert(datetime,getDATE());
	SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_IBNR_PRE_ALLOCATED] : ' + convert(varchar,@V_START,121);
	PRINT @V_DESCRIPTION;
	INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
	VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
	
	-- DROP TABLE FOND_ID.FOND_ETL5_RI_CAT_PREMIUM
	INSERT INTO FOND_ID.FOND_ETL5_RI_CAT_PREMIUM
	SELECT DISTINCT CAST(A.ENTITY_ID AS VARCHAR(25)) ENTITY_ID
					,CAST((left(A.ACCT_PERIOD,4)+'0'+right(A.ACCT_PERIOD,2)) AS VARCHAR(30)) ACCT_PERIOD
					,CAST(A.TRANS_DATE AS DATE) TRANS_DATE
					,CAST(A.ORG_CCY AS VARCHAR(3)) ORG_CCY
					,CAST(A.RPT_CCY AS VARCHAR(3)) RPT_CCY
					,CAST(A.AMT_ORIG_CCY AS NUMERIC(28,6)) AMT_ORIG_CCY
					,CAST(A.AMT_RPT_CCY AS NUMERIC(28,6)) AMT_RPT_CCY
					,CAST(A.ICG_ID AS VARCHAR(40)) ICG_ID
					,CAST(A.POL_NO AS VARCHAR(36)) POL_NO
					,CAST(A.BENF_CD AS VARCHAR(30)) BENF_CD
					,CAST(A.PROD_CD AS VARCHAR(30)) PROD_CD
					,CAST(A.TREATY_ID AS VARCHAR(30)) TREATY_ID
					,CAST(A.TREATY_IDENTIFIER AS VARCHAR(30)) TREATY_IDENTIFIER
					,CAST(A.FUND_CD AS VARCHAR(15)) FUND_CD
					,CAST(A.CHANNEL_CD AS VARCHAR(15)) CHANNEL_CD
					,CAST(A.TXN_TYPE AS VARCHAR(50)) TXN_TYPE
					,CAST(A.ACCT_CD AS VARCHAR(16)) ACCT_CD
					,CAST(A.NEW_COA AS VARCHAR(16)) NEW_COA
					,CAST(A.CASHFLOW_TYPE_L2 AS VARCHAR(65)) CASHFLOW_TYPE_L2
					,CAST(A.D_C AS VARCHAR(2)) D_C
					,CAST(A.JRNAL_NO AS VARCHAR(30)) JRNAL_NO
					,CAST(A.FUND_CD AS VARCHAR(15)) ANAL_T0
					,CAST(A.ANAL_T1 AS VARCHAR(15)) ANAL_T1
					,CAST(A.ANAL_T2 AS VARCHAR(15)) ANAL_T2
					,CAST(A.ANAL_T3 AS VARCHAR(15)) ANAL_T3
					,CAST(A.ANAL_T4 AS VARCHAR(15)) ANAL_T4
					,CAST(A.ANAL_T5 AS VARCHAR(15)) ANAL_T5
					,CAST(A.ANAL_T6 AS VARCHAR(15)) ANAL_T6
					,CAST(A.ANAL_T7 AS VARCHAR(15)) ANAL_T7
					,CAST(A.ANAL_T8 AS VARCHAR(15)) ANAL_T8
					,CAST(A.JRNAL_TYPE AS VARCHAR(4)) JRNAL_TYPE
					,@BATCH_MASTER_ID AS BATCH_MASTER_ID
					,@BATCH_RUN_ID AS BATCH_RUN_ID
					,@JOB_MASTER_ID AS JOB_MASTER_ID
					,@JOB_RUN_ID AS JOB_RUN_ID
					,SUBSTRING( CAST(@batch AS VARCHAR),1,6) BATCHDATE
					,GETDATE() ETL_PROCESS_DATE_TIME
	FROM #IBNR_PRE_ALLOCATED_FINAL A
	;
	
	--------------------------delete passtrough
	delete from FOND_ID.FOND_PRE_ALLOC_PASS_THROUGH_EXTRACT  where BATCHDATE=SUBSTRING( CAST(@batch AS VARCHAR),1,6) and TXN_TYPE not like '%IBNR%'
	--------------------------insert to passtrhough
	insert into FOND_ID.FOND_PRE_ALLOC_PASS_THROUGH_EXTRACT
	(ENTITY_ID,ACCT_PERIOD,TRANS_DATE,ORG_CCY,RPT_CCY,AMT_ORIG_CCY,AMT_RPT_CCY,ICG_ID,POL_NO,BENF_CD,PROD_CD,TREATY_ID,TREATY_IDENTIFIER,FUND_CD,CHANNEL_CD,TXN_TYPE,ACCT_CD,NEW_COA,CASHFLOW_TYPE_L2,D_C,JRNAL_NO,ANAL_T0,ANAL_T1,ANAL_T2,ANAL_T3,ANAL_T4,ANAL_T5,ANAL_T6,ANAL_T7,ANAL_T8,JRNAL_TYPE,BATCH_MASTER_ID,BATCH_RUN_ID,JOB_MASTER_ID,JOB_RUN_ID,BATCHDATE,ETL_PROCESS_DATE_TIME)
	select
	ENTITY_ID, ACCT_PERIOD, TRANS_DATE, ORG_CCY, RPT_CCY, AMT_ORIG_CCY, AMT_RPT_CCY, ICG_ID, POL_NO, BENF_CD, PROD_CD, TREATY_ID, TREATY_IDENTIFIER, FUND_CD, CHANNEL_CD, TXN_TYPE, ACCT_CD, NEW_COA, CASHFLOW_TYPE_L2, D_C, JRNAL_NO, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, JRNAL_TYPE, BATCH_MASTER_IDL, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME
	from FOND_ID.FOND_ETL5_RI_CAT_PREMIUM where BATCHDATE=SUBSTRING( CAST(@batch AS VARCHAR),1,6)
	
	
	---------------------------- ETL5 LOGGING ----------------------------      
	
	DECLARE @V_TOTAL_ROWS integer = 0;
	DECLARE @V_PERIOD nvarchar(10);
	SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #IBNR_PRE_ALLOCATED_FINAL) ;
	SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))
	
	INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
	VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_ETL5_RI_CAT_PREMIUM'
	,@drivername,@V_TOTAL_ROWS,'MTD',@V_PERIOD);
	
	
	IF @@TRANCOUNT > 0
	COMMIT;
	
	
	---------------------------- DROP TEMPORARY TABLE ------------------------------  
	IF OBJECT_ID('tempdb..#IBNR_PRE_ALLOCATED_FINAL') IS NOT NULL
	BEGIN
		DROP TABLE #IBNR_PRE_ALLOCATED_FINAL
	END;

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;;

