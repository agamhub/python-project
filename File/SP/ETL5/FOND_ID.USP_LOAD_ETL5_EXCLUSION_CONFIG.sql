CREATE PROC [FOND_ID].[USP_LOAD_ETL5_EXCLUSION_CONFIG] @batch [NVARCHAR](100) AS
BEGIN 
	--DECLARE @batch [nvarchar](30);
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.FOND_ETL5_EXCLUSION_CONFIG';
	DECLARE @V_TABLE1 		NVARCHAR(2000);
	DECLARE @V_TABLE2 		NVARCHAR(2000);
	DECLARE @SCHEMA      NVARCHAR(MAX)
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'EXCL_CONFIG';
	DECLARE @V_DRIVER_PERIOD VARCHAR(10); 
	SET @V_DRIVER_PERIOD =SUBSTRING(CAST(@batch AS VARCHAR),1,6);
	DECLARE @V_TNAME_EB VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_'+@V_DRIVER_PERIOD;
	DECLARE @V_TNAME_EB1 VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_'+@V_DRIVER_PERIOD;
 

BEGIN TRY
		SET @SCHEMA ='FOND_ID.'
		SET @V_TABLE1 = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);
		SET @V_TABLE2 = 'FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);

		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		---------------------------- DROP TEMPORARY TABLE ------------------------------
		IF OBJECT_ID('tempdb..#EXCL_CONFIG') IS NOT NULL
		BEGIN
			DROP TABLE #EXCL_CONFIG
		END;

		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE EXCL_CONFIG : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 


		---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------
		SELECT CAST(ENTITY_ID AS VARCHAR(25)) AS ENTITY_ID
			, CAST(EXCL_FIELD1 AS VARCHAR(30)) AS EXCL_FIELD1
			, CAST(EXCL_FIELD1_COND AS VARCHAR(40)) AS EXCL_FIELD1_COND
			, CAST(EXCL_FIELD2 AS VARCHAR(30)) AS EXCL_FIELD2
			, CAST(EXCL_FIELD2_COND AS VARCHAR(40)) AS EXCL_FIELD2_COND
			, CAST(EXCL_FLAG AS VARCHAR(4)) AS EXCL_FLAG
			, CAST(DESCRIPTION AS VARCHAR(75)) AS DESCRIPTION
			,cast(RULE_ID as varchar(25)) as RULE_ID
			,cast([ACTION] as varchar(1)) as [ACTION]
			,cast(RECONCILIATION_IND as varchar(1)) as RECONCILIATION_IND
			,cast(USER_PROFILE as varchar(20)) as USER_PROFILE
			,cast(UPDATE_DATE as date) as UPDATE_DATE
			, CAST(@batch AS VARCHAR(40)) AS VALID_FROM
			, CAST('99991231' AS VARCHAR(40)) AS VALID_TO
			,0 BATCH_MASTER_ID,
			0 BATCH_RUN_ID,
			0 JOB_MASTER_ID,
			0 JOB_RUN_ID,
			SUBSTRING(CAST(@batch AS VARCHAR),1,6) BATCHDATE,
			GETDATE() ETL_PROCESS_DATE_TIME
			INTO #EXCL_CONFIG
			FROM
				STAG_ID.STAG_EXCLUSION_CONFIG_DQ_DDLREF_EXTTB
				;
	
		---------------------------- TO Handle rerun process ------------------------------
		BEGIN TRANSACTION;
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_ETL5_EXCLUSION_CONFIG] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 

		-- SELECT DISTINCT DRIVER_PERIOD FROM FOND_ID.FOND_ETL5_EXCLUSION_CONFIG
	
		DELETE FROM FOND_ID.FOND_ETL5_EXCLUSION_CONFIG;
		--WHERE ACCOUNTING_PERIOD =  YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)));

		 ---------------------------- TO Handle rerun process ------------------------------
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_EXCLUSION_CONFIG] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);


		INSERT INTO [FOND_ID].[FOND_ETL5_EXCLUSION_CONFIG]
		(ENTITY_ID, EXCL_FIELD1, EXCL_FIELD1_COND, EXCL_FIELD2, EXCL_FIELD2_COND, EXCL_FLG, EXCL_SUMMARY_DESC, RULE_ID, [ACTION], RECONCILIATION_IND, USER_PROFILE, UPDATE_DATE, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME)
		SELECT 
		ENTITY_ID, EXCL_FIELD1, EXCL_FIELD1_COND, EXCL_FIELD2, EXCL_FIELD2_COND, EXCL_FLAG, DESCRIPTION, RULE_ID, [ACTION], RECONCILIATION_IND, USER_PROFILE, UPDATE_DATE, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME
		FROM #EXCL_CONFIG
		;
	
		---------------------------- ETL5 LOGGING ----------------------------      
       	
		DECLARE @V_TOTAL_ROWS integer = 0;
		DECLARE @V_PERIOD nvarchar(10);
		SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #EXCL_CONFIG) ;
        SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))

		INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
		VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_ETL5_EXCLUSION_CONFIG'
		,@drivername,@V_TOTAL_ROWS,'MTD',@V_PERIOD);
		
		SELECT 'Total records : ' + @V_TOTAL_ROWS;

		IF @@TRANCOUNT > 0
        COMMIT;


		---------------------------- DROP TEMPORARY TABLE ------------------------------  
		IF OBJECT_ID('tempdb..#EXCL_CONFIG') IS NOT NULL
		BEGIN
			DROP TABLE #EXCL_CONFIG
		END;

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;
