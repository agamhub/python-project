CREATE PROC [FOND_ID].[USP_LOAD_ETL5_IFRS4_SUNGL_SPLITTING] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.FOND_ETL5_IFRS4_SUNGL';
	DECLARE @V_TABLE1 		NVARCHAR(2000);
	DECLARE @V_TABLE2 		NVARCHAR(2000);
	DECLARE @SCHEMA      NVARCHAR(MAX)
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'IFRS4_SUNGL';
	DECLARE @V_DRIVER_PERIOD VARCHAR(10); 
	SET @V_DRIVER_PERIOD =SUBSTRING(CAST(@batch AS VARCHAR),1,6);
	DECLARE @V_TNAME_EB VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_'+@V_DRIVER_PERIOD;
	DECLARE @V_TNAME_EB1 VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_'+@V_DRIVER_PERIOD;
	
	------START GET RUN ID DETAIL FROM ABC------
	DECLARE 
	@BATCH_MASTER_ID  VARCHAR(20) = 0,
	@BATCH_RUN_ID    VARCHAR(20) = 0,
	@JOB_MASTER_ID   VARCHAR(20) = 0,
	@JOB_RUN_ID     VARCHAR(20) = 0,
	@GMT_START_DTTM   VARCHAR(19) = CONVERT(DATETIME2, GETDATE());

	EXEC STAG_ID.USP_GetRunIdReturn
	@JobName     = @JOBNAMESTR,
	@BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	@BATCH_RUN_ID  = @BATCH_RUN_ID OUTPUT,
	@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT,
	@JOB_RUN_ID   = @JOB_RUN_ID OUTPUT,
	@GMT_START_DTTM = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC------
 

BEGIN TRY
		SET @SCHEMA ='FOND_ID.'
		SET @V_TABLE1 = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);
		SET @V_TABLE2 = 'FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);

		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		---------------------------- DROP TEMPORARY TABLE ------------------------------
		IF OBJECT_ID('tempdb..#IFRS4_SUNGL') IS NOT NULL
		BEGIN
			DROP TABLE #IFRS4_SUNGL
		END;
		
		DELETE FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES 
		WHERE (FNAME NOT IN ('FORCE BAL ETL4', 'GRGSGT ETL4', 'ETL5 MJE') OR FNAME IS NULL OR FNAME = '' )
		AND ENTITY_ID IN ('IAC','IAS')
		--FNAME IS NULL
		and PERIOD = SUBSTRING(CAST(@batch AS VARCHAR),1,4)+'/0'+SUBSTRING(CAST(@batch AS VARCHAR),5,2);

		INSERT INTO STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES
		SELECT
		   [ENTITY_ID]
		  ,[LEDGER]
		  ,[ACCNT_CODE]
		  ,[PERIOD]
		  ,[TRANS_DATE]
		  ,[AMOUNT]
		  ,[D_C]
		  ,[ALLOCATION]
		  ,[JRNAL_NO]
		  ,[JRNAL_LINE]
		  ,[JRNAL_TYPE]
		  ,[JRNAL_SRCE]
		  ,[TREFERENCE]
		  ,[DESCRIPTN]
		  ,[ENTRY_DATE]
		  ,[ENTRY_PRD]
		  ,[DUE_DATE]
		  ,[ALLOC_REF]
		  ,[ALLOC_DATE]
		  ,[ALLOC_PERIOD]
		  ,[ASSET_IND]
		  ,[ASSET_CODE]
		  ,[ASSET_SUB]
		  ,[CONV_CODE]
		  ,[CONV_RATE]
		  ,[OTHER_AMT]
		  ,[OTHER_DP]
		  ,[CLEARDOWN]
		  ,[REVERSAL]
		  ,[LOSS_GAIN]
		  ,[ROUGH_FLAG]
		  ,[IN_USE_FLAG]
		  ,CASE WHEN [ANAL_T0] = '0' THEN '0000000' ELSE ANAL_T0 END AS ANAL_T0
		  ,[ANAL_T1]
		  ,[ANAL_T2]
		  ,[ANAL_T3]
		  ,[ANAL_T4]
		  ,[ANAL_T5]
		  ,[ANAL_T6]
		  ,[ANAL_T7]
		  ,[ANAL_T8]
		  ,[ANAL_T9]
		  ,[POSTING_DATE]
		  ,[ALLOC_IN_PROGRESS]
		  ,[HOLD_REF]
		  ,[HOLD_OP_ID]
		  ,[LAST_CHANGE_USER_ID]
		  ,[LAST_CHANGE_DATE]
		  ,[ORIGINATOR_ID]
		  ,[UPLOAD_DATE]
		  ,[FNAME]
		  ,[FPROCDATE]
		  ,[SOURCE_TYPE]
		  ,[PROCESS_TYPE]
		  ,[PROCESS_TIME]
		  ,[JOB_PROCESS_ID]
		  ,[BATCH_MASTER_ID]
		  ,[BATCH_RUN_ID]
		  ,[JOB_MASTER_ID]
		  ,[JOB_RUN_ID]
		  ,[BATCHDATE]
		  ,[ETL_PROCESS_DATE_TIME]
		from STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES_ETL5 
		where [PERIOD] = SUBSTRING(CAST(@batch AS VARCHAR),1,4)+'/0'+SUBSTRING(CAST(@batch AS VARCHAR),5,2)
		AND ENTITY_ID IN ('IAC','IAS');


		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE IFRS4_SUNGL : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 


		---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------
--DECLARE @batch [nvarchar](30);
--SET @batch = '20220101';


		select A.* 
		INTO #IFRS4_SUNGL
		from (
			--select case when A.ENTITY_ID is null or A.ENTITY_ID='' then 'IAI' else CAST(A.ENTITY_ID AS VARCHAR(25)) end AS ENTITY_ID
			SELECT
			ENTITY_ID
			,CAST(A.LEDGER AS VARCHAR(40)) AS LEDGER
			,CAST(CASE WHEN A.SRC = 'IFRS4_SUNGL_9020000001' THEN '9020000001'
			           WHEN A.SRC = 'IFRS4_SUNGL_9020000002' THEN '9020000002'
					   --WHEN A.SRC = 'NE_FOREX_4710300001' THEN CONCAT(LEFT(A.ACCNT_CODE, 9), '1')
					   ELSE A.ACCNT_CODE
				  END AS VARCHAR(40)) AS ACCNT_CODE
			,CAST(A.PERIOD AS VARCHAR(40)) AS PERIOD			
--			,REPLACE(CAST(A.PERIOD AS VARCHAR(40)),'/','') AS PERIOD
			,convert(varchar(40),convert(datetime,A.TRANS_DATE,103),112) AS TRANS_DATE
			,CAST(CASE WHEN A.SRC IN('IFRS4_SUNGL_9020000001', 'NE_RI') THEN CAST(A.AMOUNT AS NUMERIC(28,6)) * -1
--			,CAST(CASE WHEN A.SRC IN('IFRS4_SUNGL_9020000001', 'NE_FOREX_4710300000', 'NE_RI') THEN CAST(A.AMOUNT AS NUMERIC(28,6)) * -1
			           ELSE A.AMOUNT
				  END AS NUMERIC(28,6)) AS AMOUNT
			,CAST(CASE WHEN A.SRC = 'IFRS4_SUNGL_9020000001' THEN 'C'
			           WHEN A.SRC = 'IFRS4_SUNGL_9020000002' THEN 'D'
					   WHEN A.SRC = 'NE_RI' THEN CASE WHEN A.D_C = 'C' THEN 'D' ELSE 'C' END					   
--					   WHEN A.SRC IN('NE_FOREX_4710300000', 'NE_RI') THEN CASE WHEN A.D_C = 'C' THEN 'D' ELSE 'C' END
					   ELSE A.D_C
				  END AS VARCHAR(40)) AS D_C
			,CAST(A.ALLOCATION AS VARCHAR(40)) AS ALLOCATION
			,CAST(A.JRNAL_NO AS BIGINT) AS JRNAL_NO
			,CAST(A.JRNAL_LINE AS BIGINT) AS JRNAL_LINE
			,CAST(A.JRNAL_TYPE AS VARCHAR(40)) AS JRNAL_TYPE
			,CAST(A.JRNAL_SRCE AS VARCHAR(40)) AS JRNAL_SRCE
			,case when A.TREFERENCE is null and trim(A.JRNAL_TYPE)='SYSTM' and trim(A.JRNAL_SRCE)='DPRCN' then 'SYSTM-DPRCN'
			    when A.TREFERENCE is null and trim(A.JRNAL_TYPE)='SYSTM' and trim(A.JRNAL_SRCE)='REVAL' then 'SYSTM-REVAL'
			    when A.TREFERENCE is null and trim(A.JRNAL_TYPE)='SYSTM' and trim(A.JRNAL_SRCE)='DSPSL' then 'SYSTM-DSPSL'
			    when A.SRC IN('IFRS4_SUNGL_9020000001', 'IFRS4_SUNGL_9020000002') THEN CONCAT('COI - ', TRIM(A.TREFERENCE))
			    else A.TREFERENCE end TREFERENCE
			,case when A.DESCRIPTN is null then 'Default Blank' else A.DESCRIPTN end DESCRIPTN
			,CAST(A.ENTRY_DATE AS VARCHAR(40)) AS ENTRY_DATE
			,CAST(A.ENTRY_PRD AS VARCHAR(40)) AS ENTRY_PRD
			,CAST(A.DUE_DATE AS VARCHAR(40)) AS DUE_DATE
			,CAST(A.ALLOC_REF AS VARCHAR(40)) AS ALLOC_REF
			,CAST(A.ALLOC_DATE AS VARCHAR(40)) AS ALLOC_DATE
			,CAST(A.ALLOC_PERIOD AS VARCHAR(40)) AS ALLOC_PERIOD
			,CAST(A.ASSET_IND AS VARCHAR(40)) AS ASSET_IND
			,CAST(A.ASSET_CODE AS VARCHAR(40)) AS ASSET_CODE
			,CAST(A.ASSET_SUB AS VARCHAR(40)) AS ASSET_SUB
			,CAST(A.CONV_CODE AS VARCHAR(40)) AS CONV_CODE
			,CAST(A.CONV_RATE AS VARCHAR(40)) AS CONV_RATE
			,CAST(A.OTHER_AMT AS NUMERIC(28,6)) AS OTHER_AMT
			,CAST(A.OTHER_DP AS VARCHAR(40)) AS OTHER_DP
			,CAST(A.CLEARDOWN AS VARCHAR(40)) AS CLEARDOWN
			,CAST(A.REVERSAL AS VARCHAR(40)) AS REVERSAL
			,CAST(A.LOSS_GAIN AS VARCHAR(40)) AS LOSS_GAIN
			,CAST(A.ROUGH_FLAG AS VARCHAR(40)) AS ROUGH_FLAG
			,CAST(B.IN_USE AS VARCHAR(40)) AS IN_USE_FLAG
			,case when A.ANAL_T7='P01' and A.ANAL_T0 like '%ITLP%' then 'ITLS'+right(A.ANAL_T0,len(A.ANAL_T0)-4)
			when A.ANAL_T7!='P01' and A.ANAL_T0 like '%ITLP%' then A.ANAL_T0
			when A.ANAL_T0 is null or A.ANAL_T0 = '0' then '0000000' else A.ANAL_T0 end ANAL_T0
			,CAST(A.ANAL_T1 AS VARCHAR(15)) AS ANAL_T1
			,CAST(A.ANAL_T2 AS VARCHAR(15)) AS ANAL_T2
			,CAST(A.ANAL_T3 AS VARCHAR(15)) AS ANAL_T3
			,CAST(A.ANAL_T4 AS VARCHAR(15)) AS ANAL_T4
			,CAST(A.ANAL_T5 AS VARCHAR(15)) AS ANAL_T5
			,CAST(A.ANAL_T6 AS VARCHAR(15)) AS ANAL_T6
			,CAST(A.ANAL_T7 AS VARCHAR(15)) AS ANAL_T7
			,CAST(A.ANAL_T8 AS VARCHAR(15)) AS ANAL_T8
			,CAST(A.ANAL_T9 AS VARCHAR(15)) AS ANAL_T9
			,CAST(A.POSTING_DATE AS VARCHAR(40)) AS POSTING_DATE
			,CAST(A.ALLOC_IN_PROGRESS AS VARCHAR(40)) AS ALLOC_IN_PROGRESS
			,CAST(A.HOLD_REF AS VARCHAR(40)) AS HOLD_REF
			,CAST(A.HOLD_OP_ID AS VARCHAR(40)) AS HOLD_OP_ID
			,CAST(A.LAST_CHANGE_USER_ID AS VARCHAR(40)) AS LAST_CHANGE_USER_ID
			,CAST(A.LAST_CHANGE_DATE AS VARCHAR(40)) AS LAST_CHANGE_DATE
			,CAST(A.ORIGINATOR_ID AS VARCHAR(40)) AS ORIGINATOR_ID
			,CAST(@batch AS VARCHAR(40)) AS VALID_FROM
			,CAST('99991231' AS VARCHAR(40)) AS VALID_TO 
			from (
	
			SELECT DISTINCT *, 'IFRS4_SUNGL' AS SRC FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE replace(PERIOD,'/0','') =SUBSTRING(CAST(@batch AS VARCHAR),1,6 ) AND ENTITY_ID IN ('IAC','IAS')
			
			UNION
			
			SELECT DISTINCT *, 'IFRS4_SUNGL_NEW_ENTRIES' AS SRC FROM [STAG_ID].[STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES] WHERE replace(PERIOD,'/0','') =SUBSTRING(CAST(@batch AS VARCHAR),1,6 ) AND ENTITY_ID IN ('IAC','IAS')
			
			UNION
			
			--NEW ENTRIES 9020000001
			SELECT DISTINCT *, 'IFRS4_SUNGL_9020000001' AS SRC FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE ACCNT_CODE = '4181010000' AND JRNAL_TYPE = 'UTR' AND replace(PERIOD,'/0','') =SUBSTRING(CAST(@batch AS VARCHAR),1,6 ) AND ENTITY_ID IN ('IAC','IAS')
			
			UNION
			
			--NEW ENTRIES 9020000002
			SELECT DISTINCT *, 'IFRS4_SUNGL_9020000002' AS SRC FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE ACCNT_CODE = '4181010000' AND JRNAL_TYPE = 'UTR' AND replace(PERIOD,'/0','') =SUBSTRING(CAST(@batch AS VARCHAR),1,6 ) AND ENTITY_ID IN ('IAC','IAS')

			UNION

/*			--PARTIAL BIN NEW ENTRIES FOREX 4710300000
			SELECT DISTINCT
              SUNGL.*,
	          'NE_FOREX_4710300000' AS SRC
            FROM
              (
          	    SELECT * FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
          	    UNION ALL
          	    SELECT * FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
          	  ) AS SUNGL
            JOIN
              (
                SELECT DISTINCT
				  --CASE WHEN SUNGL.ACCNT_CODE = '3141490000' THEN '2075' ELSE SUNGL.JRNAL_NO END AS JRNAL_NO
				  SUNGL.JRNAL_NO
                FROM
	              (
		            SELECT ACCNT_CODE, JRNAL_SRCE, JRNAL_NO
		            FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL
		            WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
		            
		            UNION ALL
		          
		            SELECT ACCNT_CODE, JRNAL_SRCE, JRNAL_NO
		            FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES
		            WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
		          ) AS SUNGL
                JOIN FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG AS PARTIAL_BIN
                ON SUNGL.ACCNT_CODE = PARTIAL_BIN.EXCL_FIELD1_COND
                AND SUNGL.JRNAL_SRCE = PARTIAL_BIN.EXCL_FIELD2_COND
                WHERE PARTIAL_BIN.EXCL_FIELD1 = 'ACCT_CD'
                AND PARTIAL_BIN.EXCL_FIELD2 = 'JRNAL_SRC'
                AND PARTIAL_BIN.EXCL_FIELD2_COND = 'REVAL'
                AND PARTIAL_BIN.BIN_EXCL_SUMMARY_DESC = 'FOREX'
	            AND PARTIAL_BIN.EXCL_FIELD1_COND NOT IN('1233010000', '1233020000')
              ) AS GL_FOREX_PARTIAL_BIN
            ON SUNGL.JRNAL_NO = GL_FOREX_PARTIAL_BIN.JRNAL_NO
            WHERE SUNGL.ACCNT_CODE = '4710300000'

			UNION

			--PARTIAL BIN NEW ENTRIES FOREX 4710300001
			SELECT DISTINCT
              SUNGL.*,
	          'NE_FOREX_4710300001' AS SRC
            FROM
              (
          	    SELECT * FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
          	    UNION ALL
          	    SELECT * FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
          	  ) AS SUNGL
            JOIN
              (
                SELECT DISTINCT
				  --CASE WHEN SUNGL.ACCNT_CODE = '3141490000' THEN '2075' ELSE SUNGL.JRNAL_NO END AS JRNAL_NO
				  SUNGL.JRNAL_NO
                FROM
	              (
		            SELECT ACCNT_CODE, JRNAL_SRCE, JRNAL_NO
		            FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL
		            WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
		            
		            UNION ALL
		          
		            SELECT ACCNT_CODE, JRNAL_SRCE, JRNAL_NO
		            FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL_NEW_ENTRIES
		            WHERE REPLACE(PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
		          ) AS SUNGL
                JOIN FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG AS PARTIAL_BIN
                ON SUNGL.ACCNT_CODE = PARTIAL_BIN.EXCL_FIELD1_COND
                AND SUNGL.JRNAL_SRCE = PARTIAL_BIN.EXCL_FIELD2_COND
                WHERE PARTIAL_BIN.EXCL_FIELD1 = 'ACCT_CD'
                AND PARTIAL_BIN.EXCL_FIELD2 = 'JRNAL_SRC'
                AND PARTIAL_BIN.EXCL_FIELD2_COND = 'REVAL'
                AND PARTIAL_BIN.BIN_EXCL_SUMMARY_DESC = 'FOREX'
	            AND PARTIAL_BIN.EXCL_FIELD1_COND NOT IN('1233010000', '1233020000')
              ) AS GL_FOREX_PARTIAL_BIN
            ON SUNGL.JRNAL_NO = GL_FOREX_PARTIAL_BIN.JRNAL_NO
            WHERE SUNGL.ACCNT_CODE = '4710300000'

			UNION
*/
			--PARTIAL BIN NEW ENTRIES RI
			SELECT DISTINCT
              SUNGL.*,
	          'NE_RI' AS SRC
            FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL AS SUNGL
            JOIN
              (
                SELECT SUNGL.JRNAL_NO
                FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL AS SUNGL
                JOIN FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG AS PARTIAL_BIN
                ON SUNGL.ACCNT_CODE = PARTIAL_BIN.EXCL_FIELD1_COND
                WHERE PARTIAL_BIN.EXCL_FIELD1 = 'ACCT_CD'
                AND PARTIAL_BIN.EXCL_FIELD2 = 'TXN_DESC'
                AND PARTIAL_BIN.EXCL_FIELD2_COND = 'NET'
                AND PARTIAL_BIN.BIN_EXCL_SUMMARY_DESC = 'RI NETTING'
	            AND SUNGL.DESCRIPTN like 'NETOFF%'
	            AND REPLACE(SUNGL.PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6)
				AND SUNGL.ENTITY_ID IN ('IAC','IAS')
                GROUP BY SUNGL.JRNAL_NO
              ) AS GL_RI_PARTIAL_BIN
            ON SUNGL.JRNAL_NO = GL_RI_PARTIAL_BIN.JRNAL_NO
            JOIN (SELECT JRNAL_NO, AMOUNT FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE ACCNT_CODE = '3392090080' AND ENTITY_ID IN ('IAC','IAS')) AS SUNGL_3392090080
            ON SUNGL_3392090080.JRNAL_NO = GL_RI_PARTIAL_BIN.JRNAL_NO
            AND ABS(SUNGL.AMOUNT) = ABS(SUNGL_3392090080.AMOUNT)
            WHERE ABS(SUNGL.AMOUNT) IN(SELECT ABS(AMOUNT) FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL WHERE JRNAL_TYPE = 'REVS2' AND DESCRIPTN like 'NETOFF%' AND REPLACE    (PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6) AND ENTITY_ID IN ('IAC','IAS') GROUP BY ABS(AMOUNT) HAVING COUNT(*) > 1)
            AND SUNGL.JRNAL_TYPE = 'REVS2'
            AND SUNGL.DESCRIPTN like 'NETOFF%'
            AND REPLACE(SUNGL.PERIOD,'/0','') = SUBSTRING(CAST(@batch AS VARCHAR),1,6)
			AND SUNGL.ENTITY_ID IN ('IAC','IAS')

--			IN (
--			SELECT DISTINCT PERIOD FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL 
--			WHERE FNAME  = (SELECT DISTINCT FNAME FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL
--			WHERE CAST(UPLOAD_DATE AS VARCHAR)+CAST(FNAME AS VARCHAR) = 
--			(SELECT DISTINCT CAST(UPLOAD_DATE AS VARCHAR)+CAST(FNAME AS VARCHAR) 
--			FROM STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL
--			WHERE SUBSTRING(CAST(UPLOAD_DATE AS VARCHAR),1,4)+SUBSTRING(CAST(UPLOAD_DATE AS VARCHAR),6,2) = SUBSTRING(CAST(@batch AS VARCHAR),1,6 )
--			)
--			))
			)A 
			left join (SELECT * FROM FOND_ID.FOND_ETL5_SUNGL_COA_IN_USE) B on A.ACCNT_CODE =B.ACCOUNT_CODE
			) A
			where A.TREFERENCE is not null
			;
	
		---------------------------- TO Handle rerun process ------------------------------
		BEGIN TRANSACTION;
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_ETL5_IFRS4_SUNGL] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 
	
		DELETE FROM FOND_ID.FOND_ETL5_IFRS4_SUNGL 
		WHERE PERIOD =  SUBSTRING(CAST(@batch AS VARCHAR),1,4)+'/0'+SUBSTRING(CAST(@batch AS VARCHAR),5,2)
		AND ENTITY_ID <> 'IAI';

		 ---------------------------- TO Handle rerun process ------------------------------
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_IFRS4_SUNGL] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		
--DECLARE @batch [nvarchar](30);
--SET @batch = '20210101';

		INSERT INTO [FOND_ID].[FOND_ETL5_IFRS4_SUNGL]
		( 
		ENTITY_ID,
		LEDGER,
		ACCNT_CODE,
		PERIOD,
		TRANS_DATE,
		AMOUNT,
		D_C,
		ALLOCATION,
		JRNAL_NO,
		JRNAL_LINE,
		JRNAL_TYPE,
		JRNAL_SRCE,
		TREFERENCE,
		DESCRIPTN,
		ENTRY_DATE,
		ENTRY_PRD,
		DUE_DATE,
		ALLOC_REF,
		ALLOC_DATE,
		ALLOC_PERIOD,
		ASSET_IND,
		ASSET_CODE,
		ASSET_SUB,
		CONV_CODE,
		CONV_RATE,
		OTHER_AMT,
		OTHER_DP,
		CLEARDOWN,
		REVERSAL,
		LOSS_GAIN,
		ROUGH_FLAG,
		IN_USE_FLAG,
		ANAL_T0,
		ANAL_T1,
		ANAL_T2,
		ANAL_T3,
		ANAL_T4,
		ANAL_T5,
		ANAL_T6,
		ANAL_T7,
		ANAL_T8,
		ANAL_T9,
		POSTING_DATE,
		ALLOC_IN_PROGRESS,
		HOLD_REF,
		HOLD_OP_ID,
		LAST_CHANGE_USER_ID,
		LAST_CHANGE_DATE,
		ORIGINATOR_ID,
		VALID_FROM,
		VALID_TO,
		BATCH_MASTER_ID,
		BATCH_RUN_ID,
		JOB_MASTER_ID,
		JOB_RUN_ID,
		BATCHDATE,
		ETL_PROCESS_DATE_TIME
		)
		SELECT trim(cast(ENTITY_ID AS NVARCHAR(5))) ENTITY_ID
				,LEDGER
				,ACCNT_CODE
				,PERIOD
				,TRANS_DATE
				,AMOUNT
				,D_C
				,ALLOCATION
				,JRNAL_NO
				,JRNAL_LINE
				,JRNAL_TYPE
				,JRNAL_SRCE
				,CAST(TREFERENCE AS VARCHAR(40)) AS TREFERENCE
				,trim(cast(DESCRIPTN as nvarchar(100))) AS DESCRIPTN
				,ENTRY_DATE
				,ENTRY_PRD
				,DUE_DATE
				,ALLOC_REF
				,ALLOC_DATE
				,ALLOC_PERIOD
				,ASSET_IND
				,ASSET_CODE
				,ASSET_SUB
				,CONV_CODE
				,CONV_RATE
				,OTHER_AMT
				,OTHER_DP
				,CLEARDOWN
				,REVERSAL
				,LOSS_GAIN
				,ROUGH_FLAG
				,IN_USE_FLAG
				,ANAL_T0
				,ANAL_T1
				,ANAL_T2
				,ANAL_T3
				,ANAL_T4
				,ANAL_T5
				,ANAL_T6
				,ANAL_T7
				,ANAL_T8
				,ANAL_T9
				,POSTING_DATE
				,ALLOC_IN_PROGRESS
				,HOLD_REF
				,HOLD_OP_ID
				,LAST_CHANGE_USER_ID
				,LAST_CHANGE_DATE
				,ORIGINATOR_ID
				,VALID_FROM
				,VALID_TO
				,@BATCH_MASTER_ID AS BATCH_MASTER_ID
				,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,SUBSTRING( CAST(@batch AS VARCHAR),1,6) BATCHDATE
				,GETDATE() ETL_PROCESS_DATE_TIME 
		-- SELECT *
		FROM #IFRS4_SUNGL
		;
	
		---------------------------- ETL5 LOGGING ----------------------------      
       	
		DECLARE @V_TOTAL_ROWS integer = 0;
		DECLARE @V_PERIOD nvarchar(10);
		SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #IFRS4_SUNGL) ;
        SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))

		INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
		VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_ETL5_IFRS4_SUNGL'
		,@drivername,@V_TOTAL_ROWS,'MTD',@V_PERIOD);
		

		IF @@TRANCOUNT > 0
        COMMIT;


		---------------------------- DROP TEMPORARY TABLE ------------------------------  
		IF OBJECT_ID('tempdb..#IFRS4_SUNGL') IS NOT NULL
		BEGIN
			DROP TABLE #IFRS4_SUNGL
		END;

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;

