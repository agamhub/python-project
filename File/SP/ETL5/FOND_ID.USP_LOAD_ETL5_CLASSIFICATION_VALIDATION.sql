CREATE PROC [FOND_ID].[USP_LOAD_ETL5_CLASSIFICATION_VALIDATION] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	--DECLARE @batch [nvarchar](30)='202306';
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.USP_LOAD_ETL5_CLASSIFICATION_VALIDATION';
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	--DECLARE @drivername NTVARCHAR(15);
	--SET @drivername = 'IAI_CAT_PORT_CONFIG';
	--declare @year varchar(12)=substring(@batch,0,5);
	--declare @diff numeric(28,6);
 --	declare @firstrow varchar(200);
	
	------ START ABC ------
	DECLARE
    @BATCH_MASTER_ID    VARCHAR(20) = 0,
    @BATCH_RUN_ID       VARCHAR(20) = 0,
    @JOB_MASTER_ID      VARCHAR(20) = 0,
    @JOB_RUN_ID         VARCHAR(20) = 0,
    @GMT_START_DTTM     VARCHAR(20) = GETDATE();
	
	EXEC STAG_ID.USP_GetRunIdReturn
	  @JobName        = @JOBNAMESTR,
	  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
	  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
	  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
	  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC--------- 	


BEGIN TRY

----------------------------------------------------------
-- STEP 1 START
----------------------------------------------------------
SET @V_START_DATE	= convert(date, cast(concat(@batch,'01') as varchar)); -- valuation extract date
PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
SET @V_START 	= convert(datetime,getDATE());

SET @V_DESCRIPTION 	= 'Step 1 - Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
PRINT	@V_DESCRIPTION;
SET @V_SEQNO		= @V_SEQNO + 1;

INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	

--*** DELETE EXISTING DATA WITH SAME PERIOD ***--
 DELETE FROM FOND_ID.FOND_ETL5_IFRS4_SUNGL_CLASS WHERE CAST(BATCHDATE AS INT)= cast(@batch as int);
 DELETE FROM FOND_ID.FOND_ETL5_CLASSIFICATION_PER_EXPENSE WHERE CAST(BATCHDATE AS INT)= cast(@batch as int);
 DELETE FROM FOND_ID.FOND_ETL5_CLASSIFICATION_PER_CASHFLOW WHERE CAST(BATCHDATE AS INT)= cast(@batch as int);
--------------------------------------------------------------

WITH ETL5LBU_YTD AS(
SELECT 
	ENTITY_ID,'ETL5' AS [SOURCE],
	ACCT_CD ,
	EXTRACT_PERIOD,
	EOMONTH(CAST((REPLACE (EXTRACT_PERIOD,'/0','')+'01')AS DATE)) TXN_DT,
	AMT_LOCAL_CCY,
	CR_DR_FLG,
	JRNAL_NO,
	JRNAL_LINE,
	JRNAL_TYPE,
	JRNAL_SRC,
	TXN_REF,
	TXN_DESC,
	T0,
	T1,
	T2,
	T3,
	T4,
	T5,
	T6,
	T7,
	T8,
	CAST('SUNGL4' AS VARCHAR(10)) AS SRC_SYS	
FROM FOND_ID.FOND_ETL5_SUNGL_EXTRACT 
WHERE cast(BATCHDATE+'01' as date) <= cast(@batch+'01' as date) and cast(BATCHDATE+'01' as date) > dateadd(month,-1,cast(left(@batch,4)+'0131' as date))
)
--SELECT count(1) FROM ETL5LBU_YTD
,ETL4O_YTD AS(
select 
	'IAI' ENTITY_ID,'ETL4' AS [SOURCE],
	SUN_CD,
	ACCT_PERIOD,
	EOMONTH(CAST(BATCHDATE+'01' AS DATE)) TXN_DT, 
	sum(AMT_RPT_CCY) AMT_RPT_CCY,
	CR_DR_FLG,
	BATCHDATE,
	SRC_SYSTM,
	PAS_NAME_ORI,
	T0

from (
	select  T0,null TXN_DT,SUN_CD,left(left(@batch,6),4)+'0'+right(left(@batch,6),2) ACCT_PERIOD,sum(AMT_RPT_CCY) AMT_RPT_CCY,null CR_DR_FLG,left(@batch,6) BATCHDATE,
	case when PAS_NAME='SUNGL4' then 'SUNGL4' else '*' end  SRC_SYSTM,PAS_NAME PAS_NAME_ORI 
	from [FOND_ID].[FOND_ETL4_HIST_PAS_NON_POL_NEW]
	WHERE cast(ACCT_PERIOD as int)>=cast(left(@batch,4)+'001' as int)
	and cast(ACCT_PERIOD as int)<=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int)
	group by SUN_CD,ACCT_PERIOD,PAS_NAME,T0 
	) p group by T0,BATCHDATE,SUN_CD,CR_DR_FLG,ACCT_PERIOD,SRC_SYSTM,PAS_NAME_ORI
)

,ELT5RHO_YTD AS(
select 
	A.*
from FCORE_ID.FOND_IFRS17_SUNGL_CLASSIFIED A
WHERE cast(EXTRACT_PERIOD_YTD as int)=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int)
)

,MIX_COA_ETL5 AS(
SELECT ACCT_CD FROM ETL5LBU_YTD GROUP BY ACCT_CD
UNION
SELECT ACCT_CD FROM ELT5RHO_YTD WHERE SRC_SYSTEM = 'SUNGL4' GROUP BY ACCT_CD 
)
,ETL5LBU_RHO AS(
SELECT 
	A.ACCT_CD ACCT_CD, 
	B.AMT_LOCAL_CCY AS [ETL5 YTD AMT_RPT_CCY],
	C.AMT_LOCAL_CCY AS [ETL5 RHO AMT_LOCAL_CCY],
	COALESCE(B.AMT_LOCAL_CCY,0) - COALESCE(C.AMT_LOCAL_CCY,0) VARIENCE
FROM MIX_COA_ETL5 A
LEFT JOIN (SELECT ACCT_CD, SUM(AMT_LOCAL_CCY) AMT_LOCAL_CCY FROM ETL5LBU_YTD GROUP BY ACCT_CD) B ON A.ACCT_CD = B.ACCT_CD
LEFT JOIN (SELECT ACCT_CD, SUM(AMT_LOCAL_CCY) AMT_LOCAL_CCY FROM ELT5RHO_YTD WHERE SRC_SYSTEM = 'SUNGL4' GROUP BY ACCT_CD) C ON A.ACCT_CD = C.ACCT_CD
) 
,MIX_COA_ETL4_5RHO AS(
SELECT SUN_CD AS ACCT_CD FROM ETL4O_YTD GROUP BY SUN_CD
UNION
SELECT ACCT_CD FROM ELT5RHO_YTD WHERE SRC_SYSTEM <> 'SUNGL4' GROUP BY ACCT_CD 
)
,ETL4O_RHO AS (
SELECT 
	A.ACCT_CD ACCT_CD, 
	B.AMT_LOCAL_CCY AS [ETL4 O AMT_RPT_CCY],
	C.AMT_LOCAL_CCY AS [ETL5 RHO AMT_LOCAL_CCY],
	COALESCE(B.AMT_LOCAL_CCY,0) - COALESCE(C.AMT_LOCAL_CCY,0) VARIENCE
FROM MIX_COA_ETL4_5RHO A
LEFT JOIN (SELECT SUN_CD AS ACCT_CD, SUM(AMT_RPT_CCY) AMT_LOCAL_CCY FROM ETL4O_YTD GROUP BY SUN_CD) B ON A.ACCT_CD = B.ACCT_CD
LEFT JOIN (SELECT ACCT_CD, SUM(AMT_LOCAL_CCY) AMT_LOCAL_CCY FROM ELT5RHO_YTD WHERE SRC_SYSTEM <> 'SUNGL4' GROUP BY ACCT_CD) C ON A.ACCT_CD = C.ACCT_CD
)
,SRC_CONSOL AS(
SELECT ENTITY_ID, SRC_SYS AS PAS_NAME_ORI,[SOURCE], ACCT_CD AS SUN_CD, EXTRACT_PERIOD AS ACCT_PERIOD, TXN_DT, AMT_LOCAL_CCY, CR_DR_FLG, T0  FROM ETL5LBU_YTD
UNION ALL
SELECT ENTITY_ID, PAS_NAME_ORI,[SOURCE], SUN_CD, ACCT_PERIOD, TXN_DT, AMT_RPT_CCY AS AMT_LOCAL_CCY,CR_DR_FLG, T0 FROM ETL4O_YTD
)

,SRC_CONSOL_MAPPED AS(
SELECT A.* ,B.SUN_CD SUN_CD_FCT
,B.PAS_NAME
,B.EXPENSE_IND
,B.CONTROL_ACCT_FLG
,B.NEW_COA
,B.CASHFLOW_TYPE_L1
,B.CASHFLOW_TYPE_L2
--,B.CLFN_FLG
--,B.T0 AS T0_FCT
,B.PRE_COV_PCT
,B.NON_ATTR_PCT
,B.ACQUISTION_PCT
,B.MAINTAIN_PCT
,B.NON_PREM_MAINTAIN_PCT
,B.PROFIT_MARGIN
,B.RI_FLG
,B.INTERCOMP_IND
FROM SRC_CONSOL A
LEFT JOIN FOND_ID.FOND_ETL5_FCT_CREATION_VALIDATION_DETAILS B --[FOND_ID].[FOND_SUNGL_FINANCE_CONFIG] B
ON A.SUN_CD=B.SUN_CD AND B.BATCHDATE=@batch
)
--select * from SRC_CONSOL_MAPPED

,EXP_CLASS AS(
SELECT A.* 
,PRE_COV_PCT*AMT_LOCAL_CCY/100 AS EXP_PRE_COV
,NON_ATTR_PCT*AMT_LOCAL_CCY/100 AS NON_ATTR
,ACQUISTION_PCT*AMT_LOCAL_CCY/100 AS EXP_ACQ
,MAINTAIN_PCT*AMT_LOCAL_CCY/100 AS EXP_MAINT
,NON_PREM_MAINTAIN_PCT*AMT_LOCAL_CCY/100 AS EXP_NP_MAINT
FROM SRC_CONSOL_MAPPED A
WHERE EXPENSE_IND='E'
)
,EXP_WTD_AVG AS(
SELECT EXPENSE_COMPONENT,CASE WHEN COALESCE(AVG(WEIGHTED_AVG),0) > 1 THEN COALESCE(AVG(WEIGHTED_AVG),0)/100 ELSE COALESCE(AVG(WEIGHTED_AVG),0) END AS PCT
,EXTRACT_PERIOD FROM FCORE_ID.FOND_PAS_EXP_WTD_AVG
WHERE EXTRACT_PERIOD=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int) AND EXPENSE_COMPONENT LIKE 'EXP%'
GROUP BY EXPENSE_COMPONENT,EXTRACT_PERIOD
)
,EXP_COMP_AGGR_NON_INTCOMP AS (
SELECT EXPENSE_COMP_IND, CASE WHEN COALESCE(AMT_WGHTD_AVG,0) > 1 THEN COALESCE(AMT_WGHTD_AVG,0)/100 else COALESCE(AMT_WGHTD_AVG,0) END AS PCT
,EXTRACT_PERIOD_YTD FROM FCORE_ID.FOND_IFRS17_SUNGL_EXP_COMP_AGGR_NON_INTCOMP
WHERE EXTRACT_PERIOD_YTD=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int) AND EXPENSE_COMP_IND LIKE 'EXP%'
)
,EXP_COMP_AGGR AS (
SELECT EXPENSE_COMP_IND,CASE WHEN COALESCE(AMT_WGHTD_AVG,0) > 1 THEN COALESCE(AMT_WGHTD_AVG,0)/100 else COALESCE(AMT_WGHTD_AVG,0) END AS PCT
,EXTRACT_PERIOD_YTD FROM FCORE_ID.FOND_IFRS17_SUNGL_EXP_COMP_AGGR
WHERE EXTRACT_PERIOD_YTD=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int) AND EXPENSE_COMP_IND LIKE 'EXP%'
)
,PAY_CLASS AS(
SELECT A.ENTITY_ID,
A.PAS_NAME_ORI,
A.[SOURCE],
A.SUN_CD,
REPLACE(A.ACCT_PERIOD,'/','') ACCT_PERIOD,
A.TXN_DT,
A.AMT_LOCAL_CCY,
A.CR_DR_FLG,
A.T0,
A.SUN_CD_FCT,
A.PAS_NAME,
A.EXPENSE_IND,
A.CONTROL_ACCT_FLG,
A.NEW_COA,
A.CASHFLOW_TYPE_L1,
A.CASHFLOW_TYPE_L2,
--A.CLFN_FLG,
--A.T0_FCT,
A.PROFIT_MARGIN,
A.RI_FLG,
A.INTERCOMP_IND
,CASE 
	WHEN A.PAS_NAME_ORI NOT IN('SUNGL4') AND A.INTERCOMP_IND = 'N' THEN (SELECT ISNULL(PCT,0) FROM EXP_WTD_AVG WHERE EXPENSE_COMPONENT='EXP_PRE_COV')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('A','S','P') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_PRE_COV')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('N') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_PRE_COV')
	ELSE NULL
 END AS PRE_COV_PCT
,CASE 
	WHEN A.PAS_NAME_ORI NOT IN('SUNGL4') AND A.INTERCOMP_IND = 'N' THEN (SELECT ISNULL(PCT,0) FROM EXP_WTD_AVG WHERE EXPENSE_COMPONENT='EXP_NON_ATTR')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('A','S','P') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR WHERE EXPENSE_COMP_IND='EXP_NON_ATTR')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('N') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_NON_ATTR')
 ELSE NULL
 END AS NON_ATTR_PCT 
,CASE 
	WHEN A.PAS_NAME_ORI NOT IN('SUNGL4') AND A.INTERCOMP_IND = 'N' THEN (SELECT ISNULL(PCT,0) FROM EXP_WTD_AVG WHERE EXPENSE_COMPONENT='EXP_ACQ')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('A','S','P') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR WHERE EXPENSE_COMP_IND='EXP_ACQ')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('N') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_ACQ')
 ELSE NULL
 END AS ACQUISTION_PCT
,CASE 
	WHEN A.PAS_NAME_ORI NOT IN('SUNGL4') AND A.INTERCOMP_IND = 'N' THEN (SELECT ISNULL(PCT,0) FROM EXP_WTD_AVG WHERE EXPENSE_COMPONENT='EXP_MAINT')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('A','S','P') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR WHERE EXPENSE_COMP_IND='EXP_MAINT')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('N') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_MAINT')
 ELSE NULL
 END AS MAINTAIN_PCT
,CASE 
	WHEN A.PAS_NAME_ORI NOT IN('SUNGL4') AND A.INTERCOMP_IND = 'N' THEN (SELECT ISNULL(PCT,0) FROM EXP_WTD_AVG WHERE EXPENSE_COMPONENT='EXP_NP_MAINT')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('A','S','P') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR WHERE EXPENSE_COMP_IND='EXP_NP_MAINT')
	WHEN A.PAS_NAME_ORI IN('SUNGL4') AND A.INTERCOMP_IND in('N') THEN (SELECT ISNULL(PCT,0) FROM EXP_COMP_AGGR_NON_INTCOMP WHERE EXPENSE_COMP_IND='EXP_NP_MAINT')
 ELSE NULL
 END AS NON_PREM_MAINTAIN_PCT
from (SELECT * FROM SRC_CONSOL_MAPPED WHERE EXPENSE_IND='P') A
LEFT JOIN EXP_WTD_AVG B ON CAST(REPLACE(A.ACCT_PERIOD,'/','') AS INT)=CAST(B.EXTRACT_PERIOD AS INT) AND B.EXPENSE_COMPONENT=A.EXPENSE_IND
LEFT JOIN EXP_COMP_AGGR_NON_INTCOMP C ON CAST(REPLACE(A.ACCT_PERIOD,'/','') AS INT)=CAST(C.EXTRACT_PERIOD_YTD AS INT)  AND C.EXPENSE_COMP_IND=A.EXPENSE_IND
LEFT JOIN EXP_COMP_AGGR D ON CAST(REPLACE(A.ACCT_PERIOD,'/','') AS INT)=CAST(D.EXTRACT_PERIOD_YTD AS INT)  AND D.EXPENSE_COMP_IND=A.EXPENSE_IND
)
,PAY_CLASS_2 AS(
SELECT * 
,ISNULL(PRE_COV_PCT,0)*AMT_LOCAL_CCY AS PAY_PRE_COV
,ISNULL(NON_ATTR_PCT,0)*AMT_LOCAL_CCY AS NON_ATTR
,ISNULL(ACQUISTION_PCT,0)*AMT_LOCAL_CCY AS PAY_ACQ
,ISNULL(MAINTAIN_PCT,0)*AMT_LOCAL_CCY AS PAY_MAINT
,ISNULL(NON_PREM_MAINTAIN_PCT,0)*AMT_LOCAL_CCY AS PAY_NP_MAINT
FROM PAY_CLASS
)
,NON_CLASS AS(
SELECT A.ENTITY_ID
,A.PAS_NAME
,A.[SOURCE]
,A.SUN_CD
,REPLACE(A.ACCT_PERIOD,'/','') ACCT_PERIOD
,A.TXN_DT
,A.T0
,A.EXPENSE_IND
,A.CONTROL_ACCT_FLG
,A.NEW_COA
,A.CASHFLOW_TYPE_L1
,A.CASHFLOW_TYPE_L2
,A.PROFIT_MARGIN
,A.RI_FLG
,A.INTERCOMP_IND 
,A.AMT_LOCAL_CCY
,CASE WHEN CONTROL_ACCT_FLG='Y' THEN 'NON_EXP' ELSE 'N/A' END AS EXP_COMP
FROM SRC_CONSOL_MAPPED A WHERE EXPENSE_IND IS NULL
)
,EXP_TRANSPOSED AS(
SELECT * FROM(
SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,EXP_PRE_COV AS AMT_LOCAL_CCY
,'EXP_PRE_COV' AS EXP_COMP
FROM EXP_CLASS
WHERE EXP_PRE_COV<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,NON_ATTR AS AMT_LOCAL_CCY
,'NON_ATTR' AS EXP_COMP
FROM EXP_CLASS
WHERE NON_ATTR<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,EXP_ACQ AS AMT_LOCAL_CCY
,'EXP_ACQ' AS EXP_COMP
FROM EXP_CLASS
WHERE EXP_ACQ<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,EXP_MAINT AS AMT_LOCAL_CCY
,'EXP_MAINT' AS EXP_COMP
FROM EXP_CLASS
WHERE EXP_MAINT<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,EXP_NP_MAINT AS AMT_LOCAL_CCY
,'EXP_NP_MAINT' AS EXP_COMP
FROM EXP_CLASS
WHERE EXP_NP_MAINT<>0 
)A
)
,PAY_TRANSPOSED AS(
SELECT * FROM(
SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,PAY_PRE_COV AS AMT_LOCAL_CCY
,'PAY_PRE_COV' AS EXP_COMP
FROM PAY_CLASS_2
WHERE PAY_PRE_COV<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,NON_ATTR AS AMT_LOCAL_CCY
,'NON_ATTR' AS EXP_COMP
FROM PAY_CLASS_2
WHERE NON_ATTR<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,PAY_ACQ AS AMT_LOCAL_CCY
,'PAY_ACQ' AS EXP_COMP
FROM PAY_CLASS_2
WHERE PAY_ACQ<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,PAY_MAINT AS AMT_LOCAL_CCY
,'PAY_MAINT' AS EXP_COMP
FROM PAY_CLASS_2
WHERE PAY_MAINT<>0 

UNION ALL

SELECT ENTITY_ID
,PAS_NAME
,[SOURCE]
,SUN_CD
,REPLACE(ACCT_PERIOD,'/','') ACCT_PERIOD
,TXN_DT
,T0
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA
,CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,PAY_NP_MAINT AS AMT_LOCAL_CCY
,'PAY_NP_MAINT' AS EXP_COMP
FROM PAY_CLASS_2
WHERE PAY_NP_MAINT<>0 
)A
)
--select * from PAY_TRANSPOSED
,ETL5_CONFIG AS(
SELECT *,concat(CASHFLOW_TYPE,EXPENSE_COMPONENT,INTERCOMP_IND) AS [UNIQUE] 
from STAG_ID.STAG_CONFIG_EXPENSE_CONTROL_ACCT 
WHERE BATCHDATE = @batch
)
--select * from ETL5_CONFIG
,ECAT_MAPPING AS(
SELECT A.*
--,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN COALESCE(A.CASHFLOW_TYPE_L1,0)+COALESCE(A.EXP_COMP,0)+COALESCE(A.INTERCOMP_IND,0) ELSE NULL END AS [UNIQUE]
,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN CONCAT(A.CASHFLOW_TYPE_L1,A.EXP_COMP,A.INTERCOMP_IND) ELSE NULL END AS [UNIQUE]
,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN B.NEW_COA ELSE A.NEW_COA END AS NEW_COA2
,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN B.CASHFLOW_TYPE_L1 ELSE A.CASHFLOW_TYPE_L1 END AS CASHFLOW_TYPE_L1_2
,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN B.CASHFLOW_TYPE_L2 ELSE A.CASHFLOW_TYPE_L2 END AS CASHFLOW_TYPE_L2_2
,CASE WHEN EXP_COMP NOT IN('N/A','NON_ATTR','NON_EXP') THEN B.VFA_CASHFLOW_TYPE ELSE NULL END AS VFA_CASHFLOW_TYPE
FROM(
SELECT * FROM EXP_TRANSPOSED UNION ALL
SELECT * FROM PAY_TRANSPOSED UNION ALL
SELECT * FROM NON_CLASS
)A
--LEFT JOIN ETL5_CONFIG B ON (COALESCE(A.CASHFLOW_TYPE_L1,0)+COALESCE(A.EXP_COMP,'')+COALESCE(A.INTERCOMP_IND,0))=B.[UNIQUE]
LEFT JOIN ETL5_CONFIG B ON CONCAT(A.CASHFLOW_TYPE_L1,A.EXP_COMP,A.INTERCOMP_IND)=B.[UNIQUE]
)

,IFRS4_SUNGL_CLASS AS(
SELECT ENTITY_ID
,SUN_CD as [ACCT_CD]
,REPLACE(CAST(ACCT_PERIOD AS VARCHAR),'/','') [EXTRACT_PERIOD_YTD]
,TXN_DT
,T0
,PAS_NAME
,EXPENSE_IND
,CONTROL_ACCT_FLG
,NEW_COA2 AS NEW_COA
,CASHFLOW_TYPE_L1_2 AS CASHFLOW_TYPE_L1
,CASHFLOW_TYPE_L2_2 AS CASHFLOW_TYPE_L2
,VFA_CASHFLOW_TYPE
,PROFIT_MARGIN
,RI_FLG
,INTERCOMP_IND
,AMT_LOCAL_CCY
,EXP_COMP
FROM ECAT_MAPPING
)
--select * from IFRS4_SUNGL_CLASS

INSERT INTO FOND_ID.FOND_ETL5_IFRS4_SUNGL_CLASS 
SELECT *
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID AS JOB_RUN_ID
,left(convert(varchar(8), @batch),6) as BATCHDATE
,current_timestamp as ETL_PROCESS_DATE_TIME
FROM IFRS4_SUNGL_CLASS;

----------------------------------------------------------
-- STEP 1 END
----------------------------------------------------------

----------------------------------------------------------
-- STEP 2 START
----------------------------------------------------------
SET @V_DESCRIPTION 	= 'Step 2 Start - Generating output : ' + convert(varchar,@V_START,121);
PRINT	@V_DESCRIPTION;
SET @V_SEQNO		= @V_SEQNO + 1;

INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

IF OBJECT_ID('tempdb..#IFRS4_SUNGL_CLASS_EXP') IS NOT NULL
BEGIN
	DROP TABLE #IFRS4_SUNGL_CLASS_EXP
END;

IF OBJECT_ID('tempdb..#IFRS17_SUNGL_CLASS_EXP') IS NOT NULL
BEGIN
	DROP TABLE #IFRS17_SUNGL_CLASS_EXP
END;

IF OBJECT_ID('tempdb..#IFRS4_SUNGL_CLASS_CF') IS NOT NULL
BEGIN
	DROP TABLE #IFRS4_SUNGL_CLASS_CF
END;

IF OBJECT_ID('tempdb..#IFRS17_SUNGL_CLASS_CF') IS NOT NULL
BEGIN
	DROP TABLE #IFRS17_SUNGL_CLASS_CF
END;

IF OBJECT_ID('tempdb..#IFRS17_SUNGL_CLASS_CF') IS NOT NULL
BEGIN
	DROP TABLE #IFRS17_SUNGL_CLASS_CF
END;

--***** SUMMARY EXPENSE IND LEVEL *****--
-- LBU
--INSERT INTO FOND_ID.FOND_ETL5_IFRS4_SUNGL_CLASS_SUM
SELECT	cast(left(@batch,4)+'0'+right(left(@batch,6),2) AS VARCHAR) [EXTRACT_PERIOD_YTD], A.EXP_COMP,SUM(A.AMT_LOCAL_CCY) AMT_LOCAL_CCY
INTO #IFRS4_SUNGL_CLASS_EXP
FROM FOND_ID.FOND_ETL5_IFRS4_SUNGL_CLASS A
WHERE BATCHDATE=@batch
--REPLACE([EXTRACT_PERIOD_YTD],'/','')=cast(left(@batch,4)+'0'+right(left(@batch,6),2) AS VARCHAR)
group by EXP_COMP

-- RHO
--INSERT INTO FOND_ID.FOND_ETL5_IFRS17_SUNGL_CLASS_SUM
SELECT	EXTRACT_PERIOD_YTD, B.EXPENSE_COMP_IND,SUM(B.AMT_LOCAL_CCY) RHO_AMT_LOCAL_CCY
INTO #IFRS17_SUNGL_CLASS_EXP
from FCORE_ID.FOND_IFRS17_SUNGL_CLASSIFIED B
WHERE cast(EXTRACT_PERIOD_YTD as int)=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int)
group by EXPENSE_COMP_IND,EXTRACT_PERIOD_YTD

--OUTPUT
INSERT INTO FOND_ID.FOND_ETL5_CLASSIFICATION_PER_EXPENSE
SELECT REPLACE(A.[EXTRACT_PERIOD_YTD],'/','') AS [EXTRACT_PERIOD_YTD], A.EXP_COMP,AMT_LOCAL_CCY, B.EXPENSE_COMP_IND, RHO_AMT_LOCAL_CCY
,A.AMT_LOCAL_CCY-B.RHO_AMT_LOCAL_CCY AS [VAR]
,(A.AMT_LOCAL_CCY-RHO_AMT_LOCAL_CCY)/nullif(A.AMT_LOCAL_CCY,0) AS VAR_PCT
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID AS JOB_RUN_ID
,left(convert(varchar(8), @batch),6) as BATCHDATE
,current_timestamp as ETL_PROCESS_DATE_TIME
FROM #IFRS4_SUNGL_CLASS_EXP A
LEFT JOIN #IFRS17_SUNGL_CLASS_EXP B ON B.EXPENSE_COMP_IND=A.EXP_COMP

------------------------------------------------------------


--***** SUMMARY CF L1 & L2 LEVEL *****--
-- LBU
SELECT cast(left(@batch,4)+'0'+right(left(@batch,6),2) AS VARCHAR) [EXTRACT_PERIOD_YTD],A.EXP_COMP, A.CASHFLOW_TYPE_L1,A.CASHFLOW_TYPE_L2,SUM(A.AMT_LOCAL_CCY) AMT_LOCAL_CCY
INTO #IFRS4_SUNGL_CLASS_CF
FROM FOND_ID.FOND_ETL5_IFRS4_SUNGL_CLASS  A
WHERE BATCHDATE=@batch
--REPLACE([EXTRACT_PERIOD_YTD],'/','')=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as varchar)
GROUP BY A.EXP_COMP, A.CASHFLOW_TYPE_L1,A.CASHFLOW_TYPE_L2

-- RHO
SELECT	EXTRACT_PERIOD_YTD, B.EXPENSE_COMP_IND,B.CASHFLOW_TYPE_L1 AS RHO_CASHFLOW_TYPE_L1,B.CASHFLOW_TYPE_L2  AS RHO_CASHFLOW_TYPE_L2,SUM(B.AMT_LOCAL_CCY) RHO_AMT_LOCAL_CCY
INTO #IFRS17_SUNGL_CLASS_CF
FROM FCORE_ID.FOND_IFRS17_SUNGL_CLASSIFIED B
WHERE cast(EXTRACT_PERIOD_YTD as int)=cast(left(@batch,4)+'0'+right(left(@batch,6),2) as int)
GROUP BY EXTRACT_PERIOD_YTD, B.EXPENSE_COMP_IND,B.CASHFLOW_TYPE_L1,B.CASHFLOW_TYPE_L2

-- OUTPUT
INSERT INTO FOND_ID.FOND_ETL5_CLASSIFICATION_PER_CASHFLOW
SELECT A.[EXTRACT_PERIOD_YTD] AS PERIOD, A.EXP_COMP, A.CASHFLOW_TYPE_L1,A.CASHFLOW_TYPE_L2,AMT_LOCAL_CCY
,B.EXPENSE_COMP_IND,RHO_CASHFLOW_TYPE_L1,RHO_CASHFLOW_TYPE_L2,RHO_AMT_LOCAL_CCY
,A.AMT_LOCAL_CCY-RHO_AMT_LOCAL_CCY AS [VAR]
,(A.AMT_LOCAL_CCY-RHO_AMT_LOCAL_CCY)/nullif(A.AMT_LOCAL_CCY,0) AS VAR_PCT
,@BATCH_MASTER_ID AS BATCH_MASTER_ID
,@BATCH_RUN_ID AS BATCH_RUN_ID
,@JOB_MASTER_ID AS JOB_MASTER_ID
,@JOB_RUN_ID AS JOB_RUN_ID
,left(convert(varchar(8), @batch),6) as BATCHDATE
,current_timestamp as ETL_PROCESS_DATE_TIME
FROM #IFRS4_SUNGL_CLASS_CF A
LEFT JOIN #IFRS17_SUNGL_CLASS_CF B 
	ON ISNULL(B.EXPENSE_COMP_IND,'0')=ISNULL(A.EXP_COMP,'0') AND ISNULL(B.RHO_CASHFLOW_TYPE_L1,'0')=ISNULL(A.CASHFLOW_TYPE_L1,'0') 
	AND ISNULL(A.CASHFLOW_TYPE_L2,'0')=ISNULL(B.RHO_CASHFLOW_TYPE_L2,'0')

----------------------------------------------------------
-- STEP 2 END
----------------------------------------------------------
SET @V_DESCRIPTION 	= 'Step 2 End - The output generated successfully : ' + convert(varchar,@V_START,121);
PRINT	@V_DESCRIPTION;
SET @V_SEQNO		= @V_SEQNO + 1;

INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;


