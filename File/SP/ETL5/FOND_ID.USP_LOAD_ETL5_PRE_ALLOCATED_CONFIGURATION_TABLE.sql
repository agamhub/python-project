CREATE PROC [FOND_ID].[USP_LOAD_ETL5_PRE_ALLOCATED_CONFIGURATION_TABLE] @batch [NVARCHAR](100) AS
BEGIN 
	--DECLARE @batch [nvarchar](30);
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.FOND_CONFIG_STAG_PRE_ALLOCATED_CONFIGURATION_TABLE';
	DECLARE @V_TABLE1 		NVARCHAR(2000);
	DECLARE @V_TABLE2 		NVARCHAR(2000);
	DECLARE @SCHEMA      NVARCHAR(MAX)
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'PRE_ALLOCATED_CONFIGURATION_TABLE';
	DECLARE @V_DRIVER_PERIOD VARCHAR(10); 
	SET @V_DRIVER_PERIOD =SUBSTRING(CAST(@batch AS VARCHAR),1,6);

BEGIN TRY
		SET @SCHEMA ='FOND_ID.'

		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		---------------------------- DROP TEMPORARY TABLE ------------------------------
		IF OBJECT_ID('tempdb..#PRE_ALLOCATED_CONFIGURATION_TABLE') IS NOT NULL
		BEGIN
			DROP TABLE #PRE_ALLOCATED_CONFIGURATION_TABLE
		END;

		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE PRE_ALLOCATED_CONFIGURATION_TABLE : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 


		---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------
--	DECLARE @batch [nvarchar](30)='20190101'	
		SELECT 
			ENTITY_ID,
			SUN_CD,
			PASS_THROUGH_IND,
			[ACTION],
			USER_PROFILE,
			UPDATE_DT,
			FNAME,
			FPROCDATE,
			SOURCE_TYPE,
			PROCESS_TYPE,
			PROCESS_TIME,
			JOB_PROCESS_ID,
			JOB_RUN_ID_LOCAL,
			BATCH_RUN_ID_LOCAL
			,0 BATCH_MASTER_ID,
			0 BATCH_RUN_ID,
			0 JOB_MASTER_ID,
			0 JOB_RUN_ID,
			SUBSTRING(CAST(@batch AS VARCHAR),1,6) BATCHDATE,
			GETDATE() ETL_PROCESS_DATE_TIME
			INTO #PRE_ALLOCATED_CONFIGURATION_TABLE
			FROM
				STAG_ID.STAG_CONFIG_STAG_PRE_ALLOCATED_CONFIGURATION_TABLE where ACTION ='I'
				;
	
		---------------------------- TO Handle rerun process ------------------------------
		BEGIN TRANSACTION;
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_CONFIG_STAG_PLAI_CLASSIFICATION_MAPPING] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 

		
		DELETE FROM FOND_ID.FOND_CONFIG_STAG_PRE_ALLOCATED_CONFIGURATION_TABLE where 1=1;
	
		 ---------------------------- TO Handle rerun process ------------------------------
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_EXCLUSION_CONFIG] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);


		INSERT INTO [FOND_ID].[FOND_CONFIG_STAG_PRE_ALLOCATED_CONFIGURATION_TABLE]
		(
		ENTITY_ID,
		SUN_CD,
		PASS_THROUGH_IND,
		[ACTION],
		USER_PROFILE,
		UPDATE_DT,
		FNAME,
		FPROCDATE,
		SOURCE_TYPE,
		PROCESS_TYPE,
		PROCESS_TIME,
		JOB_PROCESS_ID,
		BATCH_MASTER_ID,
		BATCH_RUN_ID,
		JOB_MASTER_ID,
		JOB_RUN_ID,
		BATCHDATE,
		ETL_PROCESS_DATE_TIME
		)
		SELECT 
		ENTITY_ID,
		SUN_CD,
		PASS_THROUGH_IND,
		[ACTION],
		USER_PROFILE,
		UPDATE_DT,
		FNAME,
		FPROCDATE,
		SOURCE_TYPE,
		PROCESS_TYPE,
		PROCESS_TIME,
		JOB_PROCESS_ID,
		BATCH_MASTER_ID,
		BATCH_RUN_ID,
		JOB_MASTER_ID,
		JOB_RUN_ID,
		BATCHDATE,
		ETL_PROCESS_DATE_TIME
		FROM #PRE_ALLOCATED_CONFIGURATION_TABLE
		;
	
		---------------------------- ETL5 LOGGING ----------------------------      
       	
		DECLARE @V_TOTAL_ROWS integer = 0;
		DECLARE @V_PERIOD nvarchar(10);
		SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #PRE_ALLOCATED_CONFIGURATION_TABLE) ;
        SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))

		INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
		VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_CONFIG_STAG_PRE_ALLOCATED_CONFIGURATION_TABLE'
		,@drivername,@V_TOTAL_ROWS,'MTD',@V_PERIOD);
		
		
		IF @@TRANCOUNT > 0
        COMMIT;


		---------------------------- DROP TEMPORARY TABLE ------------------------------  
		IF OBJECT_ID('tempdb..#PRE_ALLOCATED_CONFIGURATION_TABLE') IS NOT NULL
		BEGIN
			DROP TABLE #PRE_ALLOCATED_CONFIGURATION_TABLE
		END;

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;

