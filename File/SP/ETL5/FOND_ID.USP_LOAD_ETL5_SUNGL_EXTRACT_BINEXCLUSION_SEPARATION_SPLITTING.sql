CREATE PROC [FOND_ID].[USP_LOAD_ETL5_SUNGL_EXTRACT_BINEXCLUSION_SEPARATION_SPLITTING] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = '[FOND_ID].[USP_LOAD_ETL5_SUNGL_EXTRACT_BINEXCLUSION_SEPARATION]';
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;

	------START GET RUN ID DETAIL FROM ABC------
	DECLARE 
	@BATCH_MASTER_ID  VARCHAR(20) = 0,
	@BATCH_RUN_ID    VARCHAR(20) = 0,
	@JOB_MASTER_ID   VARCHAR(20) = 0,
	@JOB_RUN_ID     VARCHAR(20) = 0,
	@GMT_START_DTTM   VARCHAR(19) = CONVERT(DATETIME2, GETDATE());

	EXEC STAG_ID.USP_GetRunIdReturn
	@JobName     = @JOBNAMESTR,
	@BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	@BATCH_RUN_ID  = @BATCH_RUN_ID OUTPUT,
	@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT,
	@JOB_RUN_ID   = @JOB_RUN_ID OUTPUT,
	@GMT_START_DTTM = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC------

BEGIN TRY
		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); 
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'Cleanup temp table!';
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	
	
--		Declare @batch varchar(20)='20210101'
		declare @yearmonth varchar(6)= left(@batch,6)
		--Populate EXCLUSION Data
		--Backup SUNGL Extract + Excluded + Bin
		declare @sql_cleanup1 varchar(max)=
		'if object_id ('+''''+'FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+''''+','+''''+'U'+''''+') is not null drop table  FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+';'+
		'if object_id ('+''''+'FOND_ID.FOND_ETL5_SUNGL_EXTRACT_SEP_TMP_SPLITTING'+@yearmonth+''''+','+''''+'U'+''''+') is not null drop table  FOND_ID.FOND_ETL5_SUNGL_EXTRACT_SEP_TMP_SPLITTING'+@yearmonth+';'+
		'if object_id ('+''''+'FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_SEP_TMP_SPLITTING'+@yearmonth+''''+','+''''+'U'+''''+') is not null drop table  FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_SEP_TMP_SPLITTING'+@yearmonth+';'+
		'if object_id ('+''''+'FOND_ID.FOND_ETL5_EXCLUSION_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+''''+','+''''+'U'+''''+') is not null drop table  FOND_ID.FOND_ETL5_EXCLUSION_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+';'
		exec (@sql_cleanup1); 
	
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'Backup Original Table';
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	

		declare @sql_bkp varchar(max)=
		'select * into FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+' from FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG WHERE ENTITY_ID IN (''IAC'',''IAS'');
		select * into FOND_ID.FOND_ETL5_SUNGL_EXTRACT_SEP_TMP_SPLITTING'+@yearmonth+' from FOND_ID.FOND_ETL5_SUNGL_EXTRACT where BATCHDATE='+''''+@yearmonth+''''+ ' AND ENTITY_ID IN (''IAC'',''IAS'');
		select * into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_SEP_TMP_SPLITTING'+@yearmonth+' from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED where BATCHDATE='+''''+@yearmonth+''''+ ' AND ENTITY_ID IN (''IAC'',''IAS'');
		select * into FOND_ID.FOND_ETL5_EXCLUSION_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+' from FOND_ID.FOND_ETL5_EXCLUSION_CONFIG WHERE ENTITY_ID IN (''IAC'',''IAS'');'
		exec (@sql_bkp) ;

		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'BIN and Exclusion Data Extraction';
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	
	
		--Get EXCLUSION Data
		--truncate table FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG;
		DELETE FROM FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG WHERE ENTITY_ID IN ('IAC','IAS');
		--exec FOND_ID.USP_LOAD_ETL5_SUNGL_EXTRACT @batch,@JOBNAMESTR;
		exec FOND_ID.USP_LOAD_ETL5_SUNGL_EXTRACT_SPLITTING @batch,@JOBNAMESTR;
		--exec FOND_ID.USP_LOAD_ETL5_SUNGL_EXTRACT_EXCLUDED @batch,@JOBNAMESTR;
		exec FOND_ID.USP_LOAD_ETL5_SUNGL_EXTRACT_EXCLUDED_SPLITTING @batch,@JOBNAMESTR;
		--select * into FOND_ID.FOND_ETL5_SUNGL_EXTRACT_EXCLUSION from FOND_ID.FOND_ETL5_SUNGL_EXTRACT
		delete from FOND_ID.FOND_ETL5_SUNGL_EXTRACT_EXCLUSION where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		insert into FOND_ID.FOND_ETL5_SUNGL_EXTRACT_EXCLUSION 
		select ENTITY_ID,
		ACCT_CD,
		EXTRACT_PERIOD,
		TXN_DT,
		AMT_LOCAL_CCY,
		CR_DR_FLG,
		JRNAL_NO,
		JRNAL_LINE,
		JRNAL_TYPE,
		JRNAL_SRC,
		TXN_REF,
		TXN_DESC,
		T0,
		T1,
		T2,
		T3,
		T4,
		T5,
		T6,
		T7,
		T8,
		@BATCH_MASTER_ID AS BATCH_MASTER_ID,
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		CONCAT(SUBSTRING(@batch,1,4), SUBSTRING(@batch,5,2)) AS BATCHDATE,
		CURRENT_TIMESTAMP AS ETL_PROCESS_DATE_TIME
 from FOND_ID.FOND_ETL5_SUNGL_EXTRACT where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		--select * into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_EXCLUSION from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED
		delete from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_EXCLUSION where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		insert into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_EXCLUSION 
		select ENTITY_ID,
		LEDGER,
		ACCNT_CODE,
		PERIOD,
		TRANS_DATE,
		AMOUNT,
		D_C,
		ALLOCATION,
		JRNAL_NO,
		JRNAL_LINE,
		JRNAL_TYPE,
		JRNAL_SRCE,
		TREFERENCE,
		DESCRIPTN,
		ENTRY_DATE,
		ENTRY_PRD,
		DUE_DATE,
		ALLOC_REF,
		ALLOC_DATE,
		ALLOC_PERIOD,
		ASSET_IND,
		ASSET_CODE,
		ASSET_SUB,
		CONV_CODE,
		CONV_RATE,
		OTHER_AMT,
		OTHER_DP,
		CLEARDOWN,
		REVERSAL,
		LOSS_GAIN,
		ROUGH_FLAG,
		IN_USE_FLAG,
		ANAL_T0,
		ANAL_T1,
		ANAL_T2,
		ANAL_T3,
		ANAL_T4,
		ANAL_T5,
		ANAL_T6,
		ANAL_T7,
		ANAL_T8,
		ANAL_T9,
		POSTING_DATE,
		ALLOC_IN_PROGRESS,
		HOLD_REF,
		HOLD_OP_ID,
		LAST_CHANGE_USER_ID,
		LAST_CHANGE_DATE,
		ORIGINATOR_ID,
		UPLOAD_DATE,
		FNAME,
		FPROCDATE,
		SOURCE_TYPE,
		PROCESS_TYPE,
		PROCESS_TIME,
		JOB_PROCESS_ID,
		@BATCH_MASTER_ID AS BATCH_MASTER_ID,
		@BATCH_RUN_ID AS BATCH_RUN_ID,
		@JOB_MASTER_ID AS JOB_MASTER_ID,
		@JOB_RUN_ID AS JOB_RUN_ID,
		CONCAT(SUBSTRING(@batch,1,4), SUBSTRING(@batch,5,2)) AS BATCHDATE,
		CURRENT_TIMESTAMP AS ETL_PROCESS_DATE_TIME
		from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		
		declare @sql_restore0 varchar(max)=
		'insert into FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG select * from FOND_ID.FOND_ETL5_BIN_ACCOUNT_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+';'
		exec (@sql_restore0) 
		
		
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'Restore backup data to original table';
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	
	
		BEGIN TRANSACTION;
		--Restore Data SUNGL Extract + Excluded
		delete from FOND_ID.FOND_ETL5_SUNGL_EXTRACT where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		delete from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		
		declare @sql_restore1 varchar(max)=
		'insert into FOND_ID.FOND_ETL5_SUNGL_EXTRACT select * from FOND_ID.FOND_ETL5_SUNGL_EXTRACT_SEP_TMP_SPLITTING'+@yearmonth+';
		insert into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED select * from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_SEP_TMP_SPLITTING'+@yearmonth+';'
		--insert into FOND_ID.FOND_ETL5_EXCLUSION_CONFIG select * from FOND_ID.FOND_ETL5_EXCLUSION_CONFIG_SEP_TMP_SPLITTING'+@yearmonth+';'
		exec (@sql_restore1) 
		
		IF @@TRANCOUNT > 0
	    COMMIT;
		
	   
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'Get Bin Data';
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	
		--Cleanup Sungl Extract and excluded for BIN
		delete from FOND_ID.FOND_ETL5_SUNGL_EXTRACT_BIN where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		delete from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_BIN where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS');
		
		--Get Bin Data
		insert into FOND_ID.FOND_ETL5_SUNGL_EXTRACT_BIN 
		(ENTITY_ID, ACCT_CD, EXTRACT_PERIOD, TXN_DT, AMT_LOCAL_CCY, CR_DR_FLG, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRC, TXN_REF, TXN_DESC, T0, T1, T2, T3, T4, T5, T6, T7, T8, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME)
		select 
		ENTITY_ID, ACCT_CD, EXTRACT_PERIOD, TXN_DT, AMT_LOCAL_CCY, CR_DR_FLG, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRC, TXN_REF, TXN_DESC, T0, T1, T2, T3, T4, T5, T6, T7, T8, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME
		from
		(select a.* from 
		(select * from FOND_ID.FOND_ETL5_SUNGL_EXTRACT_EXCLUSION where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS')) a 
		left join (select *,'bin+excl' lbl from FOND_ID.FOND_ETL5_SUNGL_EXTRACT where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS')) b
		on a.ACCT_CD=b.ACCT_CD and a.TXN_DESC=b.TXN_DESC and a.AMT_LOCAL_CCY=b.AMT_LOCAL_CCY and a.JRNAL_NO=b.JRNAL_NO and a.JRNAL_LINE=b.JRNAL_LINE and a.JRNAL_TYPE=b.JRNAL_TYPE and a.JRNAL_SRC=b.JRNAL_SRC AND a.ENTITY_ID = b.ENTITY_ID
		where b.lbl is null ) b
		
--		insert into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_BIN 
--		(ENTITY_ID, LEDGER, ACCNT_CODE, PERIOD, TRANS_DATE, AMOUNT, D_C, ALLOCATION, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRCE, TREFERENCE, DESCRIPTN, ENTRY_DATE, ENTRY_PRD, DUE_DATE, ALLOC_REF, ALLOC_DATE, ALLOC_PERIOD, ASSET_IND, ASSET_CODE, ASSET_SUB, CONV_CODE, CONV_RATE, OTHER_AMT, OTHER_DP, CLEARDOWN, REVERSAL, LOSS_GAIN, ROUGH_FLAG, IN_USE_FLAG, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, ANAL_T9, POSTING_DATE, ALLOC_IN_PROGRESS, HOLD_REF, HOLD_OP_ID, LAST_CHANGE_USER_ID, LAST_CHANGE_DATE, ORIGINATOR_ID, UPLOAD_DATE, FNAME, FPROCDATE, SOURCE_TYPE, PROCESS_TYPE, PROCESS_TIME, JOB_PROCESS_ID, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME)
--		select 
--		ENTITY_ID, LEDGER, ACCNT_CODE, PERIOD, TRANS_DATE, AMOUNT, D_C, ALLOCATION, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRCE, TREFERENCE, DESCRIPTN, ENTRY_DATE, ENTRY_PRD, DUE_DATE, ALLOC_REF, ALLOC_DATE, ALLOC_PERIOD, ASSET_IND, ASSET_CODE, ASSET_SUB, CONV_CODE, CONV_RATE, OTHER_AMT, OTHER_DP, CLEARDOWN, REVERSAL, LOSS_GAIN, ROUGH_FLAG, IN_USE_FLAG, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, ANAL_T9, POSTING_DATE, ALLOC_IN_PROGRESS, HOLD_REF, HOLD_OP_ID, LAST_CHANGE_USER_ID, LAST_CHANGE_DATE, ORIGINATOR_ID, UPLOAD_DATE, FNAME, FPROCDATE, SOURCE_TYPE, PROCESS_TYPE, PROCESS_TIME, JOB_PROCESS_ID, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME
--		from
--		(select a.* from 
--		(select * from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED where BATCHDATE=@yearmonth) a 
--		left join (select *,'excl' lbl from FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_EXCLUSION where BATCHDATE=@yearmonth) b
--		on a.ACCNT_CODE=b.ACCNT_CODE and a.AMOUNT=b.AMOUNT and a.ALLOCATION=b.ALLOCATION and a.JRNAL_NO=b.JRNAL_NO and a.JRNAL_LINE=b.JRNAL_LINE and a.JRNAL_TYPE=b.JRNAL_TYPE and a.JRNAL_SRCE=b.JRNAL_SRCE and a.TREFERENCE=b.TREFERENCE and a.DESCRIPTN=b.DESCRIPTN
--		where b.lbl is null ) b
--		
		insert into FOND_ID.FOND_PLAI_FOND_ETL5_SUNGL_EXCLUDED_BIN 
		(ENTITY_ID, LEDGER, ACCNT_CODE, PERIOD, TRANS_DATE, AMOUNT, D_C, ALLOCATION, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRCE, TREFERENCE, DESCRIPTN, ENTRY_DATE, ENTRY_PRD, DUE_DATE, ALLOC_REF, ALLOC_DATE, ALLOC_PERIOD, ASSET_IND, ASSET_CODE, ASSET_SUB, CONV_CODE, CONV_RATE, OTHER_AMT, OTHER_DP, CLEARDOWN, REVERSAL, LOSS_GAIN, ROUGH_FLAG, IN_USE_FLAG, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, ANAL_T9, POSTING_DATE, ALLOC_IN_PROGRESS, HOLD_REF, HOLD_OP_ID, LAST_CHANGE_USER_ID, LAST_CHANGE_DATE, ORIGINATOR_ID, UPLOAD_DATE, FNAME, FPROCDATE, SOURCE_TYPE, PROCESS_TYPE, PROCESS_TIME, JOB_PROCESS_ID, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME)
		select 
		ENTITY_ID, LEDGER, ACCNT_CODE, PERIOD, TRANS_DATE, AMOUNT, D_C, ALLOCATION, JRNAL_NO, JRNAL_LINE, JRNAL_TYPE, JRNAL_SRCE, TREFERENCE, DESCRIPTN, ENTRY_DATE, ENTRY_PRD, DUE_DATE, ALLOC_REF, ALLOC_DATE, ALLOC_PERIOD, ASSET_IND, ASSET_CODE, ASSET_SUB, CONV_CODE, CONV_RATE, OTHER_AMT, OTHER_DP, CLEARDOWN, REVERSAL, LOSS_GAIN, ROUGH_FLAG, IN_USE_FLAG, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, ANAL_T9, POSTING_DATE, ALLOC_IN_PROGRESS, HOLD_REF, HOLD_OP_ID, LAST_CHANGE_USER_ID, LAST_CHANGE_DATE, ORIGINATOR_ID, UPLOAD_DATE, FNAME, FPROCDATE, SOURCE_TYPE, PROCESS_TYPE, PROCESS_TIME, JOB_PROCESS_ID, BATCH_MASTER_ID, BATCH_RUN_ID, JOB_MASTER_ID, JOB_RUN_ID, BATCHDATE, ETL_PROCESS_DATE_TIME
		from
		(select a.* from 
		(select * from STAG_ID.STAG_SUNGL_ABSTR_IFRS4_SUNGL where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS')) a 
		left join (select *,'exclusion' lbl from FOND_ID.FOND_ETL5_SUNGL_EXTRACT_BIN where BATCHDATE=@yearmonth AND ENTITY_ID IN ('IAC','IAS')) b
		on a.ACCNT_CODE=b.ACCT_CD and a.AMOUNT=b.AMT_LOCAL_CCY  and a.JRNAL_NO=b.JRNAL_NO and a.JRNAL_LINE=b.JRNAL_LINE and a.JRNAL_TYPE=b.JRNAL_TYPE and a.JRNAL_SRCE=b.JRNAL_SRC and a.TREFERENCE=b.TXN_REF and a.DESCRIPTN=b.TXN_DESC AND a.ENTITY_ID = b.ENTITY_ID
		where b.lbl is null ) b
   
	--Clean TEMP Table
	exec (@sql_cleanup1) 


END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;



