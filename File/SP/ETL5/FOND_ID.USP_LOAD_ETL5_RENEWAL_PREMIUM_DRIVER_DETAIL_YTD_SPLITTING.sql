CREATE PROC [FOND_ID].[USP_LOAD_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL_YTD_SPLITTING] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	--DECLARE @batch [nvarchar](30);
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL_SPLITTING';
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'RENEWALPREM';

		------ START ABC ------
	DECLARE
    @BATCH_MASTER_ID    VARCHAR(20) = 0,
    @BATCH_RUN_ID       VARCHAR(20) = 0,
    @JOB_MASTER_ID      VARCHAR(20) = 0,
    @JOB_RUN_ID         VARCHAR(20) = 0,
    @GMT_START_DTTM     VARCHAR(20) = GETDATE();
	
	EXEC STAG_ID.USP_GetRunIdReturn
	  @JobName        = @JOBNAMESTR,
	  @BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	  @BATCH_RUN_ID    = @BATCH_RUN_ID OUTPUT,
	  @JOB_MASTER_ID   = @JOB_MASTER_ID OUTPUT,
	  @JOB_RUN_ID      = @JOB_RUN_ID OUTPUT,
	  @GMT_START_DTTM  = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC--------- 
 

BEGIN TRY
		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		---------------------------- DROP TEMPORARY TABLE ------------------------------
		IF OBJECT_ID('tempdb..#etl5_renewal_premium_driver') IS NOT NULL
		BEGIN
			DROP TABLE #etl5_renewal_premium_driver
		END;

		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE etl5_renewal_premium_driver : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 


		-- ICG STORES
		IF OBJECT_ID('tempdb..#ICG_STORES') IS NOT NULL DROP TABLE #ICG_STORES
		SELECT POLICY_NO, INSURANCE_CONTRACT_GROUP_ID
			INTO #ICG_STORES 
			FROM (
				select *,ROW_NUMBER() OVER (PARTITION BY POLICY_NO ORDER BY CB_END_DT DESC) as rncb 
				from FOND_ID.FOND_IFRS17_ICG_STORES
				where  BENEFIT_CD =PRODUCT_CD 
				) c	
			where  c.rncb=1
			GROUP BY POLICY_NO, INSURANCE_CONTRACT_GROUP_ID

		--PORTFOLIO_MAPPING
		IF OBJECT_ID('tempdb..#PORTFOLIO_MAPPING') IS NOT NULL DROP TABLE #PORTFOLIO_MAPPING
		SELECT DISTINCT RENOVA_PRODUCT_CD, COALESCE(ETL1_PRODUCT_CD,PRODUCT_CD) AS PRODUCT_CD, CASE WHEN PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS' END ENTITY_ID
		INTO #PORTFOLIO_MAPPING
		FROM STAG_ID.STAG_CONFIG_RENOVA_ETL1_MAPPING A 
		FULL JOIN [STAG_ID].[STAG_CONFIG_IFRS17_PORTFOLIO_MAPPING] B ON A.ETL1_PRODUCT_CD = B.PRODUCT_CD;

		--PORTFOLIO_MAPPING2
		IF OBJECT_ID('tempdb..#PORTFOLIO_MAPPING2') IS NOT NULL DROP TABLE #PORTFOLIO_MAPPING2
		SELECT * INTO #PORTFOLIO_MAPPING2
		FROM (SELECT LEFT(PRODUCT_CD,3) AS PRODUCT_CD, PORTFOLIO_GROUP, ROW_NUMBER() OVER (PARTITION BY LEFT(PRODUCT_CD,3) ORDER BY CCY_CD) as rncb 
		FROM [STAG_ID].[STAG_CONFIG_IFRS17_PORTFOLIO_MAPPING]) A WHERE rncb = 1

		---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------
		--DECLARE @batch [nvarchar](30);
		--SET @batch = '20190301';
		--DECLARE @drivername NVARCHAR(15);
		--SET @drivername = 'RENEWALPREM';
		SELECT * 
		INTO #etl5_renewal_premium_driver
		FROM (
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'					
				END ENTITY_ID,
				'LifeAsia' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POLICY_NO] COLLATE DATABASE_DEFAULT as POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM([RENEWAL_PREMIUM]) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
				-- select top 10 *
		FROM --[FOND_ID].[FOND_LIFEASIA_DRIVER_DETAIL]
		[FOND_ID].[FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM] A
		LEFT JOIN #ICG_STORES B ON A.[POLICY_NO] = B.[POLICY_NO]
		LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
		LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		AND [RENEWAL_PREMIUM] IS NOT NULL
		group by A.[POLICY_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		UNION all
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'	
				END ENTITY_ID,
				CASE WHEN LEFT(UPPER(POL_NO),3) = 'PES' THEN 'PruEmasSya' ELSE 'PruEmas' END as DRIVER_SOURCE, --'PruEmas' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POL_NO] COLLATE DATABASE_DEFAULT POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM(CAST([RENEWAL_PREMIUM] AS NUMERIC(28,6))) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
				-- SELECT *
			  FROM [FOND_ID].[FOND_ETL5_PRUEMAS_DRIVER_DETAIL] A
		LEFT JOIN #ICG_STORES B ON A.[POL_NO] = B.[POLICY_NO]
		LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
		LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		GROUP BY A.[POL_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		UNION all
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'	
				END ENTITY_ID,
				'PruAman' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POL_NO] COLLATE DATABASE_DEFAULT POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM([RENEWAL_PREMIUM]) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
				from [FOND_ID].[FOND_ETL5_PRUAMAN_DRIVER_DETAIL] A
				LEFT JOIN #ICG_STORES B ON A.[POL_NO] = B.[POLICY_NO]
				LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
				LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		GROUP BY A.[POL_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		UNION all
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'	
				END ENTITY_ID,
				'PruAmanS' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POL_NO] COLLATE DATABASE_DEFAULT POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM([RENEWAL_PREMIUM]) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
				from [FOND_ID].[FOND_ETL5_PRUAMAN_SHARIA_DRIVER_DETAIL] A
				LEFT JOIN #ICG_STORES B ON A.[POL_NO] = B.[POLICY_NO]
				LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
				LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		GROUP BY A.[POL_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		UNION ALL
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'	
				END ENTITY_ID,
				'PayLife' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POL_NO] COLLATE DATABASE_DEFAULT POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM([RENEWAL_PREMIUM]) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
			  FROM [FOND_ID].[FOND_ETL5_PAYLIFE_DRIVER_DETAIL] A
				LEFT JOIN #ICG_STORES B ON A.[POL_NO] = B.[POLICY_NO]
				LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
				LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		GROUP BY A.[POL_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		UNION ALL
		SELECT 
				CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC'
					WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
					WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
					WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC'
					WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'	
				END ENTITY_ID,
				'CreditShield' DRIVER_SOURCE,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DRIVER_PERIOD,
				A.[POL_NO] COLLATE DATABASE_DEFAULT POL_NO,
				max([BENF_CD] COLLATE DATABASE_DEFAULT) as BENF_CD,
				max([PROD_CD] COLLATE DATABASE_DEFAULT) as PROD_CD,
				'' [TREATY_CD],
				max([ADJ_T0] COLLATE DATABASE_DEFAULT) AS FUND,
		        @drivername ALLOCATION_DRIVER,
		        SUM([RENEWAL_PREMIUM]) DRIVER_AMOUNT,
				@BATCH_MASTER_ID AS BATCH_MASTER_ID,
				@BATCH_RUN_ID AS BATCH_RUN_ID,
				@JOB_MASTER_ID AS JOB_MASTER_ID,
				@JOB_RUN_ID AS JOB_RUN_ID,
				YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 100 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) DL_PLAI_BATCHDATE,
				GETDATE() ETL_PROCESS_DATE_TIME
			  FROM [FOND_ID].[FOND_ETL5_CREDITSHIELD_DRIVER_DETAIL] A
				LEFT JOIN #ICG_STORES B ON A.[POL_NO] = B.[POLICY_NO]
				LEFT JOIN #PORTFOLIO_MAPPING C ON A.PROD_CD = C.PRODUCT_CD OR A.BENF_CD = C.PRODUCT_CD
				LEFT JOIN #PORTFOLIO_MAPPING2 D ON A.PROD_CD = D.PRODUCT_CD
		WHERE  ACCOUNTING_PERIOD BETWEEN YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
		AND YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		GROUP BY A.[POL_NO], CASE WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%CON%' THEN 'IAC' WHEN INSURANCE_CONTRACT_GROUP_ID LIKE '%SHA%' THEN 'IAS'
								   WHEN C.PRODUCT_CD IS NOT NULL THEN C.ENTITY_ID
								   WHEN D.PORTFOLIO_GROUP LIKE '%CON%' THEN 'IAC' WHEN D.PORTFOLIO_GROUP LIKE '%SHA%' THEN 'IAS'
							  END
		)a
		;
		---------------------------- TO Handle rerun process ------------------------------
		BEGIN TRANSACTION;
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 

		-- SELECT DISTINCT DRIVER_PERIOD FROM FOND_ID.FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL
	
		DELETE FROM FOND_ID.FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL 
		WHERE DRIVER_PERIOD =  YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)))
		AND COALESCE(ENTITY_ID,'') IN ('IAC','IAS','');

		 ---------------------------- TO Handle rerun process ------------------------------
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);


		INSERT INTO [FOND_ID].[FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL]
		SELECT ENTITY_ID,
			    DRIVER_SOURCE ,
				CAST (DRIVER_PERIOD AS VARCHAR(7)) DRIVER_PERIOD,
				POL_NO,
				BENF_CD,
				PROD_CD,
				TREATY_CD,
				FUND,
				ALLOCATION_DRIVER,
				case when DRIVER_SOURCE='LifeAsia' then DRIVER_AMOUNT else DRIVER_AMOUNT*-1 end DRIVER_AMOUNT,
				BATCH_MASTER_ID,
				BATCH_RUN_ID,
				JOB_MASTER_ID,
				JOB_RUN_ID,
				CAST (DL_PLAI_BATCHDATE AS VARCHAR(6)) DL_PLAI_BATCHDATE,
				ETL_PROCESS_DATE_TIME 
		FROM #etl5_renewal_premium_driver
		;

		---------------------------- ETL5 LOGGING ----------------------------      
       	
		DECLARE @V_TOTAL_ROWS integer = 0;
		DECLARE @V_PERIOD nvarchar(10);
		SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #etl5_renewal_premium_driver) ;
        SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))

		INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
		VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_ETL5_RENEWAL_PREMIUM_DRIVER_DETAIL'
		,@drivername,@V_TOTAL_ROWS,'YTD',@V_PERIOD);
		
		SELECT 'Total records : ' + @V_PERIOD;
	
		IF @@TRANCOUNT > 0
        COMMIT;


		---------------------------- DROP TEMPORARY TABLE ------------------------------  
		IF OBJECT_ID('tempdb..#etl5_renewal_premium_driver') IS NOT NULL
		BEGIN
			DROP TABLE #etl5_renewal_premium_driver
		END;

END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;

