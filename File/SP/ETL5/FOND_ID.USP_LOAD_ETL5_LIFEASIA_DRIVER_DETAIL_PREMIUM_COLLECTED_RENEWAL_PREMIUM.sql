CREATE PROC [FOND_ID].[USP_LOAD_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM] @batch [NVARCHAR](100),@JOBNAMESTR [NVARCHAR](2000) AS
BEGIN 
	--DECLARE @batch [nvarchar](30);
	DECLARE @V_START		datetime;
	DECLARE @V_END			datetime;
	DECLARE @V_FUNCTION_NAME	NVARCHAR(2000) = 'FOND_ID.USP_LOAD_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM';
	DECLARE @V_TABLE1 		NVARCHAR(2000);
	DECLARE @V_TABLE2 		NVARCHAR(2000);
	DECLARE @SCHEMA      NVARCHAR(MAX)
	DECLARE @V_DESCRIPTION	NVARCHAR(2000);
	DECLARE @V_CMD			NVARCHAR(2000);
	DECLARE @V_SEQNO			integer = 0;
	DECLARE @V_PRD_ID		integer;
	DECLARE @V_CREATED_DATE	datetime;
	DECLARE @V_START_DATE	date;
	DECLARE @V_END_DATE		date;
	DECLARE @drivername NVARCHAR(15);
	SET @drivername = 'LASRENWLCOLPREM';
	DECLARE @V_DRIVER_PERIOD VARCHAR(10);
	SET @V_DRIVER_PERIOD =SUBSTRING(CAST(@batch AS VARCHAR),1,6);
	DECLARE @V_TNAME_EB VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_'+@V_DRIVER_PERIOD;
	DECLARE @V_TNAME_EB1 VARCHAR(100) = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_'+@V_DRIVER_PERIOD;
 
	------START GET RUN ID DETAIL FROM ABC------
	DECLARE 
	@BATCH_MASTER_ID  VARCHAR(20) = 0,
	@BATCH_RUN_ID    VARCHAR(20) = 0,
	@JOB_MASTER_ID   VARCHAR(20) = 0,
	@JOB_RUN_ID     VARCHAR(20) = 0,
	@GMT_START_DTTM   VARCHAR(19) = CONVERT(DATETIME2, GETDATE());

	EXEC STAG_ID.USP_GetRunIdReturn
	@JobName     = @JOBNAMESTR,
	@BATCH_MASTER_ID = @BATCH_MASTER_ID OUTPUT,
	@BATCH_RUN_ID  = @BATCH_RUN_ID OUTPUT,
	@JOB_MASTER_ID  = @JOB_MASTER_ID OUTPUT,
	@JOB_RUN_ID   = @JOB_RUN_ID OUTPUT,
	@GMT_START_DTTM = @GMT_START_DTTM OUTPUT;
	------END GET RUN ID DETAIL FROM ABC------

	BEGIN TRY
		SET @SCHEMA ='FOND_ID.'
		SET @V_TABLE1 = 'FOND_ID.FOND_LIFEASIA_ETL4_LIFEASIA_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);
		SET @V_TABLE2 = 'FOND_LIFEASIA_ETL4_LIFEASIA_INVALID_' + SUBSTRING(CAST(@batch AS VARCHAR),1,6);

		SET @V_START_DATE	= convert(date, cast(@batch as varchar)); -- valuation extract date
		PRINT	'Start date :' + convert(varchar,@V_START_DATE,112);
		SET @V_START 	= convert(datetime,getDATE());

		SET @V_DESCRIPTION 	= 'Start ' + @V_FUNCTION_NAME + ' : ' + convert(varchar,@V_START,121);
		PRINT	@V_DESCRIPTION;
		SET @V_SEQNO		= @V_SEQNO + 1;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
	
		---------------------------- DROP TEMPORARY TABLE ------------------------------
		IF OBJECT_ID('tempdb..#etl5_las_Premium_Collected_Renewal_Premium_driver') IS NOT NULL
		BEGIN
			DROP TABLE #etl5_las_Premium_Collected_Renewal_Premium_driver
		END;
		IF OBJECT_ID('tempdb..#acmv') IS NOT NULL
		BEGIN
			DROP TABLE #acmv
		END;
		IF OBJECT_ID('tempdb..#chdr') IS NOT NULL
		BEGIN
			DROP TABLE #chdr
		END;
		IF OBJECT_ID('tempdb..#hpad') IS NOT NULL
		BEGIN
			DROP TABLE #hpad
		END;
		IF OBJECT_ID('tempdb..#covr') IS NOT NULL
		BEGIN
			DROP TABLE #covr
		END;
		IF OBJECT_ID('tempdb..#FINAL') IS NOT NULL
		BEGIN
			DROP TABLE #FINAL
		END;
		IF OBJECT_ID('tempdb..#premium_collected') IS NOT NULL
		BEGIN
			DROP TABLE #premium_collected
		END;
		IF OBJECT_ID('tempdb..#renewal_premium') IS NOT NULL
		BEGIN
			DROP TABLE #renewal_premium
		END;
		IF OBJECT_ID('tempdb..#T0') IS NOT NULL
		BEGIN
			DROP TABLE #T0
		END;

		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'SELECT INTO TEMPORARY TABLE etl5_las_Premium_Collected_Renewal_Premium_driver : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;

		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);		 


		---------------------------- INSERT INTO TEMPORARY TABLE ------------------------------

		
		--		POLICY SELECTION 

		--		DECLARE @sql_selectTEB VARCHAR(8000)=
		--		'select a.* 
		--		into #acmv
		--		from (
		--		select SACSCODE, SACSTYP ,ACCT_PERIOD,TXN_DT,POLICY_NO,T0,AMT_RPT_CCY,LFAGLCODE,''LAS'' AS TAG,SUBSTRING(SUBSTRING(CAST(LFAGLCODE AS VARCHAR),1,6),6,1) NB_FLAG 
		--		from '+@V_TNAME_EB+' where POLICY_NO in (SELECT DISTINCT [Pol No Dec] FROM FOND_ID.FOND_ETL5_LIFEASIA_POLICY_SELECTION)
		--		 union 
		--		select SACSCODE, SACSTYP ,ACCT_PERIOD,TXN_DT,POLICY_NO,T0,AMT_RPT_CCY,LFAGLCODE,''Invalid'' AS TAG,SUBSTRING(SUBSTRING(CAST(LFAGLCODE AS VARCHAR),1,6),6,1) NB_FLAG
		--		 from '+@V_TNAME_EB1+' where POLICY_NO in (SELECT DISTINCT [Pol No Dec] FROM FOND_ID.FOND_ETL5_LIFEASIA_POLICY_SELECTION)
		--		) a';
	
		--drop table IF EXISTS #T0;
	
			DECLARE @sql_selectTEB VARCHAR(8000)=
		'
		SELECT 
			A.*,
			CASE 
				WHEN 
				POL_YEAR_NEW != ''00'' AND (SUN_CD >= ''4111100100'' AND SUN_CD <= ''4112310030'')
				AND (POLICY_NO IS NOT NULL AND POLICY_NO != '''') AND ICG_YEAR != 9999 
				AND PRODUCT_CD != ''T2G'' 
				THEN AMT_RPT_CCY ELSE 0 END AS RENEWAL_PREMIUM,
			CASE 
				WHEN 
				(SUN_CD >= ''4111100100'' AND SUN_CD <= ''4112310030'')	AND (POLICY_NO IS NOT NULL AND POLICY_NO != '''') AND ICG_YEAR != 9999 AND PRODUCT_CD != ''T2G''
				THEN AMT_RPT_CCY ELSE 0 END AS COLLECTED_PREMIUM,
			CASE 
				WHEN 
				POL_YEAR_NEW = ''00'' AND (SUN_CD >= ''4111100100'' AND SUN_CD <= ''4112310030'')
				AND (POLICY_NO IS NOT NULL AND POLICY_NO != '''') AND ICG_YEAR != 9999 
				AND PRODUCT_CD != ''T2G'' 
				THEN AMT_RPT_CCY ELSE 0 END AS FYP,
			CASE 
				WHEN TRANS_CODE = ''T642'' AND BILLFREQ=''00'' THEN ''Single Premium''
				WHEN TRANS_CODE IN (''T642'',''B522'') THEN ''Regular Premium Topup''
				WHEN TRANS_CODE = ''T679'' THEN ''Single Premium Topup''
				ELSE NULL 
				END AS FIRST_YEAR_PREMIUM_TYPE		
			into #acmv
		from (
		SELECT 
			A.*
			,CASE
				WHEN A.TRANS_CODE = ''T679'' THEN ''00''
				WHEN X_MONTH <= 11 THEN ''00''
				WHEN X_MONTH BETWEEN 12 AND 23 THEN ''01''
				WHEN X_MONTH BETWEEN 24 AND 35 THEN ''02''
				WHEN X_MONTH BETWEEN 36 AND 47 THEN ''03''
				WHEN X_MONTH BETWEEN 48 AND 59 THEN ''04''
				WHEN X_MONTH BETWEEN 60 AND 71 THEN ''05''
			ELSE ''06'' END AS POL_YEAR_NEW
			FROM (
			SELECT 
				A.*,
				SUBSTRING(CAST(HOISSDTE AS VARCHAR),1,4) ICG_YEAR
				,(CAST(A.EFFDATE/10000 AS INT) - CAST(OC.OCCDATE/10000 AS INT) ) * 12 + (CAST(SUBSTRING(CAST(A.EFFDATE AS VARCHAR(10)),5,2) AS INT) - CAST(SUBSTRING(CAST(OC.OCCDATE AS VARCHAR(10)),5,2) AS INT)) X_MONTH
				,OC.SRCEBUS
			FROM 
			(
				select 
					SACSCODE, SACSTYP ,ACCT_PERIOD,TXN_DT,POLICY_NO,T0,AMT_RPT_CCY,LFAGLCODE,''LAS'' AS TAG,
					PRODUCT_CD,BENEFIT_CD,EFFDATE,TRANS_CODE,SUN_CD,SUBSTRING(SUBSTRING(CAST(LFAGLCODE AS VARCHAR),1,6),6,1) NB_FLAG,
					BILLFREQ
				from '+@V_TNAME_EB+'
				union all
				select 
					SACSCODE, SACSTYP ,ACCT_PERIOD,TXN_DT,POLICY_NO,T0,AMT_RPT_CCY,LFAGLCODE,''Invalid'' AS TAG,PRODUCT_CD,BENEFIT_CD,EFFDATE,TRANS_CODE,SUN_CD,SUBSTRING(SUBSTRING(CAST(LFAGLCODE AS VARCHAR),1,6),6,1) NB_FLAG,BILLFREQ
				 from '+@V_TNAME_EB1+'
			 )A 
			 LEFT JOIN (SELECT CHDRNUM, CAST(MAX(HOISSDTE) AS VARCHAR(10)) as HOISSDTE from STAG_ID.STAG_LIFEASIA_HPADPF GROUP BY CHDRNUM)B ON A.POLICY_NO=B.CHDRNUM
			 LEFT JOIN (SELECT CHDRNUM,SRCEBUS, MAX(OCCDATE) OCCDATE,MAX(TRANNO) TRANNO FROM STAG_ID.STAG_LIFEASIA_CHDRPF WHERE VALIDFLAG <> 2 GROUP BY CHDRNUM,SRCEBUS) OC 
			 ON OC.CHDRNUM = A.POLICY_NO
			 )A
		)A';
	
		--Create Dynamic table for
		EXEC( @sql_selectTEB);
			
		select distinct
		PRODUCT_CD ,T0 
		into #T0
		from FOND_ID.FOND_ETL5_LIFEASIA_MASTER_T0 
		where 
		ACCT_PERIOD  
		BETWEEN 
		YEAR(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4))))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, cast(@batch as varchar(4)))))
				AND 
		YEAR(DATEADD(month, 0,CONVERT(date,@batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch))) 
		OR ACCT_PERIOD = '9999999'
		and T0 not in ('-','0000LAS','ITYT000','0000000')
		;

		select
			a.ACCT_PERIOD ACCOUNTING_PERIOD
			,a.TXN_DT TRANSACTION_DATE
			,a.POLICY_NO POLICY_NO
			,a.BENEFIT_CD BENF_CD
			,a.PRODUCT_CD PROD_CD
			,f.T0 ADJ_T0
			,a.SRCEBUS DIST_CHAN
			,a.AMT_RPT_CCY GROSS_PREMIUM
			,a.RENEWAL_PREMIUM RENEWAL_PREMIUM
			,a.COLLECTED_PREMIUM PREMIUM_COLLECTED
			,a.FYP FYP_PREMIUM
			,a.RENEWAL_PREMIUM PERSISTENCY_PREMIUM
			,a.FIRST_YEAR_PREMIUM_TYPE FIRST_YEAR_PREMIUM_TYPE
			,a.SUN_CD
			into #etl5_las_Premium_Collected_Renewal_Premium_driver --#FINAL
			from #acmv a
			left join (SELECT row_number () OVER (PARTITION BY PRODUCT_CD order by T0 desc) RN , * FROM #T0) f on a.PRODUCT_CD = f.PRODUCT_CD AND f.RN = 1;
					
	
		---------------------------- TO Handle rerun process ------------------------------
		BEGIN TRANSACTION;
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'DELETE DATA FROM FOND_ID.[FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);	 

		-- SELECT DISTINCT DRIVER_PERIOD FROM FOND_ID.FOND_ETL5_APE_DRIVER_DETAIL
	
		DELETE FROM FOND_ID.[FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM] 
		WHERE ACCOUNTING_PERIOD =  YEAR(DATEADD(month, 0,CONVERT(date, @batch))) * 1000 + 0 + MONTH(DATEADD(month, 0,CONVERT(date, @batch)));

		 ---------------------------- TO Handle rerun process ------------------------------
		SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	= 'INSERT INTO TABLE FOND_ID.[FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM] : ' + convert(varchar,@V_START,121);
		PRINT @V_DESCRIPTION;
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION)
		VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);


		INSERT INTO [FOND_ID].[FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM]
		SELECT ACCOUNTING_PERIOD
				,TRANSACTION_DATE
				,POLICY_NO
				,BENF_CD
				,PROD_CD
				,ADJ_T0
				,DIST_CHAN
				,GROSS_PREMIUM
				,RENEWAL_PREMIUM
				,PREMIUM_COLLECTED
				,FYP_PREMIUM
				,PERSISTENCY_PREMIUM
				,FIRST_YEAR_PREMIUM_TYPE
				,SUN_CD
				,@BATCH_MASTER_ID AS BATCH_MASTER_IDL
				,@BATCH_RUN_ID AS BATCH_RUN_ID
				,@JOB_MASTER_ID AS JOB_MASTER_ID
				,@JOB_RUN_ID AS JOB_RUN_ID
				,SUBSTRING( CAST(@batch AS VARCHAR),1,6) BATCHDATE
				,GETDATE() ETL_PROCESS_DATE_TIME
		FROM #etl5_las_Premium_Collected_Renewal_Premium_driver
		;
	
		---------------------------- ETL5 LOGGING ----------------------------      
       	
		DECLARE @V_TOTAL_ROWS integer = 0;
		DECLARE @V_PERIOD nvarchar(10);
		SET @V_TOTAL_ROWS = (SELECT COUNT(1) as totalrows FROM #etl5_las_Premium_Collected_Renewal_Premium_driver) ;
        SET @V_PERIOD = CONCAT(YEAR(DATEADD(month, 0,CONVERT(date, @batch))), RIGHT(CONCAT('000', MONTH(DATEADD(month, 0,CONVERT(date, @batch)))),3))

		INSERT INTO FOND_ID.FOND_IFRS17_ETL5_PROC_LOG (PROC_DATE,FUNC_NAME,TRGT_TABLE_NAME,DRIVER_NAME,TOTAL_ROWS,DESCRIPTION,PERIOD)
		VALUES (@V_START,@V_FUNCTION_NAME,'FOND_ID.FOND_ETL5_LIFEASIA_DRIVER_DETAIL_PREMIUM_COLLECTED_RENEWAL_PREMIUM'
		,@drivername,@V_TOTAL_ROWS,'MTD',@V_PERIOD);
		
		SELECT 'Total records : ' + @V_PERIOD;

		IF @@TRANCOUNT > 0
        COMMIT;


		---------------------------- DROP TEMPORARY TABLE ------------------------------  
		IF OBJECT_ID('tempdb..#etl5_las_Premium_Collected_Renewal_Premium_driver') IS NOT NULL
		BEGIN
			DROP TABLE #etl5_las_Premium_Collected_Renewal_Premium_driver
		END;

	END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
                ROLLBACK;
	    SET @V_SEQNO 	= @V_SEQNO + 1;
		SET @V_START 	= convert(datetime,getDATE());
		SET @V_END 	= convert(datetime,getDATE());
		SET @V_DESCRIPTION	='Error execution for function on ' 
							+ @V_FUNCTION_NAME + ' at ' + convert(varchar,@V_START,121) 
							+ ' with Error Message : ' + ERROR_MESSAGE();
		PRINT @V_DESCRIPTION;
		
		
		INSERT into FOND_ID.FOND_IFRS17_PROC_LOG(PROC_DATE,FUNC_NAME,SEQNO,DESCRIPTION) VALUES (@V_START,@V_FUNCTION_NAME,@V_SEQNO,@V_DESCRIPTION);
		raiserror(@V_DESCRIPTION, 18, 1)
	END CATCH
END;

